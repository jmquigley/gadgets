// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test creation of a simple Tag instance 1`] = `
<Wrapper
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Tag"
  onClick={[Function]}
  onError={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  usedelete={false}
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-tag"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={Object {}}
  >
    <Styled(Label)
      disabled={false}
      noedit={true}
      text="test tag"
      visible={true}
    />
  </styled.div>
</Wrapper>
`;

exports[`Test disabling of the simple Tag instance 1`] = `
<Tag
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={true}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Tag"
  onClick={[MockFunction]}
  onDelete={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  usedelete={true}
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={true}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Tag"
    onClick={[MockFunction]}
    onError={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    tooltip=""
    top=""
    usedelete={true}
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-tag"
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        style={Object {}}
      >
        <StyledComponent
          className="ui-tag"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kAzzGY",
                "isStatic": false,
                "lastClassName": "iLHaNu",
                "rules": Array [
                  "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kAzzGY",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          style={Object {}}
        >
          <div
            className="ui-tag sc-kAzzGY iLHaNu"
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            style={Object {}}
          >
            <Styled(Label)
              disabled={true}
              noedit={true}
              text="test tag"
              visible={true}
            >
              <StyledComponent
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-chPdSV",
                      "isStatic": true,
                      "lastClassName": "byfFmt",
                      "rules": Array [],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Label)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-chPdSV",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                noedit={true}
                text="test tag"
                visible={true}
              >
                <Label
                  bottom=""
                  className="sc-chPdSV byfFmt"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={true}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  id=""
                  left=""
                  location="none"
                  noedit={true}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Label"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onUpdate={[Function]}
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  text="test tag"
                  theme={null}
                  tooltip=""
                  top=""
                  useedit={false}
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-chPdSV byfFmt"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={true}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    id=""
                    left=""
                    location="none"
                    noedit={true}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Label"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                    onError={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onUpdate={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    text="test tag"
                    theme={null}
                    tooltip=""
                    top=""
                    useedit={false}
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.span
                        className="ui-label sc-chPdSV byfFmt"
                        contentEditable={false}
                        disabled={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDoubleClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        sizing="normal"
                        style={Object {}}
                        suppressContentEditableWarning={true}
                        visible={true}
                      >
                        <StyledComponent
                          className="ui-label sc-chPdSV byfFmt"
                          contentEditable={false}
                          disabled={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-jzJRlG",
                                "isStatic": false,
                                "lastClassName": "duGDxt",
                                "rules": Array [
                                  "
	background-color: inherit;

	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-jzJRlG",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={[Function]}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDoubleClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          sizing="normal"
                          style={Object {}}
                          suppressContentEditableWarning={true}
                          visible={true}
                        >
                          <span
                            className="ui-label sc-chPdSV byfFmt sc-jzJRlG duGDxt"
                            contentEditable={false}
                            disabled={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDoubleClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            style={Object {}}
                            suppressContentEditableWarning={true}
                          >
                            test tag
                          </span>
                        </StyledComponent>
                      </styled.span>
                    </ThemeProvider>
                  </Wrapper>
                </Label>
              </StyledComponent>
            </Styled(Label)>
            <Styled(ButtonCircle)
              disabled={true}
              iconName="times"
              onClick={[Function]}
              sizing="small"
              style={
                Object {
                  "backgroundColor": "#ffffff",
                  "borderColor": "#d9534f",
                  "color": "#d9534f",
                  "opacity": "0.0",
                }
              }
              visible={true}
            >
              <StyledComponent
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cSHVUG",
                      "isStatic": false,
                      "lastClassName": "fZQdpw",
                      "rules": Array [
                        "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                        [Function],
                        " ease-in-out;
	width: unset;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(ButtonCircle)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-cSHVUG",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                iconName="times"
                onClick={[Function]}
                sizing="small"
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#d9534f",
                    "color": "#d9534f",
                    "opacity": "0.0",
                  }
                }
                visible={true}
              >
                <ButtonCircle
                  bottom=""
                  className="sc-cSHVUG fZQdpw"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={true}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  iconName="times"
                  iconStyle=""
                  id=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="ButtonCircle"
                  onClick={[Function]}
                  padding=""
                  selected={false}
                  sizing="small"
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#d9534f",
                      "color": "#d9534f",
                      "opacity": "0.0",
                    }
                  }
                  testing={true}
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-cSHVUG fZQdpw"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={true}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    iconName="times"
                    iconStyle=""
                    id=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="ButtonCircle"
                    onClick={[Function]}
                    onError={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="small"
                    style={
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderColor": "#d9534f",
                        "color": "#d9534f",
                        "opacity": "0.0",
                      }
                    }
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.div
                        className="ui-button-circle sc-cSHVUG fZQdpw"
                      >
                        <StyledComponent
                          className="ui-button-circle sc-cSHVUG fZQdpw"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "nJPZJ",
                                "rules": Array [
                                  "
	",
                                  "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                  "
	height: unset;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                          >
                            <styled.div
                              height="18px"
                              width="18px"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-dnqmqq",
                                      "isStatic": false,
                                      "lastClassName": "emcCYn",
                                      "rules": Array [
                                        "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                        [Function],
                                        ";
	width: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-dnqmqq",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                height="18px"
                                width="18px"
                              >
                                <div
                                  className="sc-dnqmqq emcCYn"
                                  height="18px"
                                  width="18px"
                                >
                                  <Styled(Button)
                                    bottom=""
                                    className="sc-cSHVUG fZQdpw"
                                    contentEditable={false}
                                    controlled={true}
                                    direction="right"
                                    disabled={true}
                                    err={null}
                                    errorMessage=""
                                    focus={false}
                                    height=""
                                    iconName="times"
                                    iconStyle=""
                                    id=""
                                    left=""
                                    location="none"
                                    noedit={false}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="ButtonCircle"
                                    onClick={[Function]}
                                    padding=""
                                    selected={false}
                                    sizing="small"
                                    style={
                                      Object {
                                        "backgroundColor": "#ffffff",
                                        "borderColor": "#d9534f",
                                        "color": "#d9534f",
                                        "opacity": "0.0",
                                      }
                                    }
                                    testing={true}
                                    theme={null}
                                    tooltip=""
                                    top=""
                                    visible={true}
                                    width=""
                                    xcss={null}
                                  >
                                    <StyledComponent
                                      bottom=""
                                      className="sc-cSHVUG fZQdpw"
                                      contentEditable={false}
                                      controlled={true}
                                      direction="right"
                                      disabled={true}
                                      err={null}
                                      errorMessage=""
                                      focus={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iwsKbI",
                                            "isStatic": false,
                                            "lastClassName": "hrmGrl",
                                            "rules": Array [
                                              "
	border-radius: 4em;
	padding: ",
                                              [Function],
                                              ";

	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "defaultStyles": Object {},
                                          "displayName": "Styled(Button)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iwsKbI",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                          Symbol(Symbol.hasInstance): [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height=""
                                      iconName="times"
                                      iconStyle=""
                                      id=""
                                      left=""
                                      location="none"
                                      noedit={false}
                                      nohover={false}
                                      noripple={false}
                                      notheme={false}
                                      obj="ButtonCircle"
                                      onClick={[Function]}
                                      padding=""
                                      selected={false}
                                      sizing="small"
                                      style={
                                        Object {
                                          "backgroundColor": "#ffffff",
                                          "borderColor": "#d9534f",
                                          "color": "#d9534f",
                                          "opacity": "0.0",
                                        }
                                      }
                                      testing={true}
                                      theme={null}
                                      tooltip=""
                                      top=""
                                      visible={true}
                                      width=""
                                      xcss={null}
                                    >
                                      <Button
                                        bottom=""
                                        className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                        contentEditable={false}
                                        controlled={true}
                                        direction="right"
                                        disabled={true}
                                        err={null}
                                        errorMessage=""
                                        focus={false}
                                        height=""
                                        iconName="times"
                                        iconStyle=""
                                        id=""
                                        left=""
                                        location="none"
                                        noedit={false}
                                        nohover={false}
                                        noripple={false}
                                        notheme={false}
                                        obj="ButtonCircle"
                                        onClick={[Function]}
                                        padding=""
                                        selected={false}
                                        sizing="small"
                                        style={
                                          Object {
                                            "backgroundColor": "#ffffff",
                                            "borderColor": "#d9534f",
                                            "color": "#d9534f",
                                            "opacity": "0.0",
                                          }
                                        }
                                        testing={true}
                                        theme={null}
                                        tooltip=""
                                        top=""
                                        visible={true}
                                        width=""
                                        xcss={null}
                                      >
                                        <Wrapper
                                          bottom=""
                                          className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={true}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          iconName="times"
                                          iconStyle=""
                                          id=""
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="ButtonCircle"
                                          onClick={[Function]}
                                          onError={[Function]}
                                          padding=""
                                          reset={false}
                                          selected={false}
                                          sizing="small"
                                          style={
                                            Object {
                                              "backgroundColor": "#ffffff",
                                              "borderColor": "#d9534f",
                                              "color": "#d9534f",
                                              "opacity": "0.0",
                                            }
                                          }
                                          testing={true}
                                          theme={null}
                                          tooltip=""
                                          top=""
                                          visible={true}
                                          width=""
                                          xcss={null}
                                        >
                                          <ThemeProvider
                                            theme={
                                              Object {
                                                "backgroundColor": "#ffffff",
                                                "borderColor": "#c0c0c0",
                                                "color": "#000000",
                                                "headerBackgroundColor": "#004358",
                                                "headerForegroundColor": "#ffffff",
                                                "headerHoverColor": "#ffe11a",
                                                "hoverColor": "#c0c0c0",
                                                "inputBorderColor": "#c0c0c0",
                                                "itemHoverColor": "#bedb39",
                                                "selectedBackgroundColor": "#1f8a70",
                                                "selectedForegroundColor": "#ffe11a",
                                                "titleBarBackgroundColor": "#004358",
                                                "titleBarForegroundColor": "#ffe11a",
                                                "tooltipBackgroundColor": "#708090",
                                                "tooltipForegroundColor": "#ffffff",
                                                "transitionDelay": "0.5s",
                                              }
                                            }
                                          >
                                            <styled.div
                                              className="ui-button nohover sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                              disabled={true}
                                              id="Button-0"
                                              onClick={[Function]}
                                              sizing="small"
                                              style={
                                                Object {
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#d9534f",
                                                  "color": "#d9534f",
                                                  "opacity": "0.0",
                                                }
                                              }
                                              visible={true}
                                            >
                                              <StyledComponent
                                                className="ui-button nohover sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                disabled={true}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-gzVnrw",
                                                      "isStatic": false,
                                                      "lastClassName": "fqspZq",
                                                      "rules": Array [
                                                        "
	",
                                                        "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                        "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        ";
	}

	",
                                                        [Function],
                                                        "
	",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.div",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-gzVnrw",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                id="Button-0"
                                                onClick={[Function]}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                visible={true}
                                              >
                                                <div
                                                  className="ui-button nohover sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw fqspZq"
                                                  disabled={true}
                                                  id="Button-0"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                >
                                                  <Icon
                                                    bottom=""
                                                    className=""
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    id=""
                                                    imageFile=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Icon"
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={Object {}}
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className=""
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      id=""
                                                      imageFile=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="Icon"
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={Object {}}
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.i
                                                          bottom=""
                                                          className="ui-icon fa fa-fw fa-times"
                                                          contentEditable={false}
                                                          controlled={true}
                                                          direction="right"
                                                          disabled={false}
                                                          err={null}
                                                          errorMessage=""
                                                          focus={false}
                                                          height=""
                                                          iconName="times"
                                                          id=""
                                                          imageFile=""
                                                          left=""
                                                          location="none"
                                                          noedit={false}
                                                          nohover={false}
                                                          noripple={false}
                                                          notheme={false}
                                                          obj="Icon"
                                                          padding=""
                                                          selected={false}
                                                          sizing="small"
                                                          style={Object {}}
                                                          testing={true}
                                                          theme={null}
                                                          tooltip=""
                                                          top=""
                                                          visible={true}
                                                          width=""
                                                          xcss={null}
                                                        >
                                                          <StyledComponent
                                                            bottom=""
                                                            className="ui-icon fa fa-fw fa-times"
                                                            contentEditable={false}
                                                            controlled={true}
                                                            direction="right"
                                                            disabled={false}
                                                            err={null}
                                                            errorMessage=""
                                                            focus={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bwzfXH",
                                                                  "isStatic": false,
                                                                  "lastClassName": "xVJTk",
                                                                  "rules": Array [
                                                                    "
	text-align: center;
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.i",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bwzfXH",
                                                                "target": "i",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            height=""
                                                            iconName="times"
                                                            id=""
                                                            imageFile=""
                                                            left=""
                                                            location="none"
                                                            noedit={false}
                                                            nohover={false}
                                                            noripple={false}
                                                            notheme={false}
                                                            obj="Icon"
                                                            padding=""
                                                            selected={false}
                                                            sizing="small"
                                                            style={Object {}}
                                                            testing={true}
                                                            theme={null}
                                                            tooltip=""
                                                            top=""
                                                            visible={true}
                                                            width=""
                                                            xcss={null}
                                                          >
                                                            <i
                                                              className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                              contentEditable={false}
                                                              direction="right"
                                                              disabled={false}
                                                              height=""
                                                              id=""
                                                              selected={false}
                                                              style={Object {}}
                                                              width=""
                                                            />
                                                          </StyledComponent>
                                                        </styled.i>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Icon>
                                                </div>
                                              </StyledComponent>
                                            </styled.div>
                                          </ThemeProvider>
                                        </Wrapper>
                                      </Button>
                                    </StyledComponent>
                                  </Styled(Button)>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </ThemeProvider>
                  </Wrapper>
                </ButtonCircle>
              </StyledComponent>
            </Styled(ButtonCircle)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Tag>
`;

exports[`Test making Tag invisible 1`] = `
<Tag
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={true}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Tag"
  onClick={[Function]}
  onDelete={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  usedelete={true}
  visible={false}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={true}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Tag"
    onClick={[Function]}
    onError={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    tooltip=""
    top=""
    usedelete={true}
    visible={false}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-tag"
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        style={Object {}}
      >
        <StyledComponent
          className="ui-tag"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kAzzGY",
                "isStatic": false,
                "lastClassName": "iLHaNu",
                "rules": Array [
                  "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kAzzGY",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          style={Object {}}
        >
          <div
            className="ui-tag sc-kAzzGY iLHaNu"
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            style={Object {}}
          >
            <Styled(Label)
              disabled={true}
              noedit={true}
              text="test tag"
              visible={false}
            >
              <StyledComponent
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-chPdSV",
                      "isStatic": true,
                      "lastClassName": "byfFmt",
                      "rules": Array [],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Label)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-chPdSV",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                noedit={true}
                text="test tag"
                visible={false}
              >
                <Label
                  bottom=""
                  className="sc-chPdSV byfFmt"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={true}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  id=""
                  left=""
                  location="none"
                  noedit={true}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Label"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onUpdate={[Function]}
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  text="test tag"
                  theme={null}
                  tooltip=""
                  top=""
                  useedit={false}
                  visible={false}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-chPdSV byfFmt"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={true}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    id=""
                    left=""
                    location="none"
                    noedit={true}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Label"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                    onError={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onUpdate={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    text="test tag"
                    theme={null}
                    tooltip=""
                    top=""
                    useedit={false}
                    visible={false}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.span
                        className="ui-label sc-chPdSV byfFmt"
                        contentEditable={false}
                        disabled={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDoubleClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        sizing="normal"
                        style={Object {}}
                        suppressContentEditableWarning={true}
                        visible={false}
                      >
                        <StyledComponent
                          className="ui-label sc-chPdSV byfFmt"
                          contentEditable={false}
                          disabled={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-jzJRlG",
                                "isStatic": false,
                                "lastClassName": "eMkDPa",
                                "rules": Array [
                                  "
	background-color: inherit;

	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-jzJRlG",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={[Function]}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDoubleClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          sizing="normal"
                          style={Object {}}
                          suppressContentEditableWarning={true}
                          visible={false}
                        >
                          <span
                            className="ui-label sc-chPdSV byfFmt sc-jzJRlG eMkDPa"
                            contentEditable={false}
                            disabled={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDoubleClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            style={Object {}}
                            suppressContentEditableWarning={true}
                          >
                            test tag
                          </span>
                        </StyledComponent>
                      </styled.span>
                    </ThemeProvider>
                  </Wrapper>
                </Label>
              </StyledComponent>
            </Styled(Label)>
            <Styled(ButtonCircle)
              disabled={true}
              iconName="times"
              onClick={[Function]}
              sizing="small"
              style={
                Object {
                  "backgroundColor": "#ffffff",
                  "borderColor": "#d9534f",
                  "color": "#d9534f",
                  "opacity": "0.0",
                }
              }
              visible={false}
            >
              <StyledComponent
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cSHVUG",
                      "isStatic": false,
                      "lastClassName": "fZQdpw",
                      "rules": Array [
                        "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                        [Function],
                        " ease-in-out;
	width: unset;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(ButtonCircle)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-cSHVUG",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                iconName="times"
                onClick={[Function]}
                sizing="small"
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#d9534f",
                    "color": "#d9534f",
                    "opacity": "0.0",
                  }
                }
                visible={false}
              >
                <ButtonCircle
                  bottom=""
                  className="sc-cSHVUG fZQdpw"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={true}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  iconName="times"
                  iconStyle=""
                  id=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="ButtonCircle"
                  onClick={[Function]}
                  padding=""
                  selected={false}
                  sizing="small"
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#d9534f",
                      "color": "#d9534f",
                      "opacity": "0.0",
                    }
                  }
                  testing={true}
                  theme={null}
                  tooltip=""
                  top=""
                  visible={false}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-cSHVUG fZQdpw"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={true}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    iconName="times"
                    iconStyle=""
                    id=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="ButtonCircle"
                    onClick={[Function]}
                    onError={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="small"
                    style={
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderColor": "#d9534f",
                        "color": "#d9534f",
                        "opacity": "0.0",
                      }
                    }
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    visible={false}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.div
                        className="ui-button-circle sc-cSHVUG fZQdpw"
                      >
                        <StyledComponent
                          className="ui-button-circle sc-cSHVUG fZQdpw"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "nJPZJ",
                                "rules": Array [
                                  "
	",
                                  "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                  "
	height: unset;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                          >
                            <styled.div
                              height="18px"
                              width="18px"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-dnqmqq",
                                      "isStatic": false,
                                      "lastClassName": "emcCYn",
                                      "rules": Array [
                                        "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                        [Function],
                                        ";
	width: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-dnqmqq",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                height="18px"
                                width="18px"
                              >
                                <div
                                  className="sc-dnqmqq emcCYn"
                                  height="18px"
                                  width="18px"
                                >
                                  <Styled(Button)
                                    bottom=""
                                    className="sc-cSHVUG fZQdpw"
                                    contentEditable={false}
                                    controlled={true}
                                    direction="right"
                                    disabled={true}
                                    err={null}
                                    errorMessage=""
                                    focus={false}
                                    height=""
                                    iconName="times"
                                    iconStyle=""
                                    id=""
                                    left=""
                                    location="none"
                                    noedit={false}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="ButtonCircle"
                                    onClick={[Function]}
                                    padding=""
                                    selected={false}
                                    sizing="small"
                                    style={
                                      Object {
                                        "backgroundColor": "#ffffff",
                                        "borderColor": "#d9534f",
                                        "color": "#d9534f",
                                        "opacity": "0.0",
                                      }
                                    }
                                    testing={true}
                                    theme={null}
                                    tooltip=""
                                    top=""
                                    visible={false}
                                    width=""
                                    xcss={null}
                                  >
                                    <StyledComponent
                                      bottom=""
                                      className="sc-cSHVUG fZQdpw"
                                      contentEditable={false}
                                      controlled={true}
                                      direction="right"
                                      disabled={true}
                                      err={null}
                                      errorMessage=""
                                      focus={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-iwsKbI",
                                            "isStatic": false,
                                            "lastClassName": "hrmGrl",
                                            "rules": Array [
                                              "
	border-radius: 4em;
	padding: ",
                                              [Function],
                                              ";

	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "defaultStyles": Object {},
                                          "displayName": "Styled(Button)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-iwsKbI",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                          Symbol(Symbol.hasInstance): [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height=""
                                      iconName="times"
                                      iconStyle=""
                                      id=""
                                      left=""
                                      location="none"
                                      noedit={false}
                                      nohover={false}
                                      noripple={false}
                                      notheme={false}
                                      obj="ButtonCircle"
                                      onClick={[Function]}
                                      padding=""
                                      selected={false}
                                      sizing="small"
                                      style={
                                        Object {
                                          "backgroundColor": "#ffffff",
                                          "borderColor": "#d9534f",
                                          "color": "#d9534f",
                                          "opacity": "0.0",
                                        }
                                      }
                                      testing={true}
                                      theme={null}
                                      tooltip=""
                                      top=""
                                      visible={false}
                                      width=""
                                      xcss={null}
                                    >
                                      <Button
                                        bottom=""
                                        className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                        contentEditable={false}
                                        controlled={true}
                                        direction="right"
                                        disabled={true}
                                        err={null}
                                        errorMessage=""
                                        focus={false}
                                        height=""
                                        iconName="times"
                                        iconStyle=""
                                        id=""
                                        left=""
                                        location="none"
                                        noedit={false}
                                        nohover={false}
                                        noripple={false}
                                        notheme={false}
                                        obj="ButtonCircle"
                                        onClick={[Function]}
                                        padding=""
                                        selected={false}
                                        sizing="small"
                                        style={
                                          Object {
                                            "backgroundColor": "#ffffff",
                                            "borderColor": "#d9534f",
                                            "color": "#d9534f",
                                            "opacity": "0.0",
                                          }
                                        }
                                        testing={true}
                                        theme={null}
                                        tooltip=""
                                        top=""
                                        visible={false}
                                        width=""
                                        xcss={null}
                                      >
                                        <Wrapper
                                          bottom=""
                                          className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={true}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          iconName="times"
                                          iconStyle=""
                                          id=""
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="ButtonCircle"
                                          onClick={[Function]}
                                          onError={[Function]}
                                          padding=""
                                          reset={false}
                                          selected={false}
                                          sizing="small"
                                          style={
                                            Object {
                                              "backgroundColor": "#ffffff",
                                              "borderColor": "#d9534f",
                                              "color": "#d9534f",
                                              "opacity": "0.0",
                                            }
                                          }
                                          testing={true}
                                          theme={null}
                                          tooltip=""
                                          top=""
                                          visible={false}
                                          width=""
                                          xcss={null}
                                        >
                                          <ThemeProvider
                                            theme={
                                              Object {
                                                "backgroundColor": "#ffffff",
                                                "borderColor": "#c0c0c0",
                                                "color": "#000000",
                                                "headerBackgroundColor": "#004358",
                                                "headerForegroundColor": "#ffffff",
                                                "headerHoverColor": "#ffe11a",
                                                "hoverColor": "#c0c0c0",
                                                "inputBorderColor": "#c0c0c0",
                                                "itemHoverColor": "#bedb39",
                                                "selectedBackgroundColor": "#1f8a70",
                                                "selectedForegroundColor": "#ffe11a",
                                                "titleBarBackgroundColor": "#004358",
                                                "titleBarForegroundColor": "#ffe11a",
                                                "tooltipBackgroundColor": "#708090",
                                                "tooltipForegroundColor": "#ffffff",
                                                "transitionDelay": "0.5s",
                                              }
                                            }
                                          >
                                            <styled.div
                                              className="ui-button nohover sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                              disabled={true}
                                              id="Button-0"
                                              onClick={[Function]}
                                              sizing="small"
                                              style={
                                                Object {
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#d9534f",
                                                  "color": "#d9534f",
                                                  "opacity": "0.0",
                                                }
                                              }
                                              visible={false}
                                            >
                                              <StyledComponent
                                                className="ui-button nohover sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                disabled={true}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-gzVnrw",
                                                      "isStatic": false,
                                                      "lastClassName": "fhYORU",
                                                      "rules": Array [
                                                        "
	",
                                                        "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                        "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        ";
	}

	",
                                                        [Function],
                                                        "
	",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.div",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-gzVnrw",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                id="Button-0"
                                                onClick={[Function]}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                visible={false}
                                              >
                                                <div
                                                  className="ui-button nohover sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw fhYORU"
                                                  disabled={true}
                                                  id="Button-0"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                >
                                                  <Icon
                                                    bottom=""
                                                    className=""
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    id=""
                                                    imageFile=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Icon"
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={Object {}}
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className=""
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      id=""
                                                      imageFile=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="Icon"
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={Object {}}
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.i
                                                          bottom=""
                                                          className="ui-icon fa fa-fw fa-times"
                                                          contentEditable={false}
                                                          controlled={true}
                                                          direction="right"
                                                          disabled={false}
                                                          err={null}
                                                          errorMessage=""
                                                          focus={false}
                                                          height=""
                                                          iconName="times"
                                                          id=""
                                                          imageFile=""
                                                          left=""
                                                          location="none"
                                                          noedit={false}
                                                          nohover={false}
                                                          noripple={false}
                                                          notheme={false}
                                                          obj="Icon"
                                                          padding=""
                                                          selected={false}
                                                          sizing="small"
                                                          style={Object {}}
                                                          testing={true}
                                                          theme={null}
                                                          tooltip=""
                                                          top=""
                                                          visible={true}
                                                          width=""
                                                          xcss={null}
                                                        >
                                                          <StyledComponent
                                                            bottom=""
                                                            className="ui-icon fa fa-fw fa-times"
                                                            contentEditable={false}
                                                            controlled={true}
                                                            direction="right"
                                                            disabled={false}
                                                            err={null}
                                                            errorMessage=""
                                                            focus={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bwzfXH",
                                                                  "isStatic": false,
                                                                  "lastClassName": "xVJTk",
                                                                  "rules": Array [
                                                                    "
	text-align: center;
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.i",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bwzfXH",
                                                                "target": "i",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            height=""
                                                            iconName="times"
                                                            id=""
                                                            imageFile=""
                                                            left=""
                                                            location="none"
                                                            noedit={false}
                                                            nohover={false}
                                                            noripple={false}
                                                            notheme={false}
                                                            obj="Icon"
                                                            padding=""
                                                            selected={false}
                                                            sizing="small"
                                                            style={Object {}}
                                                            testing={true}
                                                            theme={null}
                                                            tooltip=""
                                                            top=""
                                                            visible={true}
                                                            width=""
                                                            xcss={null}
                                                          >
                                                            <i
                                                              className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                              contentEditable={false}
                                                              direction="right"
                                                              disabled={false}
                                                              height=""
                                                              id=""
                                                              selected={false}
                                                              style={Object {}}
                                                              width=""
                                                            />
                                                          </StyledComponent>
                                                        </styled.i>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Icon>
                                                </div>
                                              </StyledComponent>
                                            </styled.div>
                                          </ThemeProvider>
                                        </Wrapper>
                                      </Button>
                                    </StyledComponent>
                                  </Styled(Button)>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </ThemeProvider>
                  </Wrapper>
                </ButtonCircle>
              </StyledComponent>
            </Styled(ButtonCircle)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Tag>
`;

exports[`Test retrieval of Tag props object 1`] = `
Object {
  "bottom": "",
  "children": null,
  "className": "",
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": "",
  "focus": false,
  "height": "",
  "id": "",
  "left": "",
  "location": "none",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "notheme": false,
  "obj": "Tag",
  "onClick": [Function],
  "onDelete": [Function],
  "onMouseOut": [Function],
  "onMouseOver": [Function],
  "padding": "",
  "selected": false,
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "theme": null,
  "tooltip": "",
  "top": "",
  "usedelete": false,
  "visible": true,
  "width": "",
  "xcss": null,
}
`;
