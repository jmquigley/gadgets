// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create a new dynamic TagList by adding a new input 1`] = `
<TagList
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  nosort={false}
  notheme={false}
  obj="TagList"
  onBlur={[Function]}
  onChange={[Function]}
  onDelete={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[MockFunction]}
  onNew={[MockFunction]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  tags={
    Array [
      "c",
      "b",
      "d",
    ]
  }
  testing={true}
  theme={null}
  tooltip=""
  top=""
  useinput={true}
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    nosort={false}
    notheme={false}
    obj="TagList"
    onBlur={[Function]}
    onChange={[Function]}
    onDelete={[Function]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[MockFunction]}
    onNew={[MockFunction]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    tags={
      Array [
        "c",
        "b",
        "d",
      ]
    }
    testing={true}
    theme={null}
    tooltip=""
    top=""
    useinput={true}
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-taglist"
        sizing="normal"
        style={Object {}}
      >
        <StyledComponent
          className="ui-taglist"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kpOJdX",
                "isStatic": false,
                "lastClassName": "jTpUYR",
                "rules": Array [
                  "
	display: inline;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kpOJdX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          sizing="normal"
          style={Object {}}
        >
          <div
            className="ui-taglist sc-kpOJdX jTpUYR"
            style={Object {}}
          >
            <Styled(Icon)
              disabled={false}
              iconName="tags"
              sizing="normal"
              visible={true}
            >
              <StyledComponent
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kgoBCf",
                      "isStatic": true,
                      "lastClassName": "cmzSXO",
                      "rules": Array [
                        "
	margin-right: 5px;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Icon)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kgoBCf",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                iconName="tags"
                sizing="normal"
                visible={true}
              >
                <Icon
                  bottom=""
                  className="sc-kgoBCf cmzSXO"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  iconName="tags"
                  id=""
                  imageFile=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Icon"
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-kgoBCf cmzSXO"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    iconName="tags"
                    id=""
                    imageFile=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Icon"
                    onError={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.i
                        bottom=""
                        className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                        contentEditable={false}
                        controlled={true}
                        direction="right"
                        disabled={false}
                        err={null}
                        errorMessage=""
                        focus={false}
                        height=""
                        iconName="tags"
                        id=""
                        imageFile=""
                        left=""
                        location="none"
                        noedit={false}
                        nohover={false}
                        noripple={false}
                        notheme={false}
                        obj="Icon"
                        padding=""
                        selected={false}
                        sizing="normal"
                        style={Object {}}
                        testing={true}
                        theme={null}
                        tooltip=""
                        top=""
                        visible={true}
                        width=""
                        xcss={null}
                      >
                        <StyledComponent
                          bottom=""
                          className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          focus={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "xVJTk",
                                "rules": Array [
                                  "
	text-align: center;
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.i",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "i",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height=""
                          iconName="tags"
                          id=""
                          imageFile=""
                          left=""
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          notheme={false}
                          obj="Icon"
                          padding=""
                          selected={false}
                          sizing="normal"
                          style={Object {}}
                          testing={true}
                          theme={null}
                          tooltip=""
                          top=""
                          visible={true}
                          width=""
                          xcss={null}
                        >
                          <i
                            className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO sc-bwzfXH hBOHvv"
                            contentEditable={false}
                            direction="right"
                            disabled={false}
                            height=""
                            id=""
                            selected={false}
                            style={Object {}}
                            width=""
                          />
                        </StyledComponent>
                      </styled.i>
                    </ThemeProvider>
                  </Wrapper>
                </Icon>
              </StyledComponent>
            </Styled(Icon)>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="b"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="b"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="b"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="b"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="b"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        b
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="c"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="c"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="c"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="c"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="c"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        c
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="d"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="d"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="d"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="d"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="d"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        d
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Styled(TextField)
              disabled={false}
              noborder={true}
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              placeholder="new"
              size={1}
              sizing="normal"
              visible={true}
            >
              <StyledComponent
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kGXeez",
                      "isStatic": false,
                      "lastClassName": "fIewaV",
                      "rules": Array [
                        "
	margin-left: 2px;

	> input {
		border: none;

		&::-webkit-input-placeholder {
			color: silver;
			opacity: 0.5;
		}
	}

	",
                        [Function],
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(TextField)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kGXeez",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                noborder={true}
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                placeholder="new"
                size={1}
                sizing="normal"
                visible={true}
              >
                <TextField
                  className="sc-kGXeez fIewaV"
                  disabled={false}
                  id=""
                  minWidth="1em"
                  noborder={true}
                  obj="TextField"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onValidation={[Function]}
                  placeholder="new"
                  size={1}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  tooltip=""
                  type="text"
                  useclear={false}
                  usevalidation={false}
                  validators={Array []}
                  visible={true}
                >
                  <Wrapper
                    bottom=""
                    className="sc-kGXeez fIewaV"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    id=""
                    left=""
                    location="none"
                    minWidth="1em"
                    noborder={true}
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="TextField"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onError={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onValidation={[Function]}
                    padding=""
                    placeholder="new"
                    reset={false}
                    selected={false}
                    size={1}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    type="text"
                    useclear={false}
                    usevalidation={false}
                    validators={Array []}
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.div
                        className="ui-textfield-container"
                        id="TextField-0"
                        minWidth="3.5rem"
                      >
                        <StyledComponent
                          className="ui-textfield-container"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-jTzLTM",
                                "isStatic": false,
                                "lastClassName": "bTEaGk",
                                "rules": Array [
                                  "
	display: inline-flex;
	flex-direction: column;
	min-width: ",
                                  [Function],
                                  ";
	position: relative;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-jTzLTM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="TextField-0"
                          minWidth="3.5rem"
                        >
                          <div
                            className="ui-textfield-container sc-jTzLTM bTEaGk"
                            id="TextField-0"
                          >
                            <styled.div
                              className="ui-textfield sc-kGXeez fIewaV"
                              disabled={false}
                              noborder={true}
                              visible={true}
                            >
                              <StyledComponent
                                className="ui-textfield sc-kGXeez fIewaV"
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-fjdhpX",
                                      "isStatic": false,
                                      "lastClassName": "fnLbQx",
                                      "rules": Array [
                                        "
	border: ",
                                        [Function],
                                        ";
	display: inherit;
	padding: 1px 0;

	&:hover .ui-textfield-clear-button {
		opacity: ",
                                        [Function],
                                        ";
	}
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-fjdhpX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                noborder={true}
                                visible={true}
                              >
                                <div
                                  className="ui-textfield sc-kGXeez fIewaV sc-fjdhpX fnLbQx"
                                  disabled={false}
                                >
                                  <styled.input
                                    className="sc-kGXeez fIewaV"
                                    disabled={false}
                                    id=""
                                    obj="TextField"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    placeholder="new"
                                    size={1}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    tooltip=""
                                    type="text"
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="sc-kGXeez fIewaV"
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-VigVT",
                                            "isStatic": false,
                                            "lastClassName": "hinBcX",
                                            "rules": Array [
                                              "
	border: none;
	box-sizing: border-box;
	display: inline-flex;
	font-size: inherit;
	min-height: 0;
	min-width: 0;
	outline: none;
	padding: 1px 5px;
	width: 100%;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.input",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-VigVT",
                                          "target": "input",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      id=""
                                      obj="TextField"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      placeholder="new"
                                      size={1}
                                      sizing="normal"
                                      style={Object {}}
                                      testing={true}
                                      tooltip=""
                                      type="text"
                                      visible={true}
                                    >
                                      <input
                                        className="sc-kGXeez fIewaV sc-VigVT hinBcX"
                                        disabled={false}
                                        id=""
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        placeholder="new"
                                        size={1}
                                        style={Object {}}
                                        type="text"
                                      />
                                    </StyledComponent>
                                  </styled.input>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </ThemeProvider>
                  </Wrapper>
                </TextField>
              </StyledComponent>
            </Styled(TextField)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TagList>
`;

exports[`Create a new dynamic TagList item and cancel creation with escape 1`] = `
<TagList
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  nosort={false}
  notheme={false}
  obj="TagList"
  onBlur={[Function]}
  onChange={[Function]}
  onDelete={[Function]}
  onKeyDown={[MockFunction]}
  onKeyPress={[Function]}
  onNew={[Function]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  tags={
    Array [
      "a",
      "b",
      "c",
    ]
  }
  testing={true}
  theme={null}
  tooltip=""
  top=""
  useinput={true}
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    nosort={false}
    notheme={false}
    obj="TagList"
    onBlur={[Function]}
    onChange={[Function]}
    onDelete={[Function]}
    onError={[Function]}
    onKeyDown={[MockFunction]}
    onKeyPress={[Function]}
    onNew={[Function]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    tags={
      Array [
        "a",
        "b",
        "c",
      ]
    }
    testing={true}
    theme={null}
    tooltip=""
    top=""
    useinput={true}
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-taglist"
        sizing="normal"
        style={Object {}}
      >
        <StyledComponent
          className="ui-taglist"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kpOJdX",
                "isStatic": false,
                "lastClassName": "jTpUYR",
                "rules": Array [
                  "
	display: inline;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kpOJdX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          sizing="normal"
          style={Object {}}
        >
          <div
            className="ui-taglist sc-kpOJdX jTpUYR"
            style={Object {}}
          >
            <Styled(Icon)
              disabled={false}
              iconName="tags"
              sizing="normal"
              visible={true}
            >
              <StyledComponent
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kgoBCf",
                      "isStatic": true,
                      "lastClassName": "cmzSXO",
                      "rules": Array [
                        "
	margin-right: 5px;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Icon)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kgoBCf",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                iconName="tags"
                sizing="normal"
                visible={true}
              >
                <Icon
                  bottom=""
                  className="sc-kgoBCf cmzSXO"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  iconName="tags"
                  id=""
                  imageFile=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Icon"
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-kgoBCf cmzSXO"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    iconName="tags"
                    id=""
                    imageFile=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Icon"
                    onError={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.i
                        bottom=""
                        className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                        contentEditable={false}
                        controlled={true}
                        direction="right"
                        disabled={false}
                        err={null}
                        errorMessage=""
                        focus={false}
                        height=""
                        iconName="tags"
                        id=""
                        imageFile=""
                        left=""
                        location="none"
                        noedit={false}
                        nohover={false}
                        noripple={false}
                        notheme={false}
                        obj="Icon"
                        padding=""
                        selected={false}
                        sizing="normal"
                        style={Object {}}
                        testing={true}
                        theme={null}
                        tooltip=""
                        top=""
                        visible={true}
                        width=""
                        xcss={null}
                      >
                        <StyledComponent
                          bottom=""
                          className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          focus={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "xVJTk",
                                "rules": Array [
                                  "
	text-align: center;
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.i",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "i",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height=""
                          iconName="tags"
                          id=""
                          imageFile=""
                          left=""
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          notheme={false}
                          obj="Icon"
                          padding=""
                          selected={false}
                          sizing="normal"
                          style={Object {}}
                          testing={true}
                          theme={null}
                          tooltip=""
                          top=""
                          visible={true}
                          width=""
                          xcss={null}
                        >
                          <i
                            className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO sc-bwzfXH hBOHvv"
                            contentEditable={false}
                            direction="right"
                            disabled={false}
                            height=""
                            id=""
                            selected={false}
                            style={Object {}}
                            width=""
                          />
                        </StyledComponent>
                      </styled.i>
                    </ThemeProvider>
                  </Wrapper>
                </Icon>
              </StyledComponent>
            </Styled(Icon)>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="a"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="a"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="a"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="a"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="a"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        a
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="b"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="b"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="b"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="b"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="b"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        b
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="c"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="c"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="c"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="c"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="c"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        c
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Styled(TextField)
              disabled={false}
              noborder={true}
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              placeholder="new"
              size={1}
              sizing="normal"
              visible={true}
            >
              <StyledComponent
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kGXeez",
                      "isStatic": false,
                      "lastClassName": "fIewaV",
                      "rules": Array [
                        "
	margin-left: 2px;

	> input {
		border: none;

		&::-webkit-input-placeholder {
			color: silver;
			opacity: 0.5;
		}
	}

	",
                        [Function],
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(TextField)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kGXeez",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                noborder={true}
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                placeholder="new"
                size={1}
                sizing="normal"
                visible={true}
              >
                <TextField
                  className="sc-kGXeez fIewaV"
                  disabled={false}
                  id=""
                  minWidth="1em"
                  noborder={true}
                  obj="TextField"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onValidation={[Function]}
                  placeholder="new"
                  size={1}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  tooltip=""
                  type="text"
                  useclear={false}
                  usevalidation={false}
                  validators={Array []}
                  visible={true}
                >
                  <Wrapper
                    bottom=""
                    className="sc-kGXeez fIewaV"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    id=""
                    left=""
                    location="none"
                    minWidth="1em"
                    noborder={true}
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="TextField"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onError={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onValidation={[Function]}
                    padding=""
                    placeholder="new"
                    reset={false}
                    selected={false}
                    size={1}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    type="text"
                    useclear={false}
                    usevalidation={false}
                    validators={Array []}
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.div
                        className="ui-textfield-container"
                        id="TextField-0"
                        minWidth="3.5rem"
                      >
                        <StyledComponent
                          className="ui-textfield-container"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-jTzLTM",
                                "isStatic": false,
                                "lastClassName": "bTEaGk",
                                "rules": Array [
                                  "
	display: inline-flex;
	flex-direction: column;
	min-width: ",
                                  [Function],
                                  ";
	position: relative;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-jTzLTM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="TextField-0"
                          minWidth="3.5rem"
                        >
                          <div
                            className="ui-textfield-container sc-jTzLTM bTEaGk"
                            id="TextField-0"
                          >
                            <styled.div
                              className="ui-textfield sc-kGXeez fIewaV"
                              disabled={false}
                              noborder={true}
                              visible={true}
                            >
                              <StyledComponent
                                className="ui-textfield sc-kGXeez fIewaV"
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-fjdhpX",
                                      "isStatic": false,
                                      "lastClassName": "fnLbQx",
                                      "rules": Array [
                                        "
	border: ",
                                        [Function],
                                        ";
	display: inherit;
	padding: 1px 0;

	&:hover .ui-textfield-clear-button {
		opacity: ",
                                        [Function],
                                        ";
	}
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-fjdhpX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                noborder={true}
                                visible={true}
                              >
                                <div
                                  className="ui-textfield sc-kGXeez fIewaV sc-fjdhpX fnLbQx"
                                  disabled={false}
                                >
                                  <styled.input
                                    className="sc-kGXeez fIewaV"
                                    disabled={false}
                                    id=""
                                    obj="TextField"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    placeholder="new"
                                    size={1}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    tooltip=""
                                    type="text"
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="sc-kGXeez fIewaV"
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-VigVT",
                                            "isStatic": false,
                                            "lastClassName": "hinBcX",
                                            "rules": Array [
                                              "
	border: none;
	box-sizing: border-box;
	display: inline-flex;
	font-size: inherit;
	min-height: 0;
	min-width: 0;
	outline: none;
	padding: 1px 5px;
	width: 100%;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.input",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-VigVT",
                                          "target": "input",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      id=""
                                      obj="TextField"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      placeholder="new"
                                      size={1}
                                      sizing="normal"
                                      style={Object {}}
                                      testing={true}
                                      tooltip=""
                                      type="text"
                                      visible={true}
                                    >
                                      <input
                                        className="sc-kGXeez fIewaV sc-VigVT hinBcX"
                                        disabled={false}
                                        id=""
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        placeholder="new"
                                        size={1}
                                        style={Object {}}
                                        type="text"
                                      />
                                    </StyledComponent>
                                  </styled.input>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </ThemeProvider>
                  </Wrapper>
                </TextField>
              </StyledComponent>
            </Styled(TextField)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TagList>
`;

exports[`Create a new static TagList with 3 tags (a, b, c) 1`] = `
<TagList
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  nosort={false}
  notheme={false}
  obj="TagList"
  onBlur={[Function]}
  onChange={[Function]}
  onDelete={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onNew={[Function]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  tags={
    Array [
      "a",
      "b",
      "c",
    ]
  }
  testing={true}
  theme={null}
  tooltip=""
  top=""
  useinput={false}
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    nosort={false}
    notheme={false}
    obj="TagList"
    onBlur={[Function]}
    onChange={[Function]}
    onDelete={[Function]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onNew={[Function]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    tags={
      Array [
        "a",
        "b",
        "c",
      ]
    }
    testing={true}
    theme={null}
    tooltip=""
    top=""
    useinput={false}
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-taglist"
        sizing="normal"
        style={Object {}}
      >
        <StyledComponent
          className="ui-taglist"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kpOJdX",
                "isStatic": false,
                "lastClassName": "jTpUYR",
                "rules": Array [
                  "
	display: inline;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kpOJdX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          sizing="normal"
          style={Object {}}
        >
          <div
            className="ui-taglist sc-kpOJdX jTpUYR"
            style={Object {}}
          >
            <Styled(Icon)
              disabled={false}
              iconName="tags"
              sizing="normal"
              visible={true}
            >
              <StyledComponent
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kgoBCf",
                      "isStatic": true,
                      "lastClassName": "cmzSXO",
                      "rules": Array [
                        "
	margin-right: 5px;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Icon)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kgoBCf",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                iconName="tags"
                sizing="normal"
                visible={true}
              >
                <Icon
                  bottom=""
                  className="sc-kgoBCf cmzSXO"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  iconName="tags"
                  id=""
                  imageFile=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Icon"
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-kgoBCf cmzSXO"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    iconName="tags"
                    id=""
                    imageFile=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Icon"
                    onError={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.i
                        bottom=""
                        className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                        contentEditable={false}
                        controlled={true}
                        direction="right"
                        disabled={false}
                        err={null}
                        errorMessage=""
                        focus={false}
                        height=""
                        iconName="tags"
                        id=""
                        imageFile=""
                        left=""
                        location="none"
                        noedit={false}
                        nohover={false}
                        noripple={false}
                        notheme={false}
                        obj="Icon"
                        padding=""
                        selected={false}
                        sizing="normal"
                        style={Object {}}
                        testing={true}
                        theme={null}
                        tooltip=""
                        top=""
                        visible={true}
                        width=""
                        xcss={null}
                      >
                        <StyledComponent
                          bottom=""
                          className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          focus={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "hBOHvv",
                                "rules": Array [
                                  "
	text-align: center;
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.i",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "i",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height=""
                          iconName="tags"
                          id=""
                          imageFile=""
                          left=""
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          notheme={false}
                          obj="Icon"
                          padding=""
                          selected={false}
                          sizing="normal"
                          style={Object {}}
                          testing={true}
                          theme={null}
                          tooltip=""
                          top=""
                          visible={true}
                          width=""
                          xcss={null}
                        >
                          <i
                            className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO sc-bwzfXH hBOHvv"
                            contentEditable={false}
                            direction="right"
                            disabled={false}
                            height=""
                            id=""
                            selected={false}
                            style={Object {}}
                            width=""
                          />
                        </StyledComponent>
                      </styled.i>
                    </ThemeProvider>
                  </Wrapper>
                </Icon>
              </StyledComponent>
            </Styled(Icon)>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="a"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={false}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={false}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="a"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="a"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="a"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="a"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        a
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="b"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={false}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={false}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="b"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="b"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="b"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="b"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        b
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="c"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={false}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={false}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="c"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="c"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="c"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="c"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        c
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TagList>
`;

exports[`Create a new static TagList with 3 tags (c, b, a) with no sorting 1`] = `
<TagList
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  nosort={true}
  notheme={false}
  obj="TagList"
  onBlur={[Function]}
  onChange={[Function]}
  onDelete={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onNew={[Function]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  tags={
    Array [
      "c",
      "b",
      "a",
    ]
  }
  testing={true}
  theme={null}
  tooltip=""
  top=""
  useinput={false}
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    nosort={true}
    notheme={false}
    obj="TagList"
    onBlur={[Function]}
    onChange={[Function]}
    onDelete={[Function]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onNew={[Function]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    tags={
      Array [
        "c",
        "b",
        "a",
      ]
    }
    testing={true}
    theme={null}
    tooltip=""
    top=""
    useinput={false}
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-taglist"
        sizing="normal"
        style={Object {}}
      >
        <StyledComponent
          className="ui-taglist"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kpOJdX",
                "isStatic": false,
                "lastClassName": "jTpUYR",
                "rules": Array [
                  "
	display: inline;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kpOJdX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          sizing="normal"
          style={Object {}}
        >
          <div
            className="ui-taglist sc-kpOJdX jTpUYR"
            style={Object {}}
          >
            <Styled(Icon)
              disabled={false}
              iconName="tags"
              sizing="normal"
              visible={true}
            >
              <StyledComponent
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kgoBCf",
                      "isStatic": true,
                      "lastClassName": "cmzSXO",
                      "rules": Array [
                        "
	margin-right: 5px;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Icon)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kgoBCf",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                iconName="tags"
                sizing="normal"
                visible={true}
              >
                <Icon
                  bottom=""
                  className="sc-kgoBCf cmzSXO"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  iconName="tags"
                  id=""
                  imageFile=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Icon"
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-kgoBCf cmzSXO"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    iconName="tags"
                    id=""
                    imageFile=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Icon"
                    onError={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.i
                        bottom=""
                        className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                        contentEditable={false}
                        controlled={true}
                        direction="right"
                        disabled={false}
                        err={null}
                        errorMessage=""
                        focus={false}
                        height=""
                        iconName="tags"
                        id=""
                        imageFile=""
                        left=""
                        location="none"
                        noedit={false}
                        nohover={false}
                        noripple={false}
                        notheme={false}
                        obj="Icon"
                        padding=""
                        selected={false}
                        sizing="normal"
                        style={Object {}}
                        testing={true}
                        theme={null}
                        tooltip=""
                        top=""
                        visible={true}
                        width=""
                        xcss={null}
                      >
                        <StyledComponent
                          bottom=""
                          className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          focus={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "hBOHvv",
                                "rules": Array [
                                  "
	text-align: center;
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.i",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "i",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height=""
                          iconName="tags"
                          id=""
                          imageFile=""
                          left=""
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          notheme={false}
                          obj="Icon"
                          padding=""
                          selected={false}
                          sizing="normal"
                          style={Object {}}
                          testing={true}
                          theme={null}
                          tooltip=""
                          top=""
                          visible={true}
                          width=""
                          xcss={null}
                        >
                          <i
                            className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO sc-bwzfXH hBOHvv"
                            contentEditable={false}
                            direction="right"
                            disabled={false}
                            height=""
                            id=""
                            selected={false}
                            style={Object {}}
                            width=""
                          />
                        </StyledComponent>
                      </styled.i>
                    </ThemeProvider>
                  </Wrapper>
                </Icon>
              </StyledComponent>
            </Styled(Icon)>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="c"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={false}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={false}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="c"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="c"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="c"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="c"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        c
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="b"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={false}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={false}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="b"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="b"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="b"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="b"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        b
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="a"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={false}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={false}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="a"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="a"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="a"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="a"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        a
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TagList>
`;

exports[`Remove a tag from a TagList 1`] = `
<TagList
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  nosort={false}
  notheme={false}
  obj="TagList"
  onBlur={[Function]}
  onChange={[Function]}
  onDelete={[MockFunction]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onNew={[Function]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  tags={
    Array [
      "a",
      "b",
      "c",
    ]
  }
  testing={true}
  theme={null}
  tooltip=""
  top=""
  useinput={true}
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    nosort={false}
    notheme={false}
    obj="TagList"
    onBlur={[Function]}
    onChange={[Function]}
    onDelete={[MockFunction]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onNew={[Function]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    tags={
      Array [
        "a",
        "b",
        "c",
      ]
    }
    testing={true}
    theme={null}
    tooltip=""
    top=""
    useinput={true}
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-taglist"
        sizing="normal"
        style={Object {}}
      >
        <StyledComponent
          className="ui-taglist"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kpOJdX",
                "isStatic": false,
                "lastClassName": "jTpUYR",
                "rules": Array [
                  "
	display: inline;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kpOJdX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          sizing="normal"
          style={Object {}}
        >
          <div
            className="ui-taglist sc-kpOJdX jTpUYR"
            style={Object {}}
          >
            <Styled(Icon)
              disabled={false}
              iconName="tags"
              sizing="normal"
              visible={true}
            >
              <StyledComponent
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kgoBCf",
                      "isStatic": true,
                      "lastClassName": "cmzSXO",
                      "rules": Array [
                        "
	margin-right: 5px;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Icon)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kgoBCf",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                iconName="tags"
                sizing="normal"
                visible={true}
              >
                <Icon
                  bottom=""
                  className="sc-kgoBCf cmzSXO"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  iconName="tags"
                  id=""
                  imageFile=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Icon"
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-kgoBCf cmzSXO"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    iconName="tags"
                    id=""
                    imageFile=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Icon"
                    onError={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.i
                        bottom=""
                        className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                        contentEditable={false}
                        controlled={true}
                        direction="right"
                        disabled={false}
                        err={null}
                        errorMessage=""
                        focus={false}
                        height=""
                        iconName="tags"
                        id=""
                        imageFile=""
                        left=""
                        location="none"
                        noedit={false}
                        nohover={false}
                        noripple={false}
                        notheme={false}
                        obj="Icon"
                        padding=""
                        selected={false}
                        sizing="normal"
                        style={Object {}}
                        testing={true}
                        theme={null}
                        tooltip=""
                        top=""
                        visible={true}
                        width=""
                        xcss={null}
                      >
                        <StyledComponent
                          bottom=""
                          className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          focus={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "xVJTk",
                                "rules": Array [
                                  "
	text-align: center;
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.i",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "i",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height=""
                          iconName="tags"
                          id=""
                          imageFile=""
                          left=""
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          notheme={false}
                          obj="Icon"
                          padding=""
                          selected={false}
                          sizing="normal"
                          style={Object {}}
                          testing={true}
                          theme={null}
                          tooltip=""
                          top=""
                          visible={true}
                          width=""
                          xcss={null}
                        >
                          <i
                            className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO sc-bwzfXH hBOHvv"
                            contentEditable={false}
                            direction="right"
                            disabled={false}
                            height=""
                            id=""
                            selected={false}
                            style={Object {}}
                            width=""
                          />
                        </StyledComponent>
                      </styled.i>
                    </ThemeProvider>
                  </Wrapper>
                </Icon>
              </StyledComponent>
            </Styled(Icon)>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="a"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="a"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="a"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="a"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="a"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        a
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="b"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="b"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="b"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="b"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="b"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        b
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="c"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="c"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="c"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="c"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="c"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        c
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Styled(TextField)
              disabled={false}
              noborder={true}
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              placeholder="new"
              size={1}
              sizing="normal"
              visible={true}
            >
              <StyledComponent
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kGXeez",
                      "isStatic": false,
                      "lastClassName": "fIewaV",
                      "rules": Array [
                        "
	margin-left: 2px;

	> input {
		border: none;

		&::-webkit-input-placeholder {
			color: silver;
			opacity: 0.5;
		}
	}

	",
                        [Function],
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(TextField)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kGXeez",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                noborder={true}
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                placeholder="new"
                size={1}
                sizing="normal"
                visible={true}
              >
                <TextField
                  className="sc-kGXeez fIewaV"
                  disabled={false}
                  id=""
                  minWidth="1em"
                  noborder={true}
                  obj="TextField"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onValidation={[Function]}
                  placeholder="new"
                  size={1}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  tooltip=""
                  type="text"
                  useclear={false}
                  usevalidation={false}
                  validators={Array []}
                  visible={true}
                >
                  <Wrapper
                    bottom=""
                    className="sc-kGXeez fIewaV"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    id=""
                    left=""
                    location="none"
                    minWidth="1em"
                    noborder={true}
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="TextField"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onError={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onValidation={[Function]}
                    padding=""
                    placeholder="new"
                    reset={false}
                    selected={false}
                    size={1}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    type="text"
                    useclear={false}
                    usevalidation={false}
                    validators={Array []}
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.div
                        className="ui-textfield-container"
                        id="TextField-0"
                        minWidth="3.5rem"
                      >
                        <StyledComponent
                          className="ui-textfield-container"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-jTzLTM",
                                "isStatic": false,
                                "lastClassName": "bTEaGk",
                                "rules": Array [
                                  "
	display: inline-flex;
	flex-direction: column;
	min-width: ",
                                  [Function],
                                  ";
	position: relative;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-jTzLTM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="TextField-0"
                          minWidth="3.5rem"
                        >
                          <div
                            className="ui-textfield-container sc-jTzLTM bTEaGk"
                            id="TextField-0"
                          >
                            <styled.div
                              className="ui-textfield sc-kGXeez fIewaV"
                              disabled={false}
                              noborder={true}
                              visible={true}
                            >
                              <StyledComponent
                                className="ui-textfield sc-kGXeez fIewaV"
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-fjdhpX",
                                      "isStatic": false,
                                      "lastClassName": "fnLbQx",
                                      "rules": Array [
                                        "
	border: ",
                                        [Function],
                                        ";
	display: inherit;
	padding: 1px 0;

	&:hover .ui-textfield-clear-button {
		opacity: ",
                                        [Function],
                                        ";
	}
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-fjdhpX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                noborder={true}
                                visible={true}
                              >
                                <div
                                  className="ui-textfield sc-kGXeez fIewaV sc-fjdhpX fnLbQx"
                                  disabled={false}
                                >
                                  <styled.input
                                    className="sc-kGXeez fIewaV"
                                    disabled={false}
                                    id=""
                                    obj="TextField"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    placeholder="new"
                                    size={1}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    tooltip=""
                                    type="text"
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="sc-kGXeez fIewaV"
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-VigVT",
                                            "isStatic": false,
                                            "lastClassName": "hinBcX",
                                            "rules": Array [
                                              "
	border: none;
	box-sizing: border-box;
	display: inline-flex;
	font-size: inherit;
	min-height: 0;
	min-width: 0;
	outline: none;
	padding: 1px 5px;
	width: 100%;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.input",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-VigVT",
                                          "target": "input",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      id=""
                                      obj="TextField"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      placeholder="new"
                                      size={1}
                                      sizing="normal"
                                      style={Object {}}
                                      testing={true}
                                      tooltip=""
                                      type="text"
                                      visible={true}
                                    >
                                      <input
                                        className="sc-kGXeez fIewaV sc-VigVT hinBcX"
                                        disabled={false}
                                        id=""
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        placeholder="new"
                                        size={1}
                                        style={Object {}}
                                        type="text"
                                      />
                                    </StyledComponent>
                                  </styled.input>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </ThemeProvider>
                  </Wrapper>
                </TextField>
              </StyledComponent>
            </Styled(TextField)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TagList>
`;

exports[`Test creation of a simple TagList instance 1`] = `
<Wrapper
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  nosort={false}
  notheme={false}
  obj="TagList"
  onBlur={[Function]}
  onChange={[Function]}
  onDelete={[Function]}
  onError={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onNew={[Function]}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  tags={Array []}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  useinput={false}
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-taglist"
    sizing="normal"
    style={Object {}}
  >
    <Styled(Icon)
      disabled={false}
      iconName="tags"
      sizing="normal"
      visible={true}
    />
  </styled.div>
</Wrapper>
`;

exports[`Test retrieval of TagList props object 1`] = `
Object {
  "bottom": "",
  "children": null,
  "className": "",
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": "",
  "focus": false,
  "height": "",
  "id": "",
  "left": "",
  "location": "none",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "nosort": false,
  "notheme": false,
  "obj": "TagList",
  "onBlur": [Function],
  "onChange": [Function],
  "onDelete": [Function],
  "onKeyDown": [Function],
  "onKeyPress": [Function],
  "onNew": [Function],
  "padding": "",
  "selected": false,
  "sizing": "normal",
  "style": Object {},
  "tags": Array [],
  "testing": true,
  "theme": null,
  "tooltip": "",
  "top": "",
  "useinput": false,
  "visible": true,
  "width": "",
  "xcss": null,
}
`;

exports[`Try to create a duplicate entry within a dynamic TagList 1`] = `
<TagList
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  nosort={false}
  notheme={false}
  obj="TagList"
  onBlur={[Function]}
  onChange={[Function]}
  onDelete={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[MockFunction]}
  onNew={[MockFunction]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  tags={
    Array [
      "c",
      "b",
      "d",
    ]
  }
  testing={true}
  theme={null}
  tooltip=""
  top=""
  useinput={true}
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    nosort={false}
    notheme={false}
    obj="TagList"
    onBlur={[Function]}
    onChange={[Function]}
    onDelete={[Function]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[MockFunction]}
    onNew={[MockFunction]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    tags={
      Array [
        "c",
        "b",
        "d",
      ]
    }
    testing={true}
    theme={null}
    tooltip=""
    top=""
    useinput={true}
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-taglist"
        sizing="normal"
        style={Object {}}
      >
        <StyledComponent
          className="ui-taglist"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kpOJdX",
                "isStatic": false,
                "lastClassName": "jTpUYR",
                "rules": Array [
                  "
	display: inline;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kpOJdX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          sizing="normal"
          style={Object {}}
        >
          <div
            className="ui-taglist sc-kpOJdX jTpUYR"
            style={Object {}}
          >
            <Styled(Icon)
              disabled={false}
              iconName="tags"
              sizing="normal"
              visible={true}
            >
              <StyledComponent
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kgoBCf",
                      "isStatic": true,
                      "lastClassName": "cmzSXO",
                      "rules": Array [
                        "
	margin-right: 5px;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Icon)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kgoBCf",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                iconName="tags"
                sizing="normal"
                visible={true}
              >
                <Icon
                  bottom=""
                  className="sc-kgoBCf cmzSXO"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  iconName="tags"
                  id=""
                  imageFile=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Icon"
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-kgoBCf cmzSXO"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    iconName="tags"
                    id=""
                    imageFile=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Icon"
                    onError={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.i
                        bottom=""
                        className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                        contentEditable={false}
                        controlled={true}
                        direction="right"
                        disabled={false}
                        err={null}
                        errorMessage=""
                        focus={false}
                        height=""
                        iconName="tags"
                        id=""
                        imageFile=""
                        left=""
                        location="none"
                        noedit={false}
                        nohover={false}
                        noripple={false}
                        notheme={false}
                        obj="Icon"
                        padding=""
                        selected={false}
                        sizing="normal"
                        style={Object {}}
                        testing={true}
                        theme={null}
                        tooltip=""
                        top=""
                        visible={true}
                        width=""
                        xcss={null}
                      >
                        <StyledComponent
                          bottom=""
                          className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO"
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          focus={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "xVJTk",
                                "rules": Array [
                                  "
	text-align: center;
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.i",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "i",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height=""
                          iconName="tags"
                          id=""
                          imageFile=""
                          left=""
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          notheme={false}
                          obj="Icon"
                          padding=""
                          selected={false}
                          sizing="normal"
                          style={Object {}}
                          testing={true}
                          theme={null}
                          tooltip=""
                          top=""
                          visible={true}
                          width=""
                          xcss={null}
                        >
                          <i
                            className="ui-icon fa fa-fw fa-tags sc-kgoBCf cmzSXO sc-bwzfXH hBOHvv"
                            contentEditable={false}
                            direction="right"
                            disabled={false}
                            height=""
                            id=""
                            selected={false}
                            style={Object {}}
                            width=""
                          />
                        </StyledComponent>
                      </styled.i>
                    </ThemeProvider>
                  </Wrapper>
                </Icon>
              </StyledComponent>
            </Styled(Icon)>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="b"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="b"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="b"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="b"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="b"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        b
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="c"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="c"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="c"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="c"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="c"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        c
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Tag
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              key="d"
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tag"
              onClick={[Function]}
              onDelete={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              padding=""
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              usedelete={true}
              visible={true}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                id=""
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tag"
                onClick={[Function]}
                onError={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                padding=""
                reset={false}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                usedelete={true}
                visible={true}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.div
                    className="ui-tag"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-tag"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "iLHaNu",
                            "rules": Array [
                              "
	border: solid 1px silver;
	border-radius: 3px;
	cursor: default;
	box-sizing: border-box;
	display: inline;
	font-size: inherit;
	opacity: 1.0;
	margin: 0 1px;
	padding: 0 3px;
	position: relative;

	> span {
		font-size: inherit;
	}

	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      style={Object {}}
                    >
                      <div
                        className="ui-tag sc-kAzzGY iLHaNu"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        style={Object {}}
                      >
                        <Styled(Label)
                          disabled={false}
                          noedit={true}
                          text="d"
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-chPdSV",
                                  "isStatic": true,
                                  "lastClassName": "byfFmt",
                                  "rules": Array [],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(Label)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-chPdSV",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            noedit={true}
                            text="d"
                            visible={true}
                          >
                            <Label
                              bottom=""
                              className="sc-chPdSV byfFmt"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Label"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="d"
                              theme={null}
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-chPdSV byfFmt"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                id=""
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Label"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onDoubleClick={[Function]}
                                onError={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onUpdate={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="d"
                                theme={null}
                                tooltip=""
                                top=""
                                useedit={false}
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.span
                                    className="ui-label sc-chPdSV byfFmt"
                                    contentEditable={false}
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="ui-label sc-chPdSV byfFmt"
                                      contentEditable={false}
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "khPEDV",
                                            "rules": Array [
                                              "
	background-color: inherit;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                      visible={true}
                                    >
                                      <span
                                        className="ui-label sc-chPdSV byfFmt sc-jzJRlG khPEDV"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                      >
                                        d
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </ThemeProvider>
                              </Wrapper>
                            </Label>
                          </StyledComponent>
                        </Styled(Label)>
                        <Styled(ButtonCircle)
                          disabled={false}
                          iconName="times"
                          onClick={[Function]}
                          sizing="small"
                          style={
                            Object {
                              "backgroundColor": "#ffffff",
                              "borderColor": "#d9534f",
                              "color": "#d9534f",
                              "opacity": "0.0",
                            }
                          }
                          visible={true}
                        >
                          <StyledComponent
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "fZQdpw",
                                  "rules": Array [
                                    "
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: opacity ",
                                    [Function],
                                    " ease-in-out;
	width: unset;
",
                                  ],
                                },
                                "defaultStyles": Object {},
                                "displayName": "Styled(ButtonCircle)",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconName="times"
                            onClick={[Function]}
                            sizing="small"
                            style={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#d9534f",
                                "color": "#d9534f",
                                "opacity": "0.0",
                              }
                            }
                            visible={true}
                          >
                            <ButtonCircle
                              bottom=""
                              className="sc-cSHVUG fZQdpw"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="ButtonCircle"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="small"
                              style={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#d9534f",
                                  "color": "#d9534f",
                                  "opacity": "0.0",
                                }
                              }
                              testing={true}
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <Wrapper
                                bottom=""
                                className="sc-cSHVUG fZQdpw"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="ButtonCircle"
                                onClick={[Function]}
                                onError={[Function]}
                                padding=""
                                reset={false}
                                selected={false}
                                sizing="small"
                                style={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#d9534f",
                                    "color": "#d9534f",
                                    "opacity": "0.0",
                                  }
                                }
                                testing={true}
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ThemeProvider
                                  theme={
                                    Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "#c0c0c0",
                                      "color": "#000000",
                                      "headerBackgroundColor": "#004358",
                                      "headerForegroundColor": "#ffffff",
                                      "headerHoverColor": "#ffe11a",
                                      "hoverColor": "#c0c0c0",
                                      "inputBorderColor": "#c0c0c0",
                                      "itemHoverColor": "#bedb39",
                                      "selectedBackgroundColor": "#1f8a70",
                                      "selectedForegroundColor": "#ffe11a",
                                      "titleBarBackgroundColor": "#004358",
                                      "titleBarForegroundColor": "#ffe11a",
                                      "tooltipBackgroundColor": "#708090",
                                      "tooltipForegroundColor": "#ffffff",
                                      "transitionDelay": "0.5s",
                                    }
                                  }
                                >
                                  <styled.div
                                    className="ui-button-circle sc-cSHVUG fZQdpw"
                                  >
                                    <StyledComponent
                                      className="ui-button-circle sc-cSHVUG fZQdpw"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "nJPZJ",
                                            "rules": Array [
                                              "
	",
                                              "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                              "
	height: unset;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ui-button-circle sc-cSHVUG fZQdpw sc-htoDjs nJPZJ"
                                      >
                                        <styled.div
                                          height="18px"
                                          width="18px"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-dnqmqq",
                                                  "isStatic": false,
                                                  "lastClassName": "emcCYn",
                                                  "rules": Array [
                                                    "
	border-radius: 4em;
	display: inline-block;
	height: ",
                                                    [Function],
                                                    ";
	width: ",
                                                    [Function],
                                                    ";
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-dnqmqq",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height="18px"
                                            width="18px"
                                          >
                                            <div
                                              className="sc-dnqmqq emcCYn"
                                              height="18px"
                                              width="18px"
                                            >
                                              <Styled(Button)
                                                bottom=""
                                                className="sc-cSHVUG fZQdpw"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="ButtonCircle"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="small"
                                                style={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#d9534f",
                                                    "color": "#d9534f",
                                                    "opacity": "0.0",
                                                  }
                                                }
                                                testing={true}
                                                theme={null}
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                <StyledComponent
                                                  bottom=""
                                                  className="sc-cSHVUG fZQdpw"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-iwsKbI",
                                                        "isStatic": false,
                                                        "lastClassName": "hrmGrl",
                                                        "rules": Array [
                                                          "
	border-radius: 4em;
	padding: ",
                                                          [Function],
                                                          ";

	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "defaultStyles": Object {},
                                                      "displayName": "Styled(Button)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-iwsKbI",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  height=""
                                                  iconName="times"
                                                  iconStyle=""
                                                  id=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="ButtonCircle"
                                                  onClick={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="small"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#ffffff",
                                                      "borderColor": "#d9534f",
                                                      "color": "#d9534f",
                                                      "opacity": "0.0",
                                                    }
                                                  }
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <Button
                                                    bottom=""
                                                    className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="times"
                                                    iconStyle=""
                                                    id=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="ButtonCircle"
                                                    onClick={[Function]}
                                                    padding=""
                                                    selected={false}
                                                    sizing="small"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#ffffff",
                                                        "borderColor": "#d9534f",
                                                        "color": "#d9534f",
                                                        "opacity": "0.0",
                                                      }
                                                    }
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className="sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="times"
                                                      iconStyle=""
                                                      id=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="ButtonCircle"
                                                      onClick={[Function]}
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="small"
                                                      style={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#d9534f",
                                                          "color": "#d9534f",
                                                          "opacity": "0.0",
                                                        }
                                                      }
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.div
                                                          className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                          disabled={false}
                                                          id="Button-0"
                                                          onClick={[Function]}
                                                          sizing="small"
                                                          style={
                                                            Object {
                                                              "backgroundColor": "#ffffff",
                                                              "borderColor": "#d9534f",
                                                              "color": "#d9534f",
                                                              "opacity": "0.0",
                                                            }
                                                          }
                                                          visible={true}
                                                        >
                                                          <StyledComponent
                                                            className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl"
                                                            disabled={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-gzVnrw",
                                                                  "isStatic": false,
                                                                  "lastClassName": "lmUwCM",
                                                                  "rules": Array [
                                                                    "
	",
                                                                    "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                                    "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                    ";
	}

	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-gzVnrw",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="Button-0"
                                                            onClick={[Function]}
                                                            sizing="small"
                                                            style={
                                                              Object {
                                                                "backgroundColor": "#ffffff",
                                                                "borderColor": "#d9534f",
                                                                "color": "#d9534f",
                                                                "opacity": "0.0",
                                                              }
                                                            }
                                                            visible={true}
                                                          >
                                                            <div
                                                              className="ui-button ripple sc-cSHVUG fZQdpw sc-iwsKbI hrmGrl sc-gzVnrw lmUwCM"
                                                              disabled={false}
                                                              id="Button-0"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "backgroundColor": "#ffffff",
                                                                  "borderColor": "#d9534f",
                                                                  "color": "#d9534f",
                                                                  "opacity": "0.0",
                                                                }
                                                              }
                                                            >
                                                              <Icon
                                                                bottom=""
                                                                className=""
                                                                contentEditable={false}
                                                                controlled={true}
                                                                direction="right"
                                                                disabled={false}
                                                                err={null}
                                                                errorMessage=""
                                                                focus={false}
                                                                height=""
                                                                iconName="times"
                                                                id=""
                                                                imageFile=""
                                                                left=""
                                                                location="none"
                                                                noedit={false}
                                                                nohover={false}
                                                                noripple={false}
                                                                notheme={false}
                                                                obj="Icon"
                                                                padding=""
                                                                selected={false}
                                                                sizing="small"
                                                                style={Object {}}
                                                                testing={true}
                                                                theme={null}
                                                                tooltip=""
                                                                top=""
                                                                visible={true}
                                                                width=""
                                                                xcss={null}
                                                              >
                                                                <Wrapper
                                                                  bottom=""
                                                                  className=""
                                                                  contentEditable={false}
                                                                  controlled={true}
                                                                  direction="right"
                                                                  disabled={false}
                                                                  err={null}
                                                                  errorMessage=""
                                                                  focus={false}
                                                                  height=""
                                                                  iconName="times"
                                                                  id=""
                                                                  imageFile=""
                                                                  left=""
                                                                  location="none"
                                                                  noedit={false}
                                                                  nohover={false}
                                                                  noripple={false}
                                                                  notheme={false}
                                                                  obj="Icon"
                                                                  onError={[Function]}
                                                                  padding=""
                                                                  reset={false}
                                                                  selected={false}
                                                                  sizing="small"
                                                                  style={Object {}}
                                                                  testing={true}
                                                                  theme={null}
                                                                  tooltip=""
                                                                  top=""
                                                                  visible={true}
                                                                  width=""
                                                                  xcss={null}
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "backgroundColor": "#ffffff",
                                                                        "borderColor": "#c0c0c0",
                                                                        "color": "#000000",
                                                                        "headerBackgroundColor": "#004358",
                                                                        "headerForegroundColor": "#ffffff",
                                                                        "headerHoverColor": "#ffe11a",
                                                                        "hoverColor": "#c0c0c0",
                                                                        "inputBorderColor": "#c0c0c0",
                                                                        "itemHoverColor": "#bedb39",
                                                                        "selectedBackgroundColor": "#1f8a70",
                                                                        "selectedForegroundColor": "#ffe11a",
                                                                        "titleBarBackgroundColor": "#004358",
                                                                        "titleBarForegroundColor": "#ffe11a",
                                                                        "tooltipBackgroundColor": "#708090",
                                                                        "tooltipForegroundColor": "#ffffff",
                                                                        "transitionDelay": "0.5s",
                                                                      }
                                                                    }
                                                                  >
                                                                    <styled.i
                                                                      bottom=""
                                                                      className="ui-icon fa fa-fw fa-times"
                                                                      contentEditable={false}
                                                                      controlled={true}
                                                                      direction="right"
                                                                      disabled={false}
                                                                      err={null}
                                                                      errorMessage=""
                                                                      focus={false}
                                                                      height=""
                                                                      iconName="times"
                                                                      id=""
                                                                      imageFile=""
                                                                      left=""
                                                                      location="none"
                                                                      noedit={false}
                                                                      nohover={false}
                                                                      noripple={false}
                                                                      notheme={false}
                                                                      obj="Icon"
                                                                      padding=""
                                                                      selected={false}
                                                                      sizing="small"
                                                                      style={Object {}}
                                                                      testing={true}
                                                                      theme={null}
                                                                      tooltip=""
                                                                      top=""
                                                                      visible={true}
                                                                      width=""
                                                                      xcss={null}
                                                                    >
                                                                      <StyledComponent
                                                                        bottom=""
                                                                        className="ui-icon fa fa-fw fa-times"
                                                                        contentEditable={false}
                                                                        controlled={true}
                                                                        direction="right"
                                                                        disabled={false}
                                                                        err={null}
                                                                        errorMessage=""
                                                                        focus={false}
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bwzfXH",
                                                                              "isStatic": false,
                                                                              "lastClassName": "xVJTk",
                                                                              "rules": Array [
                                                                                "
	text-align: center;
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
	",
                                                                                [Function],
                                                                                "
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bwzfXH",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        height=""
                                                                        iconName="times"
                                                                        id=""
                                                                        imageFile=""
                                                                        left=""
                                                                        location="none"
                                                                        noedit={false}
                                                                        nohover={false}
                                                                        noripple={false}
                                                                        notheme={false}
                                                                        obj="Icon"
                                                                        padding=""
                                                                        selected={false}
                                                                        sizing="small"
                                                                        style={Object {}}
                                                                        testing={true}
                                                                        theme={null}
                                                                        tooltip=""
                                                                        top=""
                                                                        visible={true}
                                                                        width=""
                                                                        xcss={null}
                                                                      >
                                                                        <i
                                                                          className="ui-icon fa fa-fw fa-times sc-bwzfXH xVJTk"
                                                                          contentEditable={false}
                                                                          direction="right"
                                                                          disabled={false}
                                                                          height=""
                                                                          id=""
                                                                          selected={false}
                                                                          style={Object {}}
                                                                          width=""
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ThemeProvider>
                                                                </Wrapper>
                                                              </Icon>
                                                            </div>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Button>
                                                </StyledComponent>
                                              </Styled(Button)>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </ThemeProvider>
                              </Wrapper>
                            </ButtonCircle>
                          </StyledComponent>
                        </Styled(ButtonCircle)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </ThemeProvider>
              </Wrapper>
            </Tag>
            <Styled(TextField)
              disabled={false}
              noborder={true}
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              placeholder="new"
              size={1}
              sizing="normal"
              visible={true}
            >
              <StyledComponent
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-kGXeez",
                      "isStatic": false,
                      "lastClassName": "fIewaV",
                      "rules": Array [
                        "
	margin-left: 2px;

	> input {
		border: none;

		&::-webkit-input-placeholder {
			color: silver;
			opacity: 0.5;
		}
	}

	",
                        [Function],
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(TextField)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-kGXeez",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                noborder={true}
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                placeholder="new"
                size={1}
                sizing="normal"
                visible={true}
              >
                <TextField
                  className="sc-kGXeez fIewaV"
                  disabled={false}
                  id=""
                  minWidth="1em"
                  noborder={true}
                  obj="TextField"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onValidation={[Function]}
                  placeholder="new"
                  size={1}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  tooltip=""
                  type="text"
                  useclear={false}
                  usevalidation={false}
                  validators={Array []}
                  visible={true}
                >
                  <Wrapper
                    bottom=""
                    className="sc-kGXeez fIewaV"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    id=""
                    left=""
                    location="none"
                    minWidth="1em"
                    noborder={true}
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="TextField"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onError={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onValidation={[Function]}
                    padding=""
                    placeholder="new"
                    reset={false}
                    selected={false}
                    size={1}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    tooltip=""
                    top=""
                    type="text"
                    useclear={false}
                    usevalidation={false}
                    validators={Array []}
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.div
                        className="ui-textfield-container"
                        id="TextField-0"
                        minWidth="3.5rem"
                      >
                        <StyledComponent
                          className="ui-textfield-container"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-jTzLTM",
                                "isStatic": false,
                                "lastClassName": "bTEaGk",
                                "rules": Array [
                                  "
	display: inline-flex;
	flex-direction: column;
	min-width: ",
                                  [Function],
                                  ";
	position: relative;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-jTzLTM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="TextField-0"
                          minWidth="3.5rem"
                        >
                          <div
                            className="ui-textfield-container sc-jTzLTM bTEaGk"
                            id="TextField-0"
                          >
                            <styled.div
                              className="ui-textfield sc-kGXeez fIewaV"
                              disabled={false}
                              noborder={true}
                              visible={true}
                            >
                              <StyledComponent
                                className="ui-textfield sc-kGXeez fIewaV"
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-fjdhpX",
                                      "isStatic": false,
                                      "lastClassName": "fnLbQx",
                                      "rules": Array [
                                        "
	border: ",
                                        [Function],
                                        ";
	display: inherit;
	padding: 1px 0;

	&:hover .ui-textfield-clear-button {
		opacity: ",
                                        [Function],
                                        ";
	}
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-fjdhpX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                noborder={true}
                                visible={true}
                              >
                                <div
                                  className="ui-textfield sc-kGXeez fIewaV sc-fjdhpX fnLbQx"
                                  disabled={false}
                                >
                                  <styled.input
                                    className="sc-kGXeez fIewaV"
                                    disabled={false}
                                    id=""
                                    obj="TextField"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    placeholder="new"
                                    size={1}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    tooltip=""
                                    type="text"
                                    visible={true}
                                  >
                                    <StyledComponent
                                      className="sc-kGXeez fIewaV"
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-VigVT",
                                            "isStatic": false,
                                            "lastClassName": "hinBcX",
                                            "rules": Array [
                                              "
	border: none;
	box-sizing: border-box;
	display: inline-flex;
	font-size: inherit;
	min-height: 0;
	min-width: 0;
	outline: none;
	padding: 1px 5px;
	width: 100%;

	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
	",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.input",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-VigVT",
                                          "target": "input",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={[Function]}
                                      id=""
                                      obj="TextField"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      placeholder="new"
                                      size={1}
                                      sizing="normal"
                                      style={Object {}}
                                      testing={true}
                                      tooltip=""
                                      type="text"
                                      visible={true}
                                    >
                                      <input
                                        className="sc-kGXeez fIewaV sc-VigVT hinBcX"
                                        disabled={false}
                                        id=""
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        placeholder="new"
                                        size={1}
                                        style={Object {}}
                                        type="text"
                                      />
                                    </StyledComponent>
                                  </styled.input>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </ThemeProvider>
                  </Wrapper>
                </TextField>
              </StyledComponent>
            </Styled(TextField)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TagList>
`;
