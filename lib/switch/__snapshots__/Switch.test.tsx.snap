// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test creation of an inny type Switch 1`] = `
<Wrapper
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={true}
  innyScale={0.6}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Switch"
  onClick={[Function]}
  onError={[Function]}
  outyScale={1.25}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  sliderScale={1.25}
  style={Object {}}
  switchType={0}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-switch"
    height="20px"
    style={Object {}}
  >
    <styled.div
      bottom=""
      className="ui-switch-slider ui-slider-on"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      focus={false}
      height=""
      id=""
      initialToggle={true}
      innyScale={0.6}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Switch"
      onClick={[Function]}
      outyScale={1.25}
      padding=""
      selected={false}
      sizing="normal"
      sliderScale={1.25}
      style={
        Object {
          "backgroundColor": "#5cb85c",
        }
      }
      switchType={0}
      testing={true}
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    >
      <styled.div
        className="ui-switch-button ripple"
        height="9.6px"
        onClick={[Function]}
        style={
          Object {
            "left": "5%",
          }
        }
        width="9.6px"
      />
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test creation of an outy type Switch 1`] = `
<Wrapper
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={true}
  innyScale={0.6}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Switch"
  onClick={[Function]}
  onError={[Function]}
  outyScale={1.25}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  sliderScale={1.25}
  style={Object {}}
  switchType={1}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-switch"
    height="20px"
    style={Object {}}
  >
    <styled.div
      bottom=""
      className="ui-switch-slider ui-slider-on"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      focus={false}
      height=""
      id=""
      initialToggle={true}
      innyScale={0.6}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Switch"
      onClick={[Function]}
      outyScale={1.25}
      padding=""
      selected={false}
      sizing="normal"
      sliderScale={1.25}
      style={
        Object {
          "backgroundColor": "#5cb85c",
        }
      }
      switchType={1}
      testing={true}
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    >
      <styled.div
        className="ui-switch-button ripple"
        height="20px"
        onClick={[Function]}
        style={
          Object {
            "left": "-15%",
          }
        }
        width="20px"
      />
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test disabling of the Switch control 1`] = `
<Switch
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={true}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  innyScale={0.6}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Switch"
  onClick={[Function]}
  outyScale={1.25}
  padding=""
  selected={false}
  sizing="normal"
  sliderScale={1.25}
  style={Object {}}
  switchType={1}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={true}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    initialToggle={false}
    innyScale={0.6}
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Switch"
    onClick={[Function]}
    onError={[Function]}
    outyScale={1.25}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    sliderScale={1.25}
    style={Object {}}
    switchType={1}
    testing={true}
    theme={null}
    tooltip=""
    top=""
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-switch"
        height="20px"
        style={Object {}}
      >
        <StyledComponent
          className="ui-switch"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bxivhb",
                "isStatic": false,
                "lastClassName": "gEkvMP",
                "rules": Array [
                  "
	align-items: center;
	box-sizing: border-box;
	display: inline-flex;
	height: ",
                  [Function],
                  ";
	padding: 0 2%;
	width: auto;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bxivhb",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          height="20px"
          style={Object {}}
        >
          <div
            className="ui-switch sc-bxivhb gEkvMP"
            height="20px"
            style={Object {}}
          >
            <styled.div
              bottom=""
              className="ui-switch-slider ui-slider-off"
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={true}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              initialToggle={false}
              innyScale={0.6}
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Switch"
              onClick={[Function]}
              outyScale={1.25}
              padding=""
              selected={false}
              sizing="normal"
              sliderScale={1.25}
              style={
                Object {
                  "backgroundColor": "#d9534f",
                }
              }
              switchType={1}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              visible={true}
              width=""
              xcss={null}
            >
              <StyledComponent
                bottom=""
                className="ui-switch-slider ui-slider-off"
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={true}
                err={null}
                errorMessage=""
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": false,
                      "lastClassName": "fyCqDK",
                      "rules": Array [
                        "
	border: 1px solid silver;
	border-radius: 96px;
	position: relative;

	",
                        [Function],
                        "
	",
                        [Function],
                        "
	",
                        [Function],
                        "

	overflow: unset;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                height=""
                id=""
                initialToggle={false}
                innyScale={0.6}
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Switch"
                onClick={[Function]}
                outyScale={1.25}
                padding=""
                selected={false}
                sizing="normal"
                sliderScale={1.25}
                style={
                  Object {
                    "backgroundColor": "#d9534f",
                  }
                }
                switchType={1}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                visible={true}
                width=""
                xcss={null}
              >
                <div
                  className="ui-switch-slider ui-slider-off sc-htpNat fyCqDK"
                  contentEditable={false}
                  direction="right"
                  disabled={true}
                  height=""
                  id=""
                  onClick={[Function]}
                  selected={false}
                  style={
                    Object {
                      "backgroundColor": "#d9534f",
                    }
                  }
                  width=""
                >
                  <styled.div
                    className="ui-switch-button"
                    height="20px"
                    onClick={[Function]}
                    style={
                      Object {
                        "left": "45%",
                      }
                    }
                    width="20px"
                  >
                    <StyledComponent
                      className="ui-switch-button"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": false,
                            "lastClassName": "blpYHB",
                            "rules": Array [
                              "
	background: white;
	border: 1px solid silver;
	border-radius: 96px;
	box-sizing: border-box;
	display: inline-block;
	position: absolute;
	top: 50%;
	transition: all ",
                              [Function],
                              " ease;
	transform: translateY(-50%);

	width: ",
                              [Function],
                              ";
	height: ",
                              [Function],
                              ";
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      height="20px"
                      onClick={[Function]}
                      style={
                        Object {
                          "left": "45%",
                        }
                      }
                      width="20px"
                    >
                      <div
                        className="ui-switch-button sc-bwzfXH blpYHB"
                        height="20px"
                        onClick={[Function]}
                        style={
                          Object {
                            "left": "45%",
                          }
                        }
                        width="20px"
                      />
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Switch>
`;

exports[`Test making the Switch control invisible 1`] = `
<Switch
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  innyScale={0.6}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Switch"
  onClick={[Function]}
  outyScale={1.25}
  padding=""
  selected={false}
  sizing="normal"
  sliderScale={1.25}
  style={Object {}}
  switchType={1}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={false}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    initialToggle={false}
    innyScale={0.6}
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Switch"
    onClick={[Function]}
    onError={[Function]}
    outyScale={1.25}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    sliderScale={1.25}
    style={Object {}}
    switchType={1}
    testing={true}
    theme={null}
    tooltip=""
    top=""
    visible={false}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-switch"
        height="20px"
        style={Object {}}
      >
        <StyledComponent
          className="ui-switch"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bxivhb",
                "isStatic": false,
                "lastClassName": "gEkvMP",
                "rules": Array [
                  "
	align-items: center;
	box-sizing: border-box;
	display: inline-flex;
	height: ",
                  [Function],
                  ";
	padding: 0 2%;
	width: auto;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bxivhb",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          height="20px"
          style={Object {}}
        >
          <div
            className="ui-switch sc-bxivhb gEkvMP"
            height="20px"
            style={Object {}}
          >
            <styled.div
              bottom=""
              className="ui-switch-slider ui-slider-off"
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              initialToggle={false}
              innyScale={0.6}
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Switch"
              onClick={[Function]}
              outyScale={1.25}
              padding=""
              selected={false}
              sizing="normal"
              sliderScale={1.25}
              style={
                Object {
                  "backgroundColor": "#d9534f",
                }
              }
              switchType={1}
              testing={true}
              theme={null}
              tooltip=""
              top=""
              visible={false}
              width=""
              xcss={null}
            >
              <StyledComponent
                bottom=""
                className="ui-switch-slider ui-slider-off"
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": false,
                      "lastClassName": "iDvcXg",
                      "rules": Array [
                        "
	border: 1px solid silver;
	border-radius: 96px;
	position: relative;

	",
                        [Function],
                        "
	",
                        [Function],
                        "
	",
                        [Function],
                        "

	overflow: unset;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                height=""
                id=""
                initialToggle={false}
                innyScale={0.6}
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Switch"
                onClick={[Function]}
                outyScale={1.25}
                padding=""
                selected={false}
                sizing="normal"
                sliderScale={1.25}
                style={
                  Object {
                    "backgroundColor": "#d9534f",
                  }
                }
                switchType={1}
                testing={true}
                theme={null}
                tooltip=""
                top=""
                visible={false}
                width=""
                xcss={null}
              >
                <div
                  className="ui-switch-slider ui-slider-off sc-htpNat iDvcXg"
                  contentEditable={false}
                  direction="right"
                  disabled={false}
                  height=""
                  id=""
                  onClick={[Function]}
                  selected={false}
                  style={
                    Object {
                      "backgroundColor": "#d9534f",
                    }
                  }
                  width=""
                >
                  <styled.div
                    className="ui-switch-button ripple"
                    height="20px"
                    onClick={[Function]}
                    style={
                      Object {
                        "left": "45%",
                      }
                    }
                    width="20px"
                  >
                    <StyledComponent
                      className="ui-switch-button ripple"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": false,
                            "lastClassName": "blpYHB",
                            "rules": Array [
                              "
	background: white;
	border: 1px solid silver;
	border-radius: 96px;
	box-sizing: border-box;
	display: inline-block;
	position: absolute;
	top: 50%;
	transition: all ",
                              [Function],
                              " ease;
	transform: translateY(-50%);

	width: ",
                              [Function],
                              ";
	height: ",
                              [Function],
                              ";
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      height="20px"
                      onClick={[Function]}
                      style={
                        Object {
                          "left": "45%",
                        }
                      }
                      width="20px"
                    >
                      <div
                        className="ui-switch-button ripple sc-bwzfXH blpYHB"
                        height="20px"
                        onClick={[Function]}
                        style={
                          Object {
                            "left": "45%",
                          }
                        }
                        width="20px"
                      />
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Switch>
`;

exports[`Test retrieval of the Switch props object 1`] = `
Object {
  "bottom": "",
  "children": null,
  "className": "",
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": "",
  "focus": false,
  "height": "",
  "id": "",
  "initialToggle": false,
  "innyScale": 0.6,
  "left": "",
  "location": "none",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "notheme": false,
  "obj": "Switch",
  "onClick": [Function],
  "outyScale": 1.25,
  "padding": "",
  "selected": false,
  "sizing": "normal",
  "sliderScale": 1.25,
  "style": Object {},
  "switchType": 1,
  "testing": true,
  "theme": null,
  "tooltip": "",
  "top": "",
  "visible": true,
  "width": "",
  "xcss": null,
}
`;

exports[`Test the click handler on the Switch control 1`] = `
<Wrapper
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  innyScale={0.6}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Switch"
  onClick={[MockFunction]}
  onError={[Function]}
  outyScale={1.25}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  sliderScale={1.25}
  style={Object {}}
  switchType={1}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-switch"
    height="20px"
    style={Object {}}
  >
    <styled.div
      bottom=""
      className="ui-switch-slider ui-slider-off"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      focus={false}
      height=""
      id=""
      initialToggle={false}
      innyScale={0.6}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Switch"
      onClick={[Function]}
      outyScale={1.25}
      padding=""
      selected={false}
      sizing="normal"
      sliderScale={1.25}
      style={
        Object {
          "backgroundColor": "#d9534f",
        }
      }
      switchType={1}
      testing={true}
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    >
      <styled.div
        className="ui-switch-button ripple"
        height="20px"
        onClick={[Function]}
        style={
          Object {
            "left": "45%",
          }
        }
        width="20px"
      />
    </styled.div>
  </styled.div>
</Wrapper>
`;
