// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test clicking of the AccordionItem header 1`] = `
.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: block;
  text-align: left;
  -webkit-flex: 5;
  -ms-flex: 5;
  flex: 5;
  font-size: 1rem;
  font-weight: inherit;
}

.c1 {
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1:hover {
  background-color: #bedb39 !important;
}

.c1:hover .ui-item-button {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  opacity: 1.0;
}

.c0 {
  border-bottom: solid 1px;
  border-color: black;
}

.c0 > .ui-item,
.c0 > .ui-item-button {
  color: #ffffff;
  background-color: #004358;
}

.c0 > .ui-item:hover {
  color: #ffe11a;
  background-color: #004358 !important;
}

<AccordionItem
  className=""
  contentEditable={false}
  direction="right"
  disabled={false}
  focus={false}
  height=""
  hiddenLeftButton={false}
  hiddenRightButton={false}
  id=""
  initialToggle={false}
  layout={5}
  leftButton={null}
  location="none"
  nocollapse={false}
  noedit={false}
  nohover={false}
  noripple={false}
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onDoubleClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onUpdate={[Function]}
  rightButton={null}
  selected={false}
  sizing="normal"
  stacked={false}
  style={Object {}}
  testing={true}
  title="Test Title"
  useedit={false}
  visible={true}
  widget={null}
  width=""
  xcss={null}
>
  <ThemeProvider
    theme={
      Object {
        "backgroundColor": "#ffffff",
        "borderColor": "#004358",
        "color": "#000000",
        "headerBackgroundColor": "#004358",
        "headerForegroundColor": "#ffffff",
        "hoverColor": "#ffe11a",
      }
    }
  >
    <styled.ul
      className="ui-accordionitem"
      style={Object {}}
    >
      <ul
        className="ui-accordionitem c0"
        style={Object {}}
      >
        <Item
          className=""
          contentEditable={false}
          direction="right"
          disabled={false}
          focus={false}
          height=""
          hiddenLeftButton={false}
          hiddenRightButton={false}
          id=""
          initialToggle={false}
          layout={5}
          leftButton={null}
          location="none"
          nocollapse={false}
          noedit={false}
          nohover={false}
          noripple={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onDoubleClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseOut={[Function]}
          onUpdate={[Function]}
          rightButton={null}
          selected={false}
          sizing="normal"
          stacked={false}
          style={Object {}}
          testing={true}
          title="Test Title"
          useedit={false}
          visible={true}
          widget={null}
          width=""
          xcss={null}
        >
          <ThemeProvider
            theme={
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#004358",
                "color": "#000000",
                "headerBackgroundColor": "#004358",
                "headerForegroundColor": "#ffffff",
                "hoverColor": "#ffe11a",
              }
            }
          >
            <styled.li
              className="ui-item"
              id=""
              nohover={false}
              onBlur={[Function]}
              onDoubleClick={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseOut={[Function]}
              style={Object {}}
            >
              <li
                className="ui-item c1"
                id=""
                onBlur={[Function]}
                onDoubleClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                onMouseOut={[Function]}
                style={Object {}}
              >
                <Title
                  className=""
                  contentEditable={false}
                  direction="right"
                  disabled={false}
                  focus={false}
                  height=""
                  hiddenLeftButton={false}
                  hiddenRightButton={false}
                  id=""
                  initialToggle={false}
                  layout={5}
                  leftButton={null}
                  location="none"
                  nocollapse={false}
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onMouseOut={[Function]}
                  onUpdate={[Function]}
                  rightButton={null}
                  selected={false}
                  sizing="normal"
                  stacked={false}
                  style={
                    Object {
                      "padding": "2px 4px",
                    }
                  }
                  testing={true}
                  title="Test Title"
                  useedit={false}
                  visible={true}
                  widget={null}
                  width=""
                  xcss={null}
                >
                  <ThemeProvider
                    theme={
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderColor": "#004358",
                        "color": "#000000",
                        "headerBackgroundColor": "#004358",
                        "headerForegroundColor": "#ffffff",
                        "hoverColor": "#ffe11a",
                      }
                    }
                  >
                    <styled.div
                      className="ui-title-bar ripple"
                      layout={5}
                      style={
                        Object {
                          "padding": "2px 4px",
                        }
                      }
                    >
                      <div
                        className="ui-title-bar ripple c2"
                        style={
                          Object {
                            "padding": "2px 4px",
                          }
                        }
                      >
                        <Styled(Label)
                          className="ui-title"
                          contentEditable={false}
                          direction="right"
                          disabled={false}
                          focus={false}
                          height=""
                          hiddenLeftButton={false}
                          hiddenRightButton={false}
                          id=""
                          initialToggle={false}
                          layout={5}
                          leftButton={null}
                          location="none"
                          nocollapse={false}
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onClick={[Function]}
                          onDoubleClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onMouseOut={[Function]}
                          onUpdate={[Function]}
                          rightButton={null}
                          selected={false}
                          sizing="normal"
                          stacked={false}
                          style={
                            Object {
                              "padding": "2px 4px",
                            }
                          }
                          testing={true}
                          text="Test Title"
                          title="Test Title"
                          useedit={false}
                          visible={true}
                          widget={null}
                          width=""
                          xcss={
                            Array [
                              "
	text-align: left;
	flex: 5;
",
                            ]
                          }
                        >
                          <Label
                            className="ui-title c3"
                            contentEditable={false}
                            direction="right"
                            disabled={false}
                            focus={false}
                            height=""
                            hiddenLeftButton={false}
                            hiddenRightButton={false}
                            id=""
                            initialToggle={false}
                            layout={5}
                            leftButton={null}
                            location="none"
                            nocollapse={false}
                            noedit={false}
                            nohover={false}
                            noripple={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onClick={[Function]}
                            onDoubleClick={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onMouseOut={[Function]}
                            onUpdate={[Function]}
                            rightButton={null}
                            selected={false}
                            sizing="normal"
                            stacked={false}
                            style={
                              Object {
                                "padding": "2px 4px",
                              }
                            }
                            testing={true}
                            text="Test Title"
                            title="Test Title"
                            useedit={false}
                            visible={true}
                            widget={null}
                            width=""
                            xcss={
                              Array [
                                "
	text-align: left;
	flex: 5;
",
                              ]
                            }
                          >
                            <span
                              className="ui-label label normal ui-title c3"
                              contentEditable={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              style={
                                Object {
                                  "padding": "2px 4px",
                                }
                              }
                              suppressContentEditableWarning={true}
                            >
                              Test Title
                            </span>
                          </Label>
                        </Styled(Label)>
                      </div>
                    </styled.div>
                  </ThemeProvider>
                </Title>
              </li>
            </styled.li>
          </ThemeProvider>
        </Item>
      </ul>
    </styled.ul>
  </ThemeProvider>
</AccordionItem>
`;

exports[`Test clicking the AccordionItem header when setting nocollapse 1`] = `
.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: block;
  text-align: left;
  -webkit-flex: 5;
  -ms-flex: 5;
  flex: 5;
  font-size: 1rem;
  font-weight: inherit;
}

.c1 {
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1:hover {
  background-color: #bedb39 !important;
}

.c1:hover .ui-item-button {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  opacity: 1.0;
}

.c0 {
  border-bottom: solid 1px;
  border-color: black;
}

.c0 > .ui-item,
.c0 > .ui-item-button {
  color: #ffffff;
  background-color: #004358;
}

.c0 > .ui-item:hover {
  color: #ffe11a;
  background-color: #004358 !important;
}

<AccordionItem
  className=""
  contentEditable={false}
  direction="right"
  disabled={false}
  focus={false}
  height=""
  hiddenLeftButton={false}
  hiddenRightButton={false}
  id=""
  initialToggle={false}
  layout={5}
  leftButton={null}
  location="none"
  nocollapse={true}
  noedit={false}
  nohover={false}
  noripple={false}
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onDoubleClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onUpdate={[Function]}
  rightButton={null}
  selected={false}
  sizing="normal"
  stacked={false}
  style={Object {}}
  testing={true}
  title="Test Title"
  useedit={false}
  visible={true}
  widget={null}
  width=""
  xcss={null}
>
  <ThemeProvider
    theme={
      Object {
        "backgroundColor": "#ffffff",
        "borderColor": "#004358",
        "color": "#000000",
        "headerBackgroundColor": "#004358",
        "headerForegroundColor": "#ffffff",
        "hoverColor": "#ffe11a",
      }
    }
  >
    <styled.ul
      className="ui-accordionitem"
      style={Object {}}
    >
      <ul
        className="ui-accordionitem c0"
        style={Object {}}
      >
        <Item
          className=""
          contentEditable={false}
          direction="right"
          disabled={false}
          focus={false}
          height=""
          hiddenLeftButton={false}
          hiddenRightButton={false}
          id=""
          initialToggle={false}
          layout={5}
          leftButton={null}
          location="none"
          nocollapse={true}
          noedit={false}
          nohover={false}
          noripple={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onDoubleClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseOut={[Function]}
          onUpdate={[Function]}
          rightButton={null}
          selected={false}
          sizing="normal"
          stacked={false}
          style={Object {}}
          testing={true}
          title="Test Title"
          useedit={false}
          visible={true}
          widget={null}
          width=""
          xcss={null}
        >
          <ThemeProvider
            theme={
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#004358",
                "color": "#000000",
                "headerBackgroundColor": "#004358",
                "headerForegroundColor": "#ffffff",
                "hoverColor": "#ffe11a",
              }
            }
          >
            <styled.li
              className="ui-item"
              id=""
              nohover={false}
              onBlur={[Function]}
              onDoubleClick={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseOut={[Function]}
              style={Object {}}
            >
              <li
                className="ui-item c1"
                id=""
                onBlur={[Function]}
                onDoubleClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                onMouseOut={[Function]}
                style={Object {}}
              >
                <Title
                  className=""
                  contentEditable={false}
                  direction="right"
                  disabled={false}
                  focus={false}
                  height=""
                  hiddenLeftButton={false}
                  hiddenRightButton={false}
                  id=""
                  initialToggle={false}
                  layout={5}
                  leftButton={null}
                  location="none"
                  nocollapse={true}
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onMouseOut={[Function]}
                  onUpdate={[Function]}
                  rightButton={null}
                  selected={false}
                  sizing="normal"
                  stacked={false}
                  style={
                    Object {
                      "padding": "2px 4px",
                    }
                  }
                  testing={true}
                  title="Test Title"
                  useedit={false}
                  visible={true}
                  widget={null}
                  width=""
                  xcss={null}
                >
                  <ThemeProvider
                    theme={
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderColor": "#004358",
                        "color": "#000000",
                        "headerBackgroundColor": "#004358",
                        "headerForegroundColor": "#ffffff",
                        "hoverColor": "#ffe11a",
                      }
                    }
                  >
                    <styled.div
                      className="ui-title-bar ripple"
                      layout={5}
                      style={
                        Object {
                          "padding": "2px 4px",
                        }
                      }
                    >
                      <div
                        className="ui-title-bar ripple c2"
                        style={
                          Object {
                            "padding": "2px 4px",
                          }
                        }
                      >
                        <Styled(Label)
                          className="ui-title"
                          contentEditable={false}
                          direction="right"
                          disabled={false}
                          focus={false}
                          height=""
                          hiddenLeftButton={false}
                          hiddenRightButton={false}
                          id=""
                          initialToggle={false}
                          layout={5}
                          leftButton={null}
                          location="none"
                          nocollapse={true}
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onClick={[Function]}
                          onDoubleClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onMouseOut={[Function]}
                          onUpdate={[Function]}
                          rightButton={null}
                          selected={false}
                          sizing="normal"
                          stacked={false}
                          style={
                            Object {
                              "padding": "2px 4px",
                            }
                          }
                          testing={true}
                          text="Test Title"
                          title="Test Title"
                          useedit={false}
                          visible={true}
                          widget={null}
                          width=""
                          xcss={
                            Array [
                              "
	text-align: left;
	flex: 5;
",
                            ]
                          }
                        >
                          <Label
                            className="ui-title c3"
                            contentEditable={false}
                            direction="right"
                            disabled={false}
                            focus={false}
                            height=""
                            hiddenLeftButton={false}
                            hiddenRightButton={false}
                            id=""
                            initialToggle={false}
                            layout={5}
                            leftButton={null}
                            location="none"
                            nocollapse={true}
                            noedit={false}
                            nohover={false}
                            noripple={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onClick={[Function]}
                            onDoubleClick={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onMouseOut={[Function]}
                            onUpdate={[Function]}
                            rightButton={null}
                            selected={false}
                            sizing="normal"
                            stacked={false}
                            style={
                              Object {
                                "padding": "2px 4px",
                              }
                            }
                            testing={true}
                            text="Test Title"
                            title="Test Title"
                            useedit={false}
                            visible={true}
                            widget={null}
                            width=""
                            xcss={
                              Array [
                                "
	text-align: left;
	flex: 5;
",
                              ]
                            }
                          >
                            <span
                              className="ui-label label normal ui-title c3"
                              contentEditable={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              style={
                                Object {
                                  "padding": "2px 4px",
                                }
                              }
                              suppressContentEditableWarning={true}
                            >
                              Test Title
                            </span>
                          </Label>
                        </Styled(Label)>
                      </div>
                    </styled.div>
                  </ThemeProvider>
                </Title>
              </li>
            </styled.li>
          </ThemeProvider>
        </Item>
        <div
          className="ui-accordion-content"
        >
          <div>
            child content
          </div>
        </div>
      </ul>
    </styled.ul>
  </ThemeProvider>
</AccordionItem>
`;

exports[`Test making the AccordionItem invisible 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#004358",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "hoverColor": "#ffe11a",
    }
  }
>
  <styled.ul
    className="ui-accordionitem"
    style={Object {}}
  >
    <Item
      className=""
      contentEditable={false}
      direction="right"
      disabled={false}
      focus={false}
      height=""
      hiddenLeftButton={false}
      hiddenRightButton={false}
      id=""
      initialToggle={false}
      layout={5}
      leftButton={null}
      location="none"
      nocollapse={false}
      noedit={false}
      nohover={false}
      noripple={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onDoubleClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onMouseOut={[Function]}
      onUpdate={[Function]}
      rightButton={null}
      selected={false}
      sizing="normal"
      stacked={false}
      style={Object {}}
      testing={true}
      title="Test Title"
      useedit={false}
      visible={false}
      widget={null}
      width=""
      xcss={null}
    />
  </styled.ul>
</ThemeProvider>
`;

exports[`Test retrieval of AccordionItem props object 1`] = `
Object {
  "className": "",
  "contentEditable": false,
  "direction": "right",
  "disabled": false,
  "focus": false,
  "height": "",
  "hiddenLeftButton": false,
  "hiddenRightButton": false,
  "id": "",
  "initialToggle": false,
  "layout": 5,
  "leftButton": null,
  "location": "none",
  "nocollapse": false,
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "onBlur": [Function],
  "onChange": [Function],
  "onClick": [Function],
  "onDoubleClick": [Function],
  "onFocus": [Function],
  "onKeyDown": [Function],
  "onKeyPress": [Function],
  "onMouseOut": [Function],
  "onUpdate": [Function],
  "rightButton": null,
  "selected": false,
  "sizing": "normal",
  "stacked": false,
  "style": Object {},
  "testing": true,
  "title": "",
  "useedit": false,
  "visible": true,
  "widget": null,
  "width": "",
  "xcss": null,
}
`;

exports[`Test the creation of a AccordionItem control 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#004358",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "hoverColor": "#ffe11a",
    }
  }
>
  <styled.ul
    className="ui-accordionitem test-class"
    style={Object {}}
  >
    <Item
      className="test-class"
      contentEditable={false}
      direction="right"
      disabled={false}
      focus={false}
      height=""
      hiddenLeftButton={false}
      hiddenRightButton={false}
      id=""
      initialToggle={false}
      layout={5}
      leftButton={null}
      location="none"
      nocollapse={false}
      noedit={false}
      nohover={false}
      noripple={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onDoubleClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onMouseOut={[Function]}
      onUpdate={[Function]}
      rightButton={null}
      selected={false}
      sizing="normal"
      stacked={false}
      style={Object {}}
      testing={true}
      title="Test Title"
      useedit={false}
      visible={true}
      widget={null}
      width=""
      xcss={null}
    />
  </styled.ul>
</ThemeProvider>
`;

exports[`Test the disabling of the AccordionItem 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#004358",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "hoverColor": "#ffe11a",
    }
  }
>
  <styled.ul
    className="ui-accordionitem"
    style={Object {}}
  >
    <Item
      className=""
      contentEditable={false}
      direction="right"
      disabled={true}
      focus={false}
      height=""
      hiddenLeftButton={false}
      hiddenRightButton={false}
      id=""
      initialToggle={false}
      layout={5}
      leftButton={null}
      location="none"
      nocollapse={false}
      noedit={false}
      nohover={false}
      noripple={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onDoubleClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onMouseOut={[Function]}
      onUpdate={[Function]}
      rightButton={null}
      selected={false}
      sizing="normal"
      stacked={false}
      style={Object {}}
      testing={true}
      title="Test Title"
      useedit={false}
      visible={true}
      widget={null}
      width=""
      xcss={null}
    />
  </styled.ul>
</ThemeProvider>
`;
