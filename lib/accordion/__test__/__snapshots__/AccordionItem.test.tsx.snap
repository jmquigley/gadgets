// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test clicking of the AccordionItem header 1`] = `
.c0 {
  border-bottom: solid 1px black;
}

.c0:last-child {
  border-bottom: 0;
}

<AccordionItem
  className=""
  contentEditable={false}
  direction="right"
  disabled={false}
  focus={false}
  height=""
  hiddenLeftButton={false}
  hiddenRightButton={false}
  id=""
  initialToggle={false}
  layout={5}
  leftButton={null}
  location="none"
  nocollapse={false}
  noedit={false}
  nohover={false}
  noripple={false}
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onDoubleClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onUpdate={[Function]}
  rightButton={null}
  selected={false}
  sizing="normal"
  stacked={false}
  style={Object {}}
  testing={false}
  title="Test Title"
  useedit={false}
  visible={true}
  widget={null}
  width=""
>
  <styled.ul
    className="ui-accordionitem"
    style={Object {}}
  >
    <ul
      className="ui-accordionitem c0"
      style={Object {}}
    >
      <Item
        className=""
        contentEditable={false}
        direction="right"
        disabled={false}
        focus={false}
        height=""
        hiddenLeftButton={false}
        hiddenRightButton={false}
        id=""
        initialToggle={false}
        layout={5}
        leftButton={null}
        location="none"
        nocollapse={false}
        noedit={false}
        nohover={false}
        noripple={false}
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onDoubleClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onMouseOut={[Function]}
        onUpdate={[Function]}
        rightButton={null}
        selected={false}
        sizing="normal"
        stacked={false}
        style={Object {}}
        testing={false}
        title="Test Title"
        useedit={false}
        visible={true}
        widget={null}
        width=""
      >
        <li
          className="ui-item item normal"
          id=""
          onBlur={[Function]}
          onDoubleClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseOut={[Function]}
          style={Object {}}
        >
          <Title
            className="itemTitle"
            contentEditable={false}
            direction="right"
            disabled={false}
            focus={false}
            height=""
            hiddenLeftButton={false}
            hiddenRightButton={false}
            id=""
            initialToggle={false}
            layout={5}
            leftButton={null}
            location="none"
            nocollapse={false}
            noedit={false}
            nohover={false}
            noripple={false}
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onDoubleClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyPress={[Function]}
            onMouseOut={[Function]}
            onUpdate={[Function]}
            rightButton={null}
            selected={false}
            sizing="normal"
            stacked={false}
            style={
              Object {
                "padding": "2px 4px",
              }
            }
            testing={false}
            title="Test Title"
            useedit={false}
            visible={true}
            widget={null}
            width=""
          >
            <div
              className="ui-title-bar titleBar ripple normal itemTitle"
              style={
                Object {
                  "padding": "2px 4px",
                }
              }
            >
              <Label
                className="ui-title title titleDominant"
                contentEditable={false}
                direction="right"
                disabled={false}
                focus={false}
                height=""
                hiddenLeftButton={false}
                hiddenRightButton={false}
                id=""
                initialToggle={false}
                layout={5}
                leftButton={null}
                location="none"
                nocollapse={false}
                noedit={false}
                nohover={false}
                noripple={false}
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onDoubleClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                onMouseOut={[Function]}
                onUpdate={[Function]}
                rightButton={null}
                selected={false}
                sizing="normal"
                stacked={false}
                style={
                  Object {
                    "padding": "2px 4px",
                  }
                }
                testing={false}
                text="Test Title"
                title="Test Title"
                useedit={false}
                visible={true}
                widget={null}
                width=""
              >
                <span
                  className="ui-label label normal ui-title title titleDominant"
                  contentEditable={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  style={
                    Object {
                      "padding": "2px 4px",
                    }
                  }
                  suppressContentEditableWarning={true}
                >
                  Test Title
                </span>
              </Label>
            </div>
          </Title>
        </li>
      </Item>
    </ul>
  </styled.ul>
</AccordionItem>
`;

exports[`Test clicking the AccordionItem header when setting nocollapse 1`] = `
.c0 {
  border-bottom: solid 1px black;
}

.c0:last-child {
  border-bottom: 0;
}

<AccordionItem
  className=""
  contentEditable={false}
  direction="right"
  disabled={false}
  focus={false}
  height=""
  hiddenLeftButton={false}
  hiddenRightButton={false}
  id=""
  initialToggle={false}
  layout={5}
  leftButton={null}
  location="none"
  nocollapse={true}
  noedit={false}
  nohover={false}
  noripple={false}
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onDoubleClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onUpdate={[Function]}
  rightButton={null}
  selected={false}
  sizing="normal"
  stacked={false}
  style={Object {}}
  testing={false}
  title="Test Title"
  useedit={false}
  visible={true}
  widget={null}
  width=""
>
  <styled.ul
    className="ui-accordionitem"
    style={Object {}}
  >
    <ul
      className="ui-accordionitem c0"
      style={Object {}}
    >
      <Item
        className=""
        contentEditable={false}
        direction="right"
        disabled={false}
        focus={false}
        height=""
        hiddenLeftButton={false}
        hiddenRightButton={false}
        id=""
        initialToggle={false}
        layout={5}
        leftButton={null}
        location="none"
        nocollapse={true}
        noedit={false}
        nohover={false}
        noripple={false}
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onDoubleClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        onMouseOut={[Function]}
        onUpdate={[Function]}
        rightButton={null}
        selected={false}
        sizing="normal"
        stacked={false}
        style={Object {}}
        testing={false}
        title="Test Title"
        useedit={false}
        visible={true}
        widget={null}
        width=""
      >
        <li
          className="ui-item item normal"
          id=""
          onBlur={[Function]}
          onDoubleClick={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onMouseOut={[Function]}
          style={Object {}}
        >
          <Title
            className="itemTitle"
            contentEditable={false}
            direction="right"
            disabled={false}
            focus={false}
            height=""
            hiddenLeftButton={false}
            hiddenRightButton={false}
            id=""
            initialToggle={false}
            layout={5}
            leftButton={null}
            location="none"
            nocollapse={true}
            noedit={false}
            nohover={false}
            noripple={false}
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onDoubleClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyPress={[Function]}
            onMouseOut={[Function]}
            onUpdate={[Function]}
            rightButton={null}
            selected={false}
            sizing="normal"
            stacked={false}
            style={
              Object {
                "padding": "2px 4px",
              }
            }
            testing={false}
            title="Test Title"
            useedit={false}
            visible={true}
            widget={null}
            width=""
          >
            <div
              className="ui-title-bar titleBar ripple normal itemTitle"
              style={
                Object {
                  "padding": "2px 4px",
                }
              }
            >
              <Label
                className="ui-title title titleDominant"
                contentEditable={false}
                direction="right"
                disabled={false}
                focus={false}
                height=""
                hiddenLeftButton={false}
                hiddenRightButton={false}
                id=""
                initialToggle={false}
                layout={5}
                leftButton={null}
                location="none"
                nocollapse={true}
                noedit={false}
                nohover={false}
                noripple={false}
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onDoubleClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                onMouseOut={[Function]}
                onUpdate={[Function]}
                rightButton={null}
                selected={false}
                sizing="normal"
                stacked={false}
                style={
                  Object {
                    "padding": "2px 4px",
                  }
                }
                testing={false}
                text="Test Title"
                title="Test Title"
                useedit={false}
                visible={true}
                widget={null}
                width=""
              >
                <span
                  className="ui-label label normal ui-title title titleDominant"
                  contentEditable={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  style={
                    Object {
                      "padding": "2px 4px",
                    }
                  }
                  suppressContentEditableWarning={true}
                >
                  Test Title
                </span>
              </Label>
            </div>
          </Title>
        </li>
      </Item>
      <div
        className="ui-accordion-content"
      >
        <div>
          child content
        </div>
      </div>
    </ul>
  </styled.ul>
</AccordionItem>
`;

exports[`Test making the AccordionItem invisible 1`] = `
<styled.ul
  className="ui-accordionitem"
  style={Object {}}
>
  <Item
    className=""
    contentEditable={false}
    direction="right"
    disabled={false}
    focus={false}
    height=""
    hiddenLeftButton={false}
    hiddenRightButton={false}
    id=""
    initialToggle={false}
    layout={5}
    leftButton={null}
    location="none"
    nocollapse={false}
    noedit={false}
    nohover={false}
    noripple={false}
    onBlur={[Function]}
    onChange={[Function]}
    onClick={[Function]}
    onDoubleClick={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onMouseOut={[Function]}
    onUpdate={[Function]}
    rightButton={null}
    selected={false}
    sizing="normal"
    stacked={false}
    style={Object {}}
    testing={false}
    title="Test Title"
    useedit={false}
    visible={false}
    widget={null}
    width=""
  />
</styled.ul>
`;

exports[`Test retrieval of AccordionItem props object 1`] = `
Object {
  "className": "",
  "contentEditable": false,
  "direction": "right",
  "disabled": false,
  "focus": false,
  "height": "",
  "hiddenLeftButton": false,
  "hiddenRightButton": false,
  "id": "",
  "initialToggle": false,
  "layout": 5,
  "leftButton": null,
  "location": "none",
  "nocollapse": false,
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "onBlur": [Function],
  "onChange": [Function],
  "onClick": [Function],
  "onDoubleClick": [Function],
  "onFocus": [Function],
  "onKeyDown": [Function],
  "onKeyPress": [Function],
  "onMouseOut": [Function],
  "onUpdate": [Function],
  "rightButton": null,
  "selected": false,
  "sizing": "normal",
  "stacked": false,
  "style": Object {},
  "testing": false,
  "title": "",
  "useedit": false,
  "visible": true,
  "widget": null,
  "width": "",
}
`;

exports[`Test the creation of a AccordionItem control 1`] = `
<styled.ul
  className="ui-accordionitem"
  style={Object {}}
>
  <Item
    className="test-class"
    contentEditable={false}
    direction="right"
    disabled={false}
    focus={false}
    height=""
    hiddenLeftButton={false}
    hiddenRightButton={false}
    id=""
    initialToggle={false}
    layout={5}
    leftButton={null}
    location="none"
    nocollapse={false}
    noedit={false}
    nohover={false}
    noripple={false}
    onBlur={[Function]}
    onChange={[Function]}
    onClick={[Function]}
    onDoubleClick={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onMouseOut={[Function]}
    onUpdate={[Function]}
    rightButton={null}
    selected={false}
    sizing="normal"
    stacked={false}
    style={Object {}}
    testing={false}
    title="Test Title"
    useedit={false}
    visible={true}
    widget={null}
    width=""
  />
</styled.ul>
`;

exports[`Test the disabling of the AccordionItem 1`] = `
<styled.ul
  className="ui-accordionitem"
  style={Object {}}
>
  <Item
    className=""
    contentEditable={false}
    direction="right"
    disabled={true}
    focus={false}
    height=""
    hiddenLeftButton={false}
    hiddenRightButton={false}
    id=""
    initialToggle={false}
    layout={5}
    leftButton={null}
    location="none"
    nocollapse={false}
    noedit={false}
    nohover={false}
    noripple={false}
    onBlur={[Function]}
    onChange={[Function]}
    onClick={[Function]}
    onDoubleClick={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onMouseOut={[Function]}
    onUpdate={[Function]}
    rightButton={null}
    selected={false}
    sizing="normal"
    stacked={false}
    style={Object {}}
    testing={false}
    title="Test Title"
    useedit={false}
    visible={true}
    widget={null}
    width=""
  />
</styled.ul>
`;
