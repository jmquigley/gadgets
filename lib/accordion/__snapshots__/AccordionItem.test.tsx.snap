// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test clicking of the AccordionItem header 1`] = `
<AccordionItem
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  hiddenLeftButton={false}
  hiddenRightButton={false}
  id={null}
  initialToggle={false}
  layout={5}
  left={null}
  leftButton={null}
  location="none"
  minHeight={null}
  minWidth={null}
  nocollapse={false}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="AccordionItem"
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[MockFunction]}
  onDoubleClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onUpdate={[Function]}
  padding={null}
  rightButton={null}
  selected={false}
  sizing="normal"
  stacked={false}
  style={Object {}}
  testing={true}
  theme={null}
  title="Test Title"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget={null}
  width={null}
  xcss={null}
/>
`;

exports[`Test clicking the AccordionItem header when setting nocollapse 1`] = `
<AccordionItem
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  hiddenLeftButton={false}
  hiddenRightButton={false}
  id={null}
  initialToggle={false}
  layout={5}
  left={null}
  leftButton={null}
  location="none"
  minHeight={null}
  minWidth={null}
  nocollapse={true}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="AccordionItem"
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[MockFunction]}
  onDoubleClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onUpdate={[Function]}
  padding={null}
  rightButton={null}
  selected={false}
  sizing="normal"
  stacked={false}
  style={Object {}}
  testing={true}
  theme={null}
  title="Test Title"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget={null}
  width={null}
  xcss={null}
/>
`;

exports[`Test making the AccordionItem invisible 1`] = `
<Wrapper
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  hiddenLeftButton={false}
  hiddenRightButton={false}
  id={null}
  initialToggle={false}
  layout={5}
  left={null}
  leftButton={null}
  location="none"
  minHeight={null}
  minWidth={null}
  nocollapse={false}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="AccordionItem"
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onDoubleClick={[Function]}
  onError={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onUpdate={[Function]}
  padding={null}
  reset={false}
  rightButton={null}
  selected={false}
  sizing="normal"
  stacked={false}
  style={Object {}}
  testing={true}
  theme={null}
  title="Test Title"
  tooltip={null}
  top={null}
  useedit={false}
  visible={false}
  widget={null}
  width={null}
  xcss={null}
>
  <styled.ul
    className="ui-accordionitem"
    style={Object {}}
  >
    <Item
      bottom={null}
      className={null}
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      hiddenLeftButton={false}
      hiddenRightButton={false}
      id={null}
      initialToggle={false}
      layout={5}
      left={null}
      leftButton={null}
      location="none"
      minHeight={null}
      minWidth={null}
      nocollapse={false}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      notooltip={false}
      obj="AccordionItem"
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onDoubleClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onMouseOut={[Function]}
      onUpdate={[Function]}
      padding={null}
      rightButton={null}
      selected={false}
      sizing="normal"
      stacked={false}
      style={Object {}}
      testing={true}
      theme={null}
      title="Test Title"
      tooltip={null}
      top={null}
      useedit={false}
      visible={false}
      widget={null}
      width={null}
      xcss={null}
    />
  </styled.ul>
</Wrapper>
`;

exports[`Test retrieval of AccordionItem props object 1`] = `
Object {
  "bottom": null,
  "children": null,
  "className": null,
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": null,
  "focus": false,
  "height": null,
  "hiddenLeftButton": false,
  "hiddenRightButton": false,
  "id": null,
  "initialToggle": false,
  "layout": 5,
  "left": null,
  "leftButton": null,
  "location": "none",
  "minHeight": null,
  "minWidth": null,
  "nocollapse": false,
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "notheme": false,
  "notooltip": false,
  "obj": "AccordionItem",
  "onBlur": [Function],
  "onChange": [Function],
  "onClick": [Function],
  "onDoubleClick": [Function],
  "onFocus": [Function],
  "onKeyDown": [Function],
  "onKeyPress": [Function],
  "onMouseOut": [Function],
  "onUpdate": [Function],
  "padding": null,
  "rightButton": null,
  "selected": false,
  "sizing": "normal",
  "stacked": false,
  "style": Object {},
  "testing": true,
  "theme": null,
  "title": "â€‹",
  "tooltip": null,
  "top": null,
  "useedit": false,
  "visible": true,
  "widget": null,
  "width": null,
  "xcss": null,
}
`;

exports[`Test the creation of a AccordionItem control 1`] = `
<Wrapper
  bottom={null}
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  hiddenLeftButton={false}
  hiddenRightButton={false}
  id={null}
  initialToggle={false}
  layout={5}
  left={null}
  leftButton={null}
  location="none"
  minHeight={null}
  minWidth={null}
  nocollapse={false}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="AccordionItem"
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onDoubleClick={[Function]}
  onError={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onUpdate={[Function]}
  padding={null}
  reset={false}
  rightButton={null}
  selected={false}
  sizing="normal"
  stacked={false}
  style={Object {}}
  testing={true}
  theme={null}
  title="Test Title"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget={null}
  width={null}
  xcss={null}
>
  <styled.ul
    className="ui-accordionitem test-class"
    style={Object {}}
  >
    <Item
      bottom={null}
      className="test-class"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      hiddenLeftButton={false}
      hiddenRightButton={false}
      id={null}
      initialToggle={false}
      layout={5}
      left={null}
      leftButton={null}
      location="none"
      minHeight={null}
      minWidth={null}
      nocollapse={false}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      notooltip={false}
      obj="AccordionItem"
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onDoubleClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onMouseOut={[Function]}
      onUpdate={[Function]}
      padding={null}
      rightButton={null}
      selected={false}
      sizing="normal"
      stacked={false}
      style={Object {}}
      testing={true}
      theme={null}
      title="Test Title"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget={null}
      width={null}
      xcss={null}
    />
  </styled.ul>
</Wrapper>
`;

exports[`Test the disabling of the AccordionItem 1`] = `
<Wrapper
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={true}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  hiddenLeftButton={false}
  hiddenRightButton={false}
  id={null}
  initialToggle={false}
  layout={5}
  left={null}
  leftButton={null}
  location="none"
  minHeight={null}
  minWidth={null}
  nocollapse={false}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="AccordionItem"
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onDoubleClick={[Function]}
  onError={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onUpdate={[Function]}
  padding={null}
  reset={false}
  rightButton={null}
  selected={false}
  sizing="normal"
  stacked={false}
  style={Object {}}
  testing={true}
  theme={null}
  title="Test Title"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget={null}
  width={null}
  xcss={null}
>
  <styled.ul
    className="ui-accordionitem"
    style={Object {}}
  >
    <Item
      bottom={null}
      className={null}
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={true}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      hiddenLeftButton={false}
      hiddenRightButton={false}
      id={null}
      initialToggle={false}
      layout={5}
      left={null}
      leftButton={null}
      location="none"
      minHeight={null}
      minWidth={null}
      nocollapse={false}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      notooltip={false}
      obj="AccordionItem"
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onDoubleClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onMouseOut={[Function]}
      onUpdate={[Function]}
      padding={null}
      rightButton={null}
      selected={false}
      sizing="normal"
      stacked={false}
      style={Object {}}
      testing={true}
      theme={null}
      title="Test Title"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget={null}
      width={null}
      xcss={null}
    />
  </styled.ul>
</Wrapper>
`;
