// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test creation of a TextField control 1`] = `
<Wrapper
  bottom={null}
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id=""
  left={null}
  location="none"
  minHeight={null}
  minWidth="1em"
  noborder={false}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="TextField"
  onBlur={[Function]}
  onChange={[Function]}
  onClear={[Function]}
  onError={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onValidation={[Function]}
  padding={null}
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip=""
  top={null}
  type="text"
  useclear={false}
  usevalidation={false}
  validators={Array []}
  visible={true}
  width={null}
  xcss={null}
>
  <styled.div
    className="ui-textfield-container"
    id="TextField-0"
    minWidth=""
  >
    <styled.div
      className="ui-textfield test-class"
      disabled={false}
      noborder={false}
      visible={true}
    >
      <styled.input
        className="test-class"
        disabled={false}
        id=""
        obj="TextField"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        sizing="normal"
        style={Object {}}
        testing={true}
        tooltip=""
        type="text"
        visible={true}
      />
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test disabling of a TextField control 1`] = `
<TextField
  disabled={true}
  id=""
  minWidth="1em"
  noborder={false}
  obj="TextField"
  onBlur={[Function]}
  onChange={[Function]}
  onClear={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onValidation={[Function]}
  sizing="normal"
  style={Object {}}
  testing={true}
  tooltip=""
  type="text"
  useclear={false}
  usevalidation={false}
  validators={Array []}
  visible={true}
>
  <Wrapper
    bottom={null}
    className={null}
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={true}
    err={null}
    errorMessage={null}
    focus={false}
    height={null}
    id=""
    left={null}
    location="none"
    minHeight={null}
    minWidth="1em"
    noborder={false}
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    notooltip={false}
    obj="TextField"
    onBlur={[Function]}
    onChange={[Function]}
    onClear={[Function]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onValidation={[Function]}
    padding={null}
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    tooltip=""
    top={null}
    type="text"
    useclear={false}
    usevalidation={false}
    validators={Array []}
    visible={true}
    width={null}
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "fontFamily": "OpenSans, Georgia, serif",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "searchFocus": "#5cb85c",
          "searchMatch": "#d9534f",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-textfield-container"
        id="TextField-0"
        minWidth=""
      >
        <StyledComponent
          className="ui-textfield-container"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jTzLTM",
                "isStatic": false,
                "lastClassName": "dJoldF",
                "rules": Array [
                  "
	display: inline-flex;
	flex-direction: column;
	min-width: ",
                  [Function],
                  ";
	position: relative;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jTzLTM",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          id="TextField-0"
          minWidth=""
        >
          <div
            className="ui-textfield-container sc-jTzLTM dJoldF"
            id="TextField-0"
          >
            <styled.div
              className="ui-textfield"
              disabled={true}
              noborder={false}
              visible={true}
            >
              <StyledComponent
                className="ui-textfield"
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fjdhpX",
                      "isStatic": false,
                      "lastClassName": "iZXqFH",
                      "rules": Array [
                        "
	border: ",
                        [Function],
                        ";
	display: inherit;
	padding: 1px 0;

	&:hover .ui-textfield-clear-button {
		opacity: ",
                        [Function],
                        ";
	}
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-fjdhpX",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                noborder={false}
                visible={true}
              >
                <div
                  className="ui-textfield sc-fjdhpX iZXqFH"
                  disabled={true}
                >
                  <styled.input
                    disabled={true}
                    id=""
                    obj="TextField"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    tooltip=""
                    type="text"
                    visible={true}
                  >
                    <StyledComponent
                      disabled={true}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-VigVT",
                            "isStatic": false,
                            "lastClassName": "emeWQX",
                            "rules": Array [
                              "
	border: none;
	box-sizing: border-box;
	display: inline-flex;
	font-size: inherit;
	min-height: 0;
	min-width: 0;
	outline: none;
	padding: 1px 5px;
	width: 100%;

	",
                              [Function],
                              "
	",
                              [Function],
                              "
	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.input",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-VigVT",
                          "target": "input",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={[Function]}
                      id=""
                      obj="TextField"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      onKeyPress={[Function]}
                      sizing="normal"
                      style={Object {}}
                      testing={true}
                      tooltip=""
                      type="text"
                      visible={true}
                    >
                      <input
                        className="sc-VigVT emeWQX"
                        disabled={true}
                        id=""
                        onBlur={[Function]}
                        onChange={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        style={Object {}}
                        type="text"
                      />
                    </StyledComponent>
                  </styled.input>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TextField>
`;

exports[`Test retrieval of TextField props object 1`] = `
Object {
  "disabled": false,
  "id": "",
  "minWidth": "1em",
  "noborder": false,
  "obj": "TextField",
  "onBlur": [Function],
  "onChange": [Function],
  "onClear": [Function],
  "onKeyDown": [Function],
  "onKeyPress": [Function],
  "onValidation": [Function],
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "tooltip": "",
  "type": "text",
  "useclear": false,
  "usevalidation": false,
  "validators": Array [],
  "visible": true,
}
`;
