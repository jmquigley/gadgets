// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create text, change and revert with Enter/Escape in TextField 1`] = `
<TextField
  disabled={false}
  id=""
  noborder={false}
  obj="TextField"
  onBlur={[Function]}
  onChange={[MockFunction]}
  onKeyDown={[MockFunction]}
  onKeyPress={[MockFunction]}
  onValidation={[MockFunction]}
  sizing="normal"
  style={Object {}}
  testing={true}
  tooltip=""
  type="text"
  useclear={false}
  usevalidation={false}
  validators={Array []}
  visible={true}
>
  <Wrapper
    disabled={false}
    id=""
    noborder={false}
    obj="TextField"
    onBlur={[Function]}
    onChange={[MockFunction]}
    onError={[Function]}
    onKeyDown={[MockFunction]}
    onKeyPress={[MockFunction]}
    onValidation={[MockFunction]}
    reset={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    tooltip=""
    type="text"
    useclear={false}
    usevalidation={false}
    validators={Array []}
    visible={true}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-textfield-container"
        id="TextField-0"
        style={Object {}}
      >
        <div
          className="ui-textfield-container sc-VigVT hBlZaS"
          id="TextField-0"
          style={Object {}}
        >
          <styled.div
            className="ui-textfield"
            disabled={false}
            noborder={false}
            visible={true}
          >
            <div
              className="ui-textfield sc-jTzLTM kZlAoV"
              disabled={false}
            >
              <styled.input
                disabled={false}
                id=""
                innerRef={[Function]}
                obj="TextField"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                sizing="normal"
                style={Object {}}
                testing={true}
                tooltip=""
                type="text"
                visible={true}
              >
                <input
                  className="sc-gqjmRU hUmRSn"
                  disabled={false}
                  id=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  style={Object {}}
                  type="text"
                />
              </styled.input>
            </div>
          </styled.div>
        </div>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TextField>
`;

exports[`Test creating TextField and saving on blur 1`] = `
<TextField
  disabled={false}
  id=""
  noborder={false}
  obj="TextField"
  onBlur={[MockFunction]}
  onChange={[MockFunction]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onValidation={[MockFunction]}
  sizing="normal"
  style={Object {}}
  testing={true}
  tooltip=""
  type="text"
  useclear={false}
  usevalidation={false}
  validators={Array []}
  visible={true}
>
  <Wrapper
    disabled={false}
    id=""
    noborder={false}
    obj="TextField"
    onBlur={[MockFunction]}
    onChange={[MockFunction]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onValidation={[MockFunction]}
    reset={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    tooltip=""
    type="text"
    useclear={false}
    usevalidation={false}
    validators={Array []}
    visible={true}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-textfield-container"
        id="TextField-0"
        style={Object {}}
      >
        <div
          className="ui-textfield-container sc-VigVT hBlZaS"
          id="TextField-0"
          style={Object {}}
        >
          <styled.div
            className="ui-textfield"
            disabled={false}
            noborder={false}
            visible={true}
          >
            <div
              className="ui-textfield sc-jTzLTM kZlAoV"
              disabled={false}
            >
              <styled.input
                disabled={false}
                id=""
                innerRef={[Function]}
                obj="TextField"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                sizing="normal"
                style={Object {}}
                testing={true}
                tooltip=""
                type="text"
                visible={true}
              >
                <input
                  className="sc-gqjmRU hUmRSn"
                  disabled={false}
                  id=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  style={Object {}}
                  type="text"
                />
              </styled.input>
            </div>
          </styled.div>
        </div>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TextField>
`;

exports[`Test creation of a TextField control 1`] = `
<Wrapper
  className="test-class"
  disabled={false}
  id=""
  noborder={false}
  obj="TextField"
  onBlur={[Function]}
  onChange={[Function]}
  onError={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onValidation={[Function]}
  reset={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  tooltip=""
  type="text"
  useclear={false}
  usevalidation={false}
  validators={Array []}
  visible={true}
>
  <styled.div
    className="ui-textfield-container"
    id="TextField-0"
    style={Object {}}
  >
    <styled.div
      className="ui-textfield test-class"
      disabled={false}
      noborder={false}
      visible={true}
    >
      <styled.input
        className="test-class"
        disabled={false}
        id=""
        innerRef={[Function]}
        obj="TextField"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        sizing="normal"
        style={Object {}}
        testing={true}
        tooltip=""
        type="text"
        visible={true}
      />
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test creation of a TextField with email validation 1`] = `
<TextField
  disabled={false}
  id=""
  noborder={false}
  obj="TextField"
  onBlur={[Function]}
  onChange={[MockFunction]}
  onKeyDown={[Function]}
  onKeyPress={[MockFunction]}
  onValidation={[MockFunction]}
  sizing="normal"
  style={Object {}}
  testing={true}
  tooltip=""
  type="email"
  useclear={false}
  usevalidation={true}
  validators={Array []}
  visible={true}
>
  <Wrapper
    disabled={false}
    id=""
    noborder={false}
    obj="TextField"
    onBlur={[Function]}
    onChange={[MockFunction]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[MockFunction]}
    onValidation={[MockFunction]}
    reset={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    tooltip=""
    type="email"
    useclear={false}
    usevalidation={true}
    validators={Array []}
    visible={true}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-textfield-container"
        id="TextField-0"
        style={Object {}}
      >
        <div
          className="ui-textfield-container sc-VigVT hBlZaS"
          id="TextField-0"
          style={Object {}}
        >
          <styled.div
            className="ui-textfield"
            disabled={false}
            noborder={false}
            visible={true}
          >
            <div
              className="ui-textfield sc-jTzLTM kZlAoV"
              disabled={false}
            >
              <styled.input
                disabled={false}
                id=""
                innerRef={[Function]}
                obj="TextField"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                sizing="normal"
                style={Object {}}
                testing={true}
                tooltip=""
                type="email"
                visible={true}
              >
                <input
                  className="sc-gqjmRU hUmRSn"
                  disabled={false}
                  id=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  style={Object {}}
                  type="email"
                />
              </styled.input>
            </div>
          </styled.div>
          <styled.div
            className="ui-textfield-validation-message"
            disabled={false}
            messageType={0}
            sizing="small"
            visible={true}
          >
            <div
              className="ui-textfield-validation-message sc-gZMcBi eVXyEN"
              disabled={false}
            >
              ​
            </div>
          </styled.div>
        </div>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TextField>
`;

exports[`Test creation of a TextField with url validation 1`] = `
<TextField
  disabled={false}
  id=""
  noborder={false}
  obj="TextField"
  onBlur={[Function]}
  onChange={[MockFunction]}
  onKeyDown={[Function]}
  onKeyPress={[MockFunction]}
  onValidation={[MockFunction]}
  sizing="normal"
  style={Object {}}
  testing={true}
  tooltip=""
  type="url"
  useclear={false}
  usevalidation={true}
  validators={Array []}
  visible={true}
>
  <Wrapper
    disabled={false}
    id=""
    noborder={false}
    obj="TextField"
    onBlur={[Function]}
    onChange={[MockFunction]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[MockFunction]}
    onValidation={[MockFunction]}
    reset={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    tooltip=""
    type="url"
    useclear={false}
    usevalidation={true}
    validators={Array []}
    visible={true}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-textfield-container"
        id="TextField-0"
        style={Object {}}
      >
        <div
          className="ui-textfield-container sc-VigVT hBlZaS"
          id="TextField-0"
          style={Object {}}
        >
          <styled.div
            className="ui-textfield"
            disabled={false}
            noborder={false}
            visible={true}
          >
            <div
              className="ui-textfield sc-jTzLTM kZlAoV"
              disabled={false}
            >
              <styled.input
                disabled={false}
                id=""
                innerRef={[Function]}
                obj="TextField"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                sizing="normal"
                style={Object {}}
                testing={true}
                tooltip=""
                type="url"
                visible={true}
              >
                <input
                  className="sc-gqjmRU hUmRSn"
                  disabled={false}
                  id=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  style={Object {}}
                  type="url"
                />
              </styled.input>
            </div>
          </styled.div>
          <styled.div
            className="ui-textfield-validation-message"
            disabled={false}
            messageType={0}
            sizing="small"
            visible={true}
          >
            <div
              className="ui-textfield-validation-message sc-gZMcBi eVXyEN"
              disabled={false}
            >
              ​
            </div>
          </styled.div>
        </div>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TextField>
`;

exports[`Test creation of a textfield with min/max validation 1`] = `
<TextField
  disabled={false}
  id=""
  maxLength="10"
  minLength="5"
  noborder={false}
  obj="TextField"
  onBlur={[Function]}
  onChange={[MockFunction]}
  onKeyDown={[Function]}
  onKeyPress={[MockFunction]}
  onValidation={[MockFunction]}
  sizing="normal"
  style={Object {}}
  testing={true}
  tooltip=""
  type="text"
  useclear={false}
  usevalidation={true}
  validators={Array []}
  value=""
  visible={true}
>
  <Wrapper
    disabled={false}
    id=""
    maxLength="10"
    minLength="5"
    noborder={false}
    obj="TextField"
    onBlur={[Function]}
    onChange={[MockFunction]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[MockFunction]}
    onValidation={[MockFunction]}
    reset={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    tooltip=""
    type="text"
    useclear={false}
    usevalidation={true}
    validators={Array []}
    value=""
    visible={true}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-textfield-container"
        id="TextField-0"
        style={Object {}}
      >
        <div
          className="ui-textfield-container sc-VigVT hBlZaS"
          id="TextField-0"
          style={Object {}}
        >
          <styled.div
            className="ui-textfield"
            disabled={false}
            noborder={false}
            visible={true}
          >
            <div
              className="ui-textfield sc-jTzLTM kZlAoV"
              disabled={false}
            >
              <styled.input
                disabled={false}
                id=""
                innerRef={[Function]}
                maxLength="10"
                minLength="5"
                obj="TextField"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                sizing="normal"
                style={Object {}}
                testing={true}
                tooltip=""
                type="text"
                value=""
                visible={true}
              >
                <input
                  className="sc-gqjmRU hUmRSn"
                  disabled={false}
                  id=""
                  maxLength="10"
                  minLength="5"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  style={Object {}}
                  type="text"
                  value=""
                />
              </styled.input>
            </div>
          </styled.div>
          <styled.div
            className="ui-textfield-validation-message"
            disabled={false}
            messageType={0}
            sizing="small"
            visible={true}
          >
            <div
              className="ui-textfield-validation-message sc-gZMcBi eVXyEN"
              disabled={false}
            >
              ​
            </div>
          </styled.div>
        </div>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TextField>
`;

exports[`Test disabling of a TextField control 1`] = `
<TextField
  disabled={true}
  id=""
  noborder={false}
  obj="TextField"
  onBlur={[Function]}
  onChange={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onValidation={[Function]}
  sizing="normal"
  style={Object {}}
  testing={true}
  tooltip=""
  type="text"
  useclear={false}
  usevalidation={false}
  validators={Array []}
  visible={true}
>
  <Wrapper
    disabled={true}
    id=""
    noborder={false}
    obj="TextField"
    onBlur={[Function]}
    onChange={[Function]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onValidation={[Function]}
    reset={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    tooltip=""
    type="text"
    useclear={false}
    usevalidation={false}
    validators={Array []}
    visible={true}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-textfield-container"
        id="TextField-0"
        style={Object {}}
      >
        <div
          className="ui-textfield-container sc-VigVT hBlZaS"
          id="TextField-0"
          style={Object {}}
        >
          <styled.div
            className="ui-textfield"
            disabled={true}
            noborder={false}
            visible={true}
          >
            <div
              className="ui-textfield sc-jTzLTM irVspP"
              disabled={true}
            >
              <styled.input
                disabled={true}
                id=""
                innerRef={[Function]}
                obj="TextField"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                sizing="normal"
                style={Object {}}
                testing={true}
                tooltip=""
                type="text"
                visible={true}
              >
                <input
                  className="sc-gqjmRU gRzpSQ"
                  disabled={true}
                  id=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  style={Object {}}
                  type="text"
                />
              </styled.input>
            </div>
          </styled.div>
        </div>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TextField>
`;

exports[`Test making the TextField invisible 1`] = `
<TextField
  disabled={false}
  id=""
  noborder={false}
  obj="TextField"
  onBlur={[Function]}
  onChange={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onValidation={[Function]}
  sizing="normal"
  style={Object {}}
  testing={true}
  tooltip=""
  type="text"
  useclear={false}
  usevalidation={false}
  validators={Array []}
  visible={false}
>
  <Wrapper
    disabled={false}
    id=""
    noborder={false}
    obj="TextField"
    onBlur={[Function]}
    onChange={[Function]}
    onError={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onValidation={[Function]}
    reset={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    tooltip=""
    type="text"
    useclear={false}
    usevalidation={false}
    validators={Array []}
    visible={false}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-textfield-container"
        id="TextField-0"
        style={Object {}}
      >
        <div
          className="ui-textfield-container sc-VigVT hBlZaS"
          id="TextField-0"
          style={Object {}}
        >
          <styled.div
            className="ui-textfield"
            disabled={false}
            noborder={false}
            visible={false}
          >
            <div
              className="ui-textfield sc-jTzLTM kZlAoV"
              disabled={false}
            >
              <styled.input
                disabled={false}
                id=""
                innerRef={[Function]}
                obj="TextField"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                sizing="normal"
                style={Object {}}
                testing={true}
                tooltip=""
                type="text"
                visible={false}
              >
                <input
                  className="sc-gqjmRU iipHzV"
                  disabled={false}
                  id=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  style={Object {}}
                  type="text"
                />
              </styled.input>
            </div>
          </styled.div>
        </div>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</TextField>
`;

exports[`Test retrieval of TextField props object 1`] = `
Object {
  "disabled": false,
  "id": "",
  "noborder": false,
  "obj": "TextField",
  "onBlur": [Function],
  "onChange": [Function],
  "onKeyDown": [Function],
  "onKeyPress": [Function],
  "onValidation": [Function],
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "tooltip": "",
  "type": "text",
  "useclear": false,
  "usevalidation": false,
  "validators": Array [],
  "visible": true,
}
`;
