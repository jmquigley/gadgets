// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test creation of a Title control with bad layout 1`] = `
<Title
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={9999}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onUpdate={[Function]}
  padding={null}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget={null}
  width={null}
  xcss={null}
>
  <Wrapper
    bottom={null}
    className={null}
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage={null}
    focus={false}
    height={null}
    id={null}
    layout={9999}
    left={null}
    location="none"
    minHeight={null}
    minWidth={null}
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Title"
    onClick={[Function]}
    onError={[Function]}
    onUpdate={[Function]}
    padding={null}
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    title="Test label text"
    tooltip={null}
    top={null}
    useedit={false}
    visible={true}
    widget={null}
    width={null}
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "fontFamily": "OpenSans, Georgia, serif",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-title-bar ripple"
        disabled={false}
        layout={9999}
        sizing="normal"
        style={Object {}}
        visible={true}
      >
        <StyledComponent
          className="ui-title-bar ripple"
          disabled={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "kRNhtA",
                "rules": Array [
                  "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                  [Function],
                  ";
	flex-grow: 1;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          layout={9999}
          sizing="normal"
          style={Object {}}
          visible={true}
        >
          <div
            className="ui-title-bar ripple sc-htpNat kRNhtA"
            disabled={false}
            style={Object {}}
          >
            <Styled(Label)
              bottom={null}
              className="ui-title"
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage={null}
              focus={false}
              height={null}
              id={null}
              layout={9999}
              left={null}
              location="none"
              minHeight={null}
              minWidth={null}
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Title"
              onClick={[Function]}
              padding={null}
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              text="Test label text"
              theme={null}
              title="Test label text"
              tooltip={null}
              top={null}
              useedit={false}
              visible={true}
              widget={null}
              width={null}
              xcss={
                Array [
                  "
	text-align: left;
	flex: 1;
",
                ]
              }
            >
              <StyledComponent
                bottom={null}
                className="ui-title"
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage={null}
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-ifAKCX",
                      "isStatic": false,
                      "lastClassName": "yXbqB",
                      "rules": Array [
                        "
	",
                        "
	padding: ",
                        [Function],
                        ";

	",
                        [Function],
                        "
",
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Label)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-ifAKCX",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                height={null}
                id={null}
                layout={9999}
                left={null}
                location="none"
                minHeight={null}
                minWidth={null}
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Title"
                onClick={[Function]}
                padding={null}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                text="Test label text"
                theme={null}
                title="Test label text"
                tooltip={null}
                top={null}
                useedit={false}
                visible={true}
                widget={null}
                width={null}
                xcss={
                  Array [
                    "
	text-align: left;
	flex: 1;
",
                  ]
                }
              >
                <Label
                  bottom={null}
                  className="ui-title sc-ifAKCX yXbqB"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage={null}
                  focus={false}
                  height={null}
                  id={null}
                  layout={9999}
                  left={null}
                  location="none"
                  minHeight={null}
                  minWidth={null}
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onUpdate={[Function]}
                  padding={null}
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  text="Test label text"
                  theme={null}
                  title="Test label text"
                  tooltip={null}
                  top={null}
                  useedit={false}
                  visible={true}
                  widget={null}
                  width={null}
                  xcss={
                    Array [
                      "
	text-align: left;
	flex: 1;
",
                    ]
                  }
                >
                  <Wrapper
                    bottom={null}
                    className="ui-title sc-ifAKCX yXbqB"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage={null}
                    focus={false}
                    height={null}
                    id={null}
                    layout={9999}
                    left={null}
                    location="none"
                    minHeight={null}
                    minWidth={null}
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Title"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                    onError={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onUpdate={[Function]}
                    padding={null}
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    text="Test label text"
                    theme={null}
                    title="Test label text"
                    tooltip={null}
                    top={null}
                    useedit={false}
                    visible={true}
                    widget={null}
                    width={null}
                    xcss={
                      Array [
                        "
	text-align: left;
	flex: 1;
",
                      ]
                    }
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "fontFamily": "OpenSans, Georgia, serif",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.span
                        className="ui-label ui-title sc-ifAKCX yXbqB"
                        contentEditable={false}
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDoubleClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        sizing="normal"
                        style={Object {}}
                        suppressContentEditableWarning={true}
                        visible={true}
                      >
                        <StyledComponent
                          className="ui-label ui-title sc-ifAKCX yXbqB"
                          contentEditable={false}
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "cEurMc",
                                "rules": Array [
                                  "
	background-color: inherit;

	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={[Function]}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDoubleClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          sizing="normal"
                          style={Object {}}
                          suppressContentEditableWarning={true}
                          visible={true}
                        >
                          <span
                            className="ui-label ui-title sc-ifAKCX yXbqB sc-bwzfXH cEurMc"
                            contentEditable={false}
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDoubleClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            style={Object {}}
                            suppressContentEditableWarning={true}
                          >
                            Test label text
                          </span>
                        </StyledComponent>
                      </styled.span>
                    </ThemeProvider>
                  </Wrapper>
                </Label>
              </StyledComponent>
            </Styled(Label)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Title>
`;

exports[`Test creation of a Title control with bad layout 2`] = `
<Title
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={9999}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onUpdate={[Function]}
  padding={null}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget={null}
  width={null}
  xcss={null}
>
  <Wrapper
    bottom={null}
    className={null}
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage={null}
    focus={false}
    height={null}
    id={null}
    layout={9999}
    left={null}
    location="none"
    minHeight={null}
    minWidth={null}
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Title"
    onClick={[Function]}
    onError={[Function]}
    onUpdate={[Function]}
    padding={null}
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    title="Test label text"
    tooltip={null}
    top={null}
    useedit={false}
    visible={true}
    widget={null}
    width={null}
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "fontFamily": "OpenSans, Georgia, serif",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-title-bar ripple"
        disabled={false}
        layout={9999}
        sizing="normal"
        style={Object {}}
        visible={true}
      >
        <StyledComponent
          className="ui-title-bar ripple"
          disabled={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "kRNhtA",
                "rules": Array [
                  "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                  [Function],
                  ";
	flex-grow: 1;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          layout={9999}
          sizing="normal"
          style={Object {}}
          visible={true}
        >
          <div
            className="ui-title-bar ripple sc-htpNat kRNhtA"
            disabled={false}
            style={Object {}}
          >
            <Styled(Label)
              bottom={null}
              className="ui-title"
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage={null}
              focus={false}
              height={null}
              id={null}
              layout={9999}
              left={null}
              location="none"
              minHeight={null}
              minWidth={null}
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Title"
              onClick={[Function]}
              padding={null}
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              text="Test label text"
              theme={null}
              title="Test label text"
              tooltip={null}
              top={null}
              useedit={false}
              visible={true}
              widget={null}
              width={null}
              xcss={
                Array [
                  "
	text-align: left;
	flex: 1;
",
                ]
              }
            >
              <StyledComponent
                bottom={null}
                className="ui-title"
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage={null}
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-ifAKCX",
                      "isStatic": false,
                      "lastClassName": "yXbqB",
                      "rules": Array [
                        "
	",
                        "
	padding: ",
                        [Function],
                        ";

	",
                        [Function],
                        "
",
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Label)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-ifAKCX",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                height={null}
                id={null}
                layout={9999}
                left={null}
                location="none"
                minHeight={null}
                minWidth={null}
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Title"
                onClick={[Function]}
                padding={null}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                text="Test label text"
                theme={null}
                title="Test label text"
                tooltip={null}
                top={null}
                useedit={false}
                visible={true}
                widget={null}
                width={null}
                xcss={
                  Array [
                    "
	text-align: left;
	flex: 1;
",
                  ]
                }
              >
                <Label
                  bottom={null}
                  className="ui-title sc-ifAKCX yXbqB"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage={null}
                  focus={false}
                  height={null}
                  id={null}
                  layout={9999}
                  left={null}
                  location="none"
                  minHeight={null}
                  minWidth={null}
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onUpdate={[Function]}
                  padding={null}
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  text="Test label text"
                  theme={null}
                  title="Test label text"
                  tooltip={null}
                  top={null}
                  useedit={false}
                  visible={true}
                  widget={null}
                  width={null}
                  xcss={
                    Array [
                      "
	text-align: left;
	flex: 1;
",
                    ]
                  }
                >
                  <Wrapper
                    bottom={null}
                    className="ui-title sc-ifAKCX yXbqB"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage={null}
                    focus={false}
                    height={null}
                    id={null}
                    layout={9999}
                    left={null}
                    location="none"
                    minHeight={null}
                    minWidth={null}
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Title"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                    onError={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onUpdate={[Function]}
                    padding={null}
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    text="Test label text"
                    theme={null}
                    title="Test label text"
                    tooltip={null}
                    top={null}
                    useedit={false}
                    visible={true}
                    widget={null}
                    width={null}
                    xcss={
                      Array [
                        "
	text-align: left;
	flex: 1;
",
                      ]
                    }
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "fontFamily": "OpenSans, Georgia, serif",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.span
                        className="ui-label ui-title sc-ifAKCX yXbqB"
                        contentEditable={false}
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDoubleClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        sizing="normal"
                        style={Object {}}
                        suppressContentEditableWarning={true}
                        visible={true}
                      >
                        <StyledComponent
                          className="ui-label ui-title sc-ifAKCX yXbqB"
                          contentEditable={false}
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "cEurMc",
                                "rules": Array [
                                  "
	background-color: inherit;

	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={[Function]}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDoubleClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          sizing="normal"
                          style={Object {}}
                          suppressContentEditableWarning={true}
                          visible={true}
                        >
                          <span
                            className="ui-label ui-title sc-ifAKCX yXbqB sc-bwzfXH cEurMc"
                            contentEditable={false}
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDoubleClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            style={Object {}}
                            suppressContentEditableWarning={true}
                          >
                            Test label text
                          </span>
                        </StyledComponent>
                      </styled.span>
                    </ThemeProvider>
                  </Wrapper>
                </Label>
              </StyledComponent>
            </Styled(Label)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Title>
`;

exports[`Test creation of a Title control with default props 1`] = `
<Wrapper
  bottom={null}
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={5}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onError={[Function]}
  onUpdate={[Function]}
  padding={null}
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget={null}
  width={null}
  xcss={null}
>
  <styled.div
    className="ui-title-bar ripple test-class"
    disabled={false}
    layout={5}
    sizing="normal"
    style={Object {}}
    visible={true}
  >
    <Styled(Label)
      bottom={null}
      className="ui-title"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={5}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      text="Test label text"
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget={null}
      width={null}
      xcss={
        Array [
          "
	text-align: left;
	flex: 5;
",
        ]
      }
    />
  </styled.div>
</Wrapper>
`;

exports[`Test creation of a Title control with even layout 1`] = `
<Wrapper
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={1}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onError={[Function]}
  onUpdate={[Function]}
  padding={null}
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget="widget"
  width={null}
  xcss={null}
>
  <styled.div
    className="ui-title-bar ripple"
    disabled={false}
    layout={1}
    sizing="normal"
    style={Object {}}
    visible={true}
  >
    <Styled(Label)
      bottom={null}
      className="ui-title"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={1}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      text="Test label text"
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget="widget"
      width={null}
      xcss={
        Array [
          "
	text-align: left;
	flex: 1;
",
        ]
      }
    />
    <styled.div
      bottom={null}
      className="ui-title-widget"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={1}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget="widget"
      width={null}
      xcss={
        Array [
          "
	text-align: right;
	flex: 1;
",
        ]
      }
    >
      widget
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test creation of a Title control with no layout 1`] = `
<Wrapper
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={6}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onError={[Function]}
  onUpdate={[Function]}
  padding={null}
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget={null}
  width={null}
  xcss={null}
>
  <styled.div
    className="ui-title-bar ripple"
    disabled={false}
    layout={6}
    sizing="normal"
    style={Object {}}
    visible={true}
  >
    <Styled(Label)
      bottom={null}
      className="ui-title"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={6}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      text="Test label text"
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget={null}
      width={null}
      xcss={
        Array [
          "
	text-align: left;
	flex: 1;
",
        ]
      }
    />
  </styled.div>
</Wrapper>
`;

exports[`Test creation of a Title control with quarter layout 1`] = `
<Wrapper
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={0}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onError={[Function]}
  onUpdate={[Function]}
  padding={null}
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget="widget"
  width={null}
  xcss={null}
>
  <styled.div
    className="ui-title-bar ripple"
    disabled={false}
    layout={0}
    sizing="normal"
    style={Object {}}
    visible={true}
  >
    <Styled(Label)
      bottom={null}
      className="ui-title"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={0}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      text="Test label text"
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget="widget"
      width={null}
      xcss={
        Array [
          "
	text-align: left;
	flex: 1;
",
        ]
      }
    />
    <styled.div
      bottom={null}
      className="ui-title-widget"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={0}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget="widget"
      width={null}
      xcss={
        Array [
          "
	text-align: right;
	flex: 3;
",
        ]
      }
    >
      widget
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test creation of a Title control with stacked layout 1`] = `
<Wrapper
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={4}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onError={[Function]}
  onUpdate={[Function]}
  padding={null}
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget="widget"
  width={null}
  xcss={null}
>
  <styled.div
    className="ui-title-bar ripple"
    disabled={false}
    layout={4}
    sizing="normal"
    style={Object {}}
    visible={true}
  >
    <Styled(Label)
      bottom={null}
      className="ui-title"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={4}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      text="Test label text"
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget="widget"
      width={null}
      xcss={
        Array [
          "
	display: block;
",
        ]
      }
    />
    <styled.div
      bottom={null}
      className="ui-title-widget"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={4}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget="widget"
      width={null}
      xcss={
        Array [
          "
	display: block;
",
        ]
      }
    >
      widget
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test creation of a Title control with thirds layout 1`] = `
<Wrapper
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={3}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onError={[Function]}
  onUpdate={[Function]}
  padding={null}
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget="widget"
  width={null}
  xcss={null}
>
  <styled.div
    className="ui-title-bar ripple"
    disabled={false}
    layout={3}
    sizing="normal"
    style={Object {}}
    visible={true}
  >
    <Styled(Label)
      bottom={null}
      className="ui-title"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={3}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      text="Test label text"
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget="widget"
      width={null}
      xcss={
        Array [
          "
	text-align: left;
	flex: 1;
",
        ]
      }
    />
    <styled.div
      bottom={null}
      className="ui-title-widget"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={3}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget="widget"
      width={null}
      xcss={
        Array [
          "
	text-align: right;
	flex: 2;
",
        ]
      }
    >
      widget
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test creation of a Title control with threequarter layout 1`] = `
<Wrapper
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={2}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onError={[Function]}
  onUpdate={[Function]}
  padding={null}
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget="widget"
  width={null}
  xcss={null}
>
  <styled.div
    className="ui-title-bar ripple"
    disabled={false}
    layout={2}
    sizing="normal"
    style={Object {}}
    visible={true}
  >
    <Styled(Label)
      bottom={null}
      className="ui-title"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={2}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      text="Test label text"
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget="widget"
      width={null}
      xcss={
        Array [
          "
	text-align: left;
	flex: 3;
",
        ]
      }
    />
    <styled.div
      bottom={null}
      className="ui-title-widget"
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage={null}
      focus={false}
      height={null}
      id={null}
      layout={2}
      left={null}
      location="none"
      minHeight={null}
      minWidth={null}
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Title"
      onClick={[Function]}
      padding={null}
      selected={false}
      sizing="normal"
      style={Object {}}
      testing={true}
      theme={null}
      title="Test label text"
      tooltip={null}
      top={null}
      useedit={false}
      visible={true}
      widget="widget"
      width={null}
      xcss={
        Array [
          "
	text-align: right;
	flex: 1;
",
        ]
      }
    >
      widget
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test disabling the Title control 1`] = `
<Title
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={true}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={5}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onUpdate={[Function]}
  padding={null}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={true}
  widget={null}
  width={null}
  xcss={null}
>
  <Wrapper
    bottom={null}
    className={null}
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={true}
    err={null}
    errorMessage={null}
    focus={false}
    height={null}
    id={null}
    layout={5}
    left={null}
    location="none"
    minHeight={null}
    minWidth={null}
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Title"
    onClick={[Function]}
    onError={[Function]}
    onUpdate={[Function]}
    padding={null}
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    title="Test label text"
    tooltip={null}
    top={null}
    useedit={false}
    visible={true}
    widget={null}
    width={null}
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "fontFamily": "OpenSans, Georgia, serif",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-title-bar"
        disabled={true}
        layout={5}
        sizing="normal"
        style={Object {}}
        visible={true}
      >
        <StyledComponent
          className="ui-title-bar"
          disabled={true}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "iDbwhS",
                "rules": Array [
                  "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                  [Function],
                  ";
	flex-grow: 1;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          layout={5}
          sizing="normal"
          style={Object {}}
          visible={true}
        >
          <div
            className="ui-title-bar sc-htpNat iDbwhS"
            disabled={true}
            style={Object {}}
          >
            <Styled(Label)
              bottom={null}
              className="ui-title"
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={true}
              err={null}
              errorMessage={null}
              focus={false}
              height={null}
              id={null}
              layout={5}
              left={null}
              location="none"
              minHeight={null}
              minWidth={null}
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Title"
              onClick={[Function]}
              padding={null}
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              text="Test label text"
              theme={null}
              title="Test label text"
              tooltip={null}
              top={null}
              useedit={false}
              visible={true}
              widget={null}
              width={null}
              xcss={
                Array [
                  "
	text-align: left;
	flex: 5;
",
                ]
              }
            >
              <StyledComponent
                bottom={null}
                className="ui-title"
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={true}
                err={null}
                errorMessage={null}
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-ifAKCX",
                      "isStatic": false,
                      "lastClassName": "iVrkrp",
                      "rules": Array [
                        "
	",
                        "
	padding: ",
                        [Function],
                        ";

	",
                        [Function],
                        "
",
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Label)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-ifAKCX",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                height={null}
                id={null}
                layout={5}
                left={null}
                location="none"
                minHeight={null}
                minWidth={null}
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Title"
                onClick={[Function]}
                padding={null}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                text="Test label text"
                theme={null}
                title="Test label text"
                tooltip={null}
                top={null}
                useedit={false}
                visible={true}
                widget={null}
                width={null}
                xcss={
                  Array [
                    "
	text-align: left;
	flex: 5;
",
                  ]
                }
              >
                <Label
                  bottom={null}
                  className="ui-title sc-ifAKCX iVrkrp"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={true}
                  err={null}
                  errorMessage={null}
                  focus={false}
                  height={null}
                  id={null}
                  layout={5}
                  left={null}
                  location="none"
                  minHeight={null}
                  minWidth={null}
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onUpdate={[Function]}
                  padding={null}
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  text="Test label text"
                  theme={null}
                  title="Test label text"
                  tooltip={null}
                  top={null}
                  useedit={false}
                  visible={true}
                  widget={null}
                  width={null}
                  xcss={
                    Array [
                      "
	text-align: left;
	flex: 5;
",
                    ]
                  }
                >
                  <Wrapper
                    bottom={null}
                    className="ui-title sc-ifAKCX iVrkrp"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={true}
                    err={null}
                    errorMessage={null}
                    focus={false}
                    height={null}
                    id={null}
                    layout={5}
                    left={null}
                    location="none"
                    minHeight={null}
                    minWidth={null}
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Title"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                    onError={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onUpdate={[Function]}
                    padding={null}
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    text="Test label text"
                    theme={null}
                    title="Test label text"
                    tooltip={null}
                    top={null}
                    useedit={false}
                    visible={true}
                    widget={null}
                    width={null}
                    xcss={
                      Array [
                        "
	text-align: left;
	flex: 5;
",
                      ]
                    }
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "fontFamily": "OpenSans, Georgia, serif",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.span
                        className="ui-label ui-title sc-ifAKCX iVrkrp"
                        contentEditable={false}
                        disabled={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDoubleClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        sizing="normal"
                        style={Object {}}
                        suppressContentEditableWarning={true}
                        visible={true}
                      >
                        <StyledComponent
                          className="ui-label ui-title sc-ifAKCX iVrkrp"
                          contentEditable={false}
                          disabled={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "gfZwc",
                                "rules": Array [
                                  "
	background-color: inherit;

	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={[Function]}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDoubleClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          sizing="normal"
                          style={Object {}}
                          suppressContentEditableWarning={true}
                          visible={true}
                        >
                          <span
                            className="ui-label ui-title sc-ifAKCX iVrkrp sc-bwzfXH gfZwc"
                            contentEditable={false}
                            disabled={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDoubleClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            style={Object {}}
                            suppressContentEditableWarning={true}
                          >
                            Test label text
                          </span>
                        </StyledComponent>
                      </styled.span>
                    </ThemeProvider>
                  </Wrapper>
                </Label>
              </StyledComponent>
            </Styled(Label)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Title>
`;

exports[`Test making the Title control invisible 1`] = `
<Title
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  layout={5}
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Title"
  onClick={[Function]}
  onUpdate={[Function]}
  padding={null}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="Test label text"
  tooltip={null}
  top={null}
  useedit={false}
  visible={false}
  widget={null}
  width={null}
  xcss={null}
>
  <Wrapper
    bottom={null}
    className={null}
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage={null}
    focus={false}
    height={null}
    id={null}
    layout={5}
    left={null}
    location="none"
    minHeight={null}
    minWidth={null}
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Title"
    onClick={[Function]}
    onError={[Function]}
    onUpdate={[Function]}
    padding={null}
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    title="Test label text"
    tooltip={null}
    top={null}
    useedit={false}
    visible={false}
    widget={null}
    width={null}
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "fontFamily": "OpenSans, Georgia, serif",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-title-bar ripple"
        disabled={false}
        layout={5}
        sizing="normal"
        style={Object {}}
        visible={false}
      >
        <StyledComponent
          className="ui-title-bar ripple"
          disabled={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "hKwGDY",
                "rules": Array [
                  "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                  [Function],
                  ";
	flex-grow: 1;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          layout={5}
          sizing="normal"
          style={Object {}}
          visible={false}
        >
          <div
            className="ui-title-bar ripple sc-htpNat hKwGDY"
            disabled={false}
            style={Object {}}
          >
            <Styled(Label)
              bottom={null}
              className="ui-title"
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage={null}
              focus={false}
              height={null}
              id={null}
              layout={5}
              left={null}
              location="none"
              minHeight={null}
              minWidth={null}
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Title"
              onClick={[Function]}
              padding={null}
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              text="Test label text"
              theme={null}
              title="Test label text"
              tooltip={null}
              top={null}
              useedit={false}
              visible={false}
              widget={null}
              width={null}
              xcss={
                Array [
                  "
	text-align: left;
	flex: 5;
",
                ]
              }
            >
              <StyledComponent
                bottom={null}
                className="ui-title"
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage={null}
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-ifAKCX",
                      "isStatic": false,
                      "lastClassName": "iVrkrp",
                      "rules": Array [
                        "
	",
                        "
	padding: ",
                        [Function],
                        ";

	",
                        [Function],
                        "
",
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Label)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-ifAKCX",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                height={null}
                id={null}
                layout={5}
                left={null}
                location="none"
                minHeight={null}
                minWidth={null}
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Title"
                onClick={[Function]}
                padding={null}
                selected={false}
                sizing="normal"
                style={Object {}}
                testing={true}
                text="Test label text"
                theme={null}
                title="Test label text"
                tooltip={null}
                top={null}
                useedit={false}
                visible={false}
                widget={null}
                width={null}
                xcss={
                  Array [
                    "
	text-align: left;
	flex: 5;
",
                  ]
                }
              >
                <Label
                  bottom={null}
                  className="ui-title sc-ifAKCX iVrkrp"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage={null}
                  focus={false}
                  height={null}
                  id={null}
                  layout={5}
                  left={null}
                  location="none"
                  minHeight={null}
                  minWidth={null}
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onDoubleClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyPress={[Function]}
                  onUpdate={[Function]}
                  padding={null}
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  text="Test label text"
                  theme={null}
                  title="Test label text"
                  tooltip={null}
                  top={null}
                  useedit={false}
                  visible={false}
                  widget={null}
                  width={null}
                  xcss={
                    Array [
                      "
	text-align: left;
	flex: 5;
",
                    ]
                  }
                >
                  <Wrapper
                    bottom={null}
                    className="ui-title sc-ifAKCX iVrkrp"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage={null}
                    focus={false}
                    height={null}
                    id={null}
                    layout={5}
                    left={null}
                    location="none"
                    minHeight={null}
                    minWidth={null}
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Title"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onDoubleClick={[Function]}
                    onError={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onUpdate={[Function]}
                    padding={null}
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    text="Test label text"
                    theme={null}
                    title="Test label text"
                    tooltip={null}
                    top={null}
                    useedit={false}
                    visible={false}
                    widget={null}
                    width={null}
                    xcss={
                      Array [
                        "
	text-align: left;
	flex: 5;
",
                      ]
                    }
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "fontFamily": "OpenSans, Georgia, serif",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.span
                        className="ui-label ui-title sc-ifAKCX iVrkrp"
                        contentEditable={false}
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDoubleClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        sizing="normal"
                        style={Object {}}
                        suppressContentEditableWarning={true}
                        visible={false}
                      >
                        <StyledComponent
                          className="ui-label ui-title sc-ifAKCX iVrkrp"
                          contentEditable={false}
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "feyPXN",
                                "rules": Array [
                                  "
	background-color: inherit;

	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={[Function]}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDoubleClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          sizing="normal"
                          style={Object {}}
                          suppressContentEditableWarning={true}
                          visible={false}
                        >
                          <span
                            className="ui-label ui-title sc-ifAKCX iVrkrp sc-bwzfXH feyPXN"
                            contentEditable={false}
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDoubleClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            style={Object {}}
                            suppressContentEditableWarning={true}
                          >
                            Test label text
                          </span>
                        </StyledComponent>
                      </styled.span>
                    </ThemeProvider>
                  </Wrapper>
                </Label>
              </StyledComponent>
            </Styled(Label)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Title>
`;

exports[`Test retrieval of Title props object 1`] = `
Object {
  "bottom": null,
  "children": null,
  "className": null,
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": null,
  "focus": false,
  "height": null,
  "id": null,
  "layout": 5,
  "left": null,
  "location": "none",
  "minHeight": null,
  "minWidth": null,
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "notheme": false,
  "obj": "Title",
  "onClick": [Function],
  "onUpdate": [Function],
  "padding": null,
  "selected": false,
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "theme": null,
  "tooltip": null,
  "top": null,
  "useedit": false,
  "visible": true,
  "widget": null,
  "width": null,
  "xcss": null,
}
`;
