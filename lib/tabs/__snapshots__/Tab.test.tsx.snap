// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test disabling of a Tab 1`] = `
<Tab
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={true}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  href={
    Object {
      "selectHandler": [MockFunction],
    }
  }
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Tab"
  onClick={[Function]}
  onClose={[Function]}
  orientation="top"
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="tab title"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={true}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    href={
      Object {
        "selectHandler": [MockFunction],
      }
    }
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Tab"
    onClick={[Function]}
    onClose={[Function]}
    onError={[Function]}
    orientation="top"
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    title="tab title"
    tooltip=""
    top=""
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-tab"
        disabled={true}
        selected={false}
        sizing="normal"
        style={
          Object {
            "minWidth": "120px",
            "width": "",
          }
        }
        visible={true}
        xcss={
          Array [
            "
	border-right: solid 1px ",
            [Function],
            ";
	border-top: solid 1px ",
            [Function],
            ";

	&:first-child {
		border-left: solid 1px ",
            [Function],
            ";
	}
",
          ]
        }
      >
        <StyledComponent
          className="ui-tab"
          disabled={true}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jTzLTM",
                "isStatic": false,
                "lastClassName": "bEDcAd",
                "rules": Array [
                  "
	cursor: default;
	display: inline-block;
	flex-grow: unset;

	",
                  [Function],
                  "

	&:hover .ui-button {
		color: ",
                  [Function],
                  ";
		background-color: ",
                  [Function],
                  ";
		display: flex;
		opacity: 1.0;
	}

	.ui-label {
		padding-left: 4px;
	}

	.ui-button:hover {
		background-color: ",
                  "#d9534f",
                  " !important;
	}

	.ui-button {
		display: none;
		opacity: 0;
		animation: fadeIn ",
                  [Function],
                  ";
	}

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jTzLTM",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          selected={false}
          sizing="normal"
          style={
            Object {
              "minWidth": "120px",
              "width": "",
            }
          }
          visible={true}
          xcss={
            Array [
              "
	border-right: solid 1px ",
              [Function],
              ";
	border-top: solid 1px ",
              [Function],
              ";

	&:first-child {
		border-left: solid 1px ",
              [Function],
              ";
	}
",
            ]
          }
        >
          <div
            className="ui-tab sc-jTzLTM bEDcAd"
            disabled={true}
            selected={false}
            style={
              Object {
                "minWidth": "120px",
                "width": "",
              }
            }
          >
            <Item
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={true}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              hiddenLeftButton={false}
              hiddenRightButton={true}
              href={
                Object {
                  "selectHandler": [MockFunction],
                }
              }
              id=""
              layout={5}
              left=""
              leftButton={null}
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tab"
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onClose={[Function]}
              onDoubleClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseOut={[Function]}
              onUpdate={[Function]}
              orientation="top"
              padding=""
              rightButton={
                <Button
                  bottom=""
                  className=""
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={true}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  href={
                    Object {
                      "selectHandler": [MockFunction],
                    }
                  }
                  iconName="times"
                  iconStyle=""
                  id=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Tab"
                  onClick={[Function]}
                  onClose={[Function]}
                  orientation="top"
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  title="tab title"
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  Test content
                </Button>
              }
              selected={false}
              sizing="normal"
              stacked={false}
              style={Object {}}
              testing={true}
              theme={null}
              title="tab title"
              tooltip=""
              top=""
              useedit={false}
              visible={true}
              widget={null}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={true}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                hiddenLeftButton={false}
                hiddenRightButton={true}
                href={
                  Object {
                    "selectHandler": [MockFunction],
                  }
                }
                id=""
                layout={5}
                left=""
                leftButton={null}
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tab"
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onClose={[Function]}
                onDoubleClick={[Function]}
                onError={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                onMouseOut={[Function]}
                onUpdate={[Function]}
                orientation="top"
                padding=""
                reset={false}
                rightButton={
                  <Button
                    bottom=""
                    className=""
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={true}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    href={
                      Object {
                        "selectHandler": [MockFunction],
                      }
                    }
                    iconName="times"
                    iconStyle=""
                    id=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Tab"
                    onClick={[Function]}
                    onClose={[Function]}
                    orientation="top"
                    padding=""
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    title="tab title"
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    Test content
                  </Button>
                }
                selected={false}
                sizing="normal"
                stacked={false}
                style={Object {}}
                testing={true}
                theme={null}
                title="tab title"
                tooltip=""
                top=""
                useedit={false}
                visible={true}
                widget={null}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.li
                    className="ui-item"
                    id=""
                    nohover={false}
                    onBlur={[Function]}
                    onDoubleClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseOut={[Function]}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-item"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-gqjmRU",
                            "isStatic": false,
                            "lastClassName": "cGvDUY",
                            "rules": Array [
                              "
	background-color: ",
                              [Function],
                              ";
	color: ",
                              [Function],
                              ";
	cursor: default;
	display: flex;

	",
                              [Function],
                              "

	&:hover .ui-item-button {
		display: inline-flex;
		opacity: 1.0;
	}
",
                            ],
                          },
                          "displayName": "styled.li",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-gqjmRU",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id=""
                      nohover={false}
                      onBlur={[Function]}
                      onDoubleClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyPress={[Function]}
                      onMouseOut={[Function]}
                      selected={false}
                      sizing="normal"
                      style={Object {}}
                    >
                      <li
                        className="ui-item sc-gqjmRU cGvDUY"
                        id=""
                        onBlur={[Function]}
                        onDoubleClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        onMouseOut={[Function]}
                        selected={false}
                        style={Object {}}
                      >
                        <Title
                          bottom=""
                          className=""
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={true}
                          err={null}
                          errorMessage=""
                          focus={false}
                          height=""
                          hiddenLeftButton={false}
                          hiddenRightButton={true}
                          href={
                            Object {
                              "selectHandler": [MockFunction],
                            }
                          }
                          id=""
                          layout={5}
                          left=""
                          leftButton={null}
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          notheme={false}
                          obj="Tab"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onClick={[Function]}
                          onClose={[Function]}
                          onDoubleClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onMouseOut={[Function]}
                          onUpdate={[Function]}
                          orientation="top"
                          padding=""
                          rightButton={
                            <Button
                              bottom=""
                              className=""
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={true}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              href={
                                Object {
                                  "selectHandler": [MockFunction],
                                }
                              }
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Tab"
                              onClick={[Function]}
                              onClose={[Function]}
                              orientation="top"
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              theme={null}
                              title="tab title"
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              Test content
                            </Button>
                          }
                          selected={false}
                          sizing="normal"
                          stacked={false}
                          style={Object {}}
                          testing={true}
                          theme={null}
                          title="tab title"
                          tooltip=""
                          top=""
                          useedit={false}
                          visible={true}
                          widget={null}
                          width=""
                          xcss={null}
                        >
                          <Wrapper
                            bottom=""
                            className=""
                            contentEditable={false}
                            controlled={true}
                            direction="right"
                            disabled={true}
                            err={null}
                            errorMessage=""
                            focus={false}
                            height=""
                            hiddenLeftButton={false}
                            hiddenRightButton={true}
                            href={
                              Object {
                                "selectHandler": [MockFunction],
                              }
                            }
                            id=""
                            layout={5}
                            left=""
                            leftButton={null}
                            location="none"
                            noedit={false}
                            nohover={false}
                            noripple={false}
                            notheme={false}
                            obj="Tab"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onClick={[Function]}
                            onClose={[Function]}
                            onDoubleClick={[Function]}
                            onError={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onMouseOut={[Function]}
                            onUpdate={[Function]}
                            orientation="top"
                            padding=""
                            reset={false}
                            rightButton={
                              <Button
                                bottom=""
                                className=""
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={true}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                href={
                                  Object {
                                    "selectHandler": [MockFunction],
                                  }
                                }
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Tab"
                                onClick={[Function]}
                                onClose={[Function]}
                                orientation="top"
                                padding=""
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                theme={null}
                                title="tab title"
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                Test content
                              </Button>
                            }
                            selected={false}
                            sizing="normal"
                            stacked={false}
                            style={Object {}}
                            testing={true}
                            theme={null}
                            title="tab title"
                            tooltip=""
                            top=""
                            useedit={false}
                            visible={true}
                            widget={null}
                            width=""
                            xcss={null}
                          >
                            <ThemeProvider
                              theme={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#c0c0c0",
                                  "color": "#000000",
                                  "headerBackgroundColor": "#004358",
                                  "headerForegroundColor": "#ffffff",
                                  "headerHoverColor": "#ffe11a",
                                  "hoverColor": "#c0c0c0",
                                  "inputBorderColor": "#c0c0c0",
                                  "itemHoverColor": "#bedb39",
                                  "selectedBackgroundColor": "#1f8a70",
                                  "selectedForegroundColor": "#ffe11a",
                                  "titleBarBackgroundColor": "#004358",
                                  "titleBarForegroundColor": "#ffe11a",
                                  "tooltipBackgroundColor": "#708090",
                                  "tooltipForegroundColor": "#ffffff",
                                  "transitionDelay": "0.5s",
                                }
                              }
                            >
                              <styled.div
                                className="ui-title-bar"
                                disabled={true}
                                layout={5}
                                sizing="normal"
                                style={Object {}}
                                visible={true}
                              >
                                <StyledComponent
                                  className="ui-title-bar"
                                  disabled={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-dnqmqq",
                                        "isStatic": false,
                                        "lastClassName": "krjgum",
                                        "rules": Array [
                                          "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                                          [Function],
                                          ";
	flex-grow: 1;

	",
                                          [Function],
                                          "
	",
                                          [Function],
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-dnqmqq",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  layout={5}
                                  sizing="normal"
                                  style={Object {}}
                                  visible={true}
                                >
                                  <div
                                    className="ui-title-bar sc-dnqmqq krjgum"
                                    disabled={true}
                                    style={Object {}}
                                  >
                                    <Styled(Label)
                                      bottom=""
                                      className="ui-title"
                                      contentEditable={false}
                                      controlled={true}
                                      direction="right"
                                      disabled={true}
                                      err={null}
                                      errorMessage=""
                                      focus={false}
                                      height=""
                                      hiddenLeftButton={false}
                                      hiddenRightButton={true}
                                      href={
                                        Object {
                                          "selectHandler": [MockFunction],
                                        }
                                      }
                                      id=""
                                      layout={5}
                                      left=""
                                      leftButton={null}
                                      location="none"
                                      noedit={false}
                                      nohover={false}
                                      noripple={false}
                                      notheme={false}
                                      obj="Tab"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onClose={[Function]}
                                      onDoubleClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      onMouseOut={[Function]}
                                      orientation="top"
                                      padding=""
                                      rightButton={
                                        <Button
                                          bottom=""
                                          className=""
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={true}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          href={
                                            Object {
                                              "selectHandler": [MockFunction],
                                            }
                                          }
                                          iconName="times"
                                          iconStyle=""
                                          id=""
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Tab"
                                          onClick={[Function]}
                                          onClose={[Function]}
                                          orientation="top"
                                          padding=""
                                          selected={false}
                                          sizing="normal"
                                          style={Object {}}
                                          testing={true}
                                          theme={null}
                                          title="tab title"
                                          tooltip=""
                                          top=""
                                          visible={true}
                                          width=""
                                          xcss={null}
                                        >
                                          Test content
                                        </Button>
                                      }
                                      selected={false}
                                      sizing="normal"
                                      stacked={false}
                                      style={Object {}}
                                      testing={true}
                                      text="tab title"
                                      theme={null}
                                      title="tab title"
                                      tooltip=""
                                      top=""
                                      useedit={false}
                                      visible={true}
                                      widget={null}
                                      width=""
                                      xcss={
                                        Array [
                                          "
	text-align: left;
	flex: 5;
",
                                        ]
                                      }
                                    >
                                      <StyledComponent
                                        bottom=""
                                        className="ui-title"
                                        contentEditable={false}
                                        controlled={true}
                                        direction="right"
                                        disabled={true}
                                        err={null}
                                        errorMessage=""
                                        focus={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gZMcBi",
                                              "isStatic": false,
                                              "lastClassName": "gAxdUB",
                                              "rules": Array [
                                                "
	",
                                                "
	padding: ",
                                                [Function],
                                                ";

	",
                                                [Function],
                                                "
",
                                                "
",
                                              ],
                                            },
                                            "defaultStyles": Object {},
                                            "displayName": "Styled(Label)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gZMcBi",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                            Symbol(Symbol.hasInstance): [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        height=""
                                        hiddenLeftButton={false}
                                        hiddenRightButton={true}
                                        href={
                                          Object {
                                            "selectHandler": [MockFunction],
                                          }
                                        }
                                        id=""
                                        layout={5}
                                        left=""
                                        leftButton={null}
                                        location="none"
                                        noedit={false}
                                        nohover={false}
                                        noripple={false}
                                        notheme={false}
                                        obj="Tab"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onClose={[Function]}
                                        onDoubleClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        onMouseOut={[Function]}
                                        orientation="top"
                                        padding=""
                                        rightButton={
                                          <Button
                                            bottom=""
                                            className=""
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={true}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            href={
                                              Object {
                                                "selectHandler": [MockFunction],
                                              }
                                            }
                                            iconName="times"
                                            iconStyle=""
                                            id=""
                                            left=""
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Tab"
                                            onClick={[Function]}
                                            onClose={[Function]}
                                            orientation="top"
                                            padding=""
                                            selected={false}
                                            sizing="normal"
                                            style={Object {}}
                                            testing={true}
                                            theme={null}
                                            title="tab title"
                                            tooltip=""
                                            top=""
                                            visible={true}
                                            width=""
                                            xcss={null}
                                          >
                                            Test content
                                          </Button>
                                        }
                                        selected={false}
                                        sizing="normal"
                                        stacked={false}
                                        style={Object {}}
                                        testing={true}
                                        text="tab title"
                                        theme={null}
                                        title="tab title"
                                        tooltip=""
                                        top=""
                                        useedit={false}
                                        visible={true}
                                        widget={null}
                                        width=""
                                        xcss={
                                          Array [
                                            "
	text-align: left;
	flex: 5;
",
                                          ]
                                        }
                                      >
                                        <Label
                                          bottom=""
                                          className="ui-title sc-gZMcBi gAxdUB"
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={true}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          hiddenLeftButton={false}
                                          hiddenRightButton={true}
                                          href={
                                            Object {
                                              "selectHandler": [MockFunction],
                                            }
                                          }
                                          id=""
                                          layout={5}
                                          left=""
                                          leftButton={null}
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Tab"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onClose={[Function]}
                                          onDoubleClick={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyPress={[Function]}
                                          onMouseOut={[Function]}
                                          onUpdate={[Function]}
                                          orientation="top"
                                          padding=""
                                          rightButton={
                                            <Button
                                              bottom=""
                                              className=""
                                              contentEditable={false}
                                              controlled={true}
                                              direction="right"
                                              disabled={true}
                                              err={null}
                                              errorMessage=""
                                              focus={false}
                                              height=""
                                              href={
                                                Object {
                                                  "selectHandler": [MockFunction],
                                                }
                                              }
                                              iconName="times"
                                              iconStyle=""
                                              id=""
                                              left=""
                                              location="none"
                                              noedit={false}
                                              nohover={false}
                                              noripple={false}
                                              notheme={false}
                                              obj="Tab"
                                              onClick={[Function]}
                                              onClose={[Function]}
                                              orientation="top"
                                              padding=""
                                              selected={false}
                                              sizing="normal"
                                              style={Object {}}
                                              testing={true}
                                              theme={null}
                                              title="tab title"
                                              tooltip=""
                                              top=""
                                              visible={true}
                                              width=""
                                              xcss={null}
                                            >
                                              Test content
                                            </Button>
                                          }
                                          selected={false}
                                          sizing="normal"
                                          stacked={false}
                                          style={Object {}}
                                          testing={true}
                                          text="tab title"
                                          theme={null}
                                          title="tab title"
                                          tooltip=""
                                          top=""
                                          useedit={false}
                                          visible={true}
                                          widget={null}
                                          width=""
                                          xcss={
                                            Array [
                                              "
	text-align: left;
	flex: 5;
",
                                            ]
                                          }
                                        >
                                          <Wrapper
                                            bottom=""
                                            className="ui-title sc-gZMcBi gAxdUB"
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={true}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            hiddenLeftButton={false}
                                            hiddenRightButton={true}
                                            href={
                                              Object {
                                                "selectHandler": [MockFunction],
                                              }
                                            }
                                            id=""
                                            layout={5}
                                            left=""
                                            leftButton={null}
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Tab"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            onClose={[Function]}
                                            onDoubleClick={[Function]}
                                            onError={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyPress={[Function]}
                                            onMouseOut={[Function]}
                                            onUpdate={[Function]}
                                            orientation="top"
                                            padding=""
                                            reset={false}
                                            rightButton={
                                              <Button
                                                bottom=""
                                                className=""
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={true}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                href={
                                                  Object {
                                                    "selectHandler": [MockFunction],
                                                  }
                                                }
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="Tab"
                                                onClick={[Function]}
                                                onClose={[Function]}
                                                orientation="top"
                                                padding=""
                                                selected={false}
                                                sizing="normal"
                                                style={Object {}}
                                                testing={true}
                                                theme={null}
                                                title="tab title"
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                Test content
                                              </Button>
                                            }
                                            selected={false}
                                            sizing="normal"
                                            stacked={false}
                                            style={Object {}}
                                            testing={true}
                                            text="tab title"
                                            theme={null}
                                            title="tab title"
                                            tooltip=""
                                            top=""
                                            useedit={false}
                                            visible={true}
                                            widget={null}
                                            width=""
                                            xcss={
                                              Array [
                                                "
	text-align: left;
	flex: 5;
",
                                              ]
                                            }
                                          >
                                            <ThemeProvider
                                              theme={
                                                Object {
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#c0c0c0",
                                                  "color": "#000000",
                                                  "headerBackgroundColor": "#004358",
                                                  "headerForegroundColor": "#ffffff",
                                                  "headerHoverColor": "#ffe11a",
                                                  "hoverColor": "#c0c0c0",
                                                  "inputBorderColor": "#c0c0c0",
                                                  "itemHoverColor": "#bedb39",
                                                  "selectedBackgroundColor": "#1f8a70",
                                                  "selectedForegroundColor": "#ffe11a",
                                                  "titleBarBackgroundColor": "#004358",
                                                  "titleBarForegroundColor": "#ffe11a",
                                                  "tooltipBackgroundColor": "#708090",
                                                  "tooltipForegroundColor": "#ffffff",
                                                  "transitionDelay": "0.5s",
                                                }
                                              }
                                            >
                                              <styled.span
                                                className="ui-label ui-title sc-gZMcBi gAxdUB"
                                                contentEditable={false}
                                                disabled={true}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDoubleClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyPress={[Function]}
                                                sizing="normal"
                                                style={Object {}}
                                                suppressContentEditableWarning={true}
                                                visible={true}
                                              >
                                                <StyledComponent
                                                  className="ui-label ui-title sc-gZMcBi gAxdUB"
                                                  contentEditable={false}
                                                  disabled={true}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htoDjs",
                                                        "isStatic": false,
                                                        "lastClassName": "iouaLl",
                                                        "rules": Array [
                                                          "
	background-color: inherit;

	",
                                                          [Function],
                                                          "
	",
                                                          [Function],
                                                          "
	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "displayName": "styled.span",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htoDjs",
                                                      "target": "span",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDoubleClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyPress={[Function]}
                                                  sizing="normal"
                                                  style={Object {}}
                                                  suppressContentEditableWarning={true}
                                                  visible={true}
                                                >
                                                  <span
                                                    className="ui-label ui-title sc-gZMcBi gAxdUB sc-htoDjs iouaLl"
                                                    contentEditable={false}
                                                    disabled={true}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDoubleClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyPress={[Function]}
                                                    style={Object {}}
                                                    suppressContentEditableWarning={true}
                                                  >
                                                    tab title
                                                  </span>
                                                </StyledComponent>
                                              </styled.span>
                                            </ThemeProvider>
                                          </Wrapper>
                                        </Label>
                                      </StyledComponent>
                                    </Styled(Label)>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </ThemeProvider>
                          </Wrapper>
                        </Title>
                      </li>
                    </StyledComponent>
                  </styled.li>
                </ThemeProvider>
              </Wrapper>
            </Item>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Tab>
`;

exports[`Test making a Tab invisible 1`] = `
<Tab
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  href={
    Object {
      "selectHandler": [Function],
    }
  }
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Tab"
  onClick={[Function]}
  onClose={[Function]}
  orientation="top"
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="tab title"
  tooltip=""
  top=""
  visible={false}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    href={
      Object {
        "selectHandler": [Function],
      }
    }
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Tab"
    onClick={[Function]}
    onClose={[Function]}
    onError={[Function]}
    orientation="top"
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    title="tab title"
    tooltip=""
    top=""
    visible={false}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-tab"
        disabled={false}
        selected={false}
        sizing="normal"
        style={
          Object {
            "minWidth": "120px",
            "width": "",
          }
        }
        visible={false}
        xcss={
          Array [
            "
	border-right: solid 1px ",
            [Function],
            ";
	border-top: solid 1px ",
            [Function],
            ";

	&:first-child {
		border-left: solid 1px ",
            [Function],
            ";
	}
",
          ]
        }
      >
        <StyledComponent
          className="ui-tab"
          disabled={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jTzLTM",
                "isStatic": false,
                "lastClassName": "jKmmpx",
                "rules": Array [
                  "
	cursor: default;
	display: inline-block;
	flex-grow: unset;

	",
                  [Function],
                  "

	&:hover .ui-button {
		color: ",
                  [Function],
                  ";
		background-color: ",
                  [Function],
                  ";
		display: flex;
		opacity: 1.0;
	}

	.ui-label {
		padding-left: 4px;
	}

	.ui-button:hover {
		background-color: ",
                  "#d9534f",
                  " !important;
	}

	.ui-button {
		display: none;
		opacity: 0;
		animation: fadeIn ",
                  [Function],
                  ";
	}

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jTzLTM",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          selected={false}
          sizing="normal"
          style={
            Object {
              "minWidth": "120px",
              "width": "",
            }
          }
          visible={false}
          xcss={
            Array [
              "
	border-right: solid 1px ",
              [Function],
              ";
	border-top: solid 1px ",
              [Function],
              ";

	&:first-child {
		border-left: solid 1px ",
              [Function],
              ";
	}
",
            ]
          }
        >
          <div
            className="ui-tab sc-jTzLTM jKmmpx"
            disabled={false}
            selected={false}
            style={
              Object {
                "minWidth": "120px",
                "width": "",
              }
            }
          >
            <Item
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              hiddenLeftButton={false}
              hiddenRightButton={true}
              href={
                Object {
                  "selectHandler": [Function],
                }
              }
              id=""
              layout={5}
              left=""
              leftButton={null}
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tab"
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onClose={[Function]}
              onDoubleClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseOut={[Function]}
              onUpdate={[Function]}
              orientation="top"
              padding=""
              rightButton={
                <Button
                  bottom=""
                  className=""
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  href={
                    Object {
                      "selectHandler": [Function],
                    }
                  }
                  iconName="times"
                  iconStyle=""
                  id=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Tab"
                  onClick={[Function]}
                  onClose={[Function]}
                  orientation="top"
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  title="tab title"
                  tooltip=""
                  top=""
                  visible={false}
                  width=""
                  xcss={null}
                >
                  Test content
                </Button>
              }
              selected={false}
              sizing="normal"
              stacked={false}
              style={Object {}}
              testing={true}
              theme={null}
              title="tab title"
              tooltip=""
              top=""
              useedit={false}
              visible={true}
              widget={null}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                hiddenLeftButton={false}
                hiddenRightButton={true}
                href={
                  Object {
                    "selectHandler": [Function],
                  }
                }
                id=""
                layout={5}
                left=""
                leftButton={null}
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tab"
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onClose={[Function]}
                onDoubleClick={[Function]}
                onError={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                onMouseOut={[Function]}
                onUpdate={[Function]}
                orientation="top"
                padding=""
                reset={false}
                rightButton={
                  <Button
                    bottom=""
                    className=""
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    href={
                      Object {
                        "selectHandler": [Function],
                      }
                    }
                    iconName="times"
                    iconStyle=""
                    id=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Tab"
                    onClick={[Function]}
                    onClose={[Function]}
                    orientation="top"
                    padding=""
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    title="tab title"
                    tooltip=""
                    top=""
                    visible={false}
                    width=""
                    xcss={null}
                  >
                    Test content
                  </Button>
                }
                selected={false}
                sizing="normal"
                stacked={false}
                style={Object {}}
                testing={true}
                theme={null}
                title="tab title"
                tooltip=""
                top=""
                useedit={false}
                visible={true}
                widget={null}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.li
                    className="ui-item"
                    id=""
                    nohover={false}
                    onBlur={[Function]}
                    onDoubleClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseOut={[Function]}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-item"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-gqjmRU",
                            "isStatic": false,
                            "lastClassName": "cGvDUY",
                            "rules": Array [
                              "
	background-color: ",
                              [Function],
                              ";
	color: ",
                              [Function],
                              ";
	cursor: default;
	display: flex;

	",
                              [Function],
                              "

	&:hover .ui-item-button {
		display: inline-flex;
		opacity: 1.0;
	}
",
                            ],
                          },
                          "displayName": "styled.li",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-gqjmRU",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id=""
                      nohover={false}
                      onBlur={[Function]}
                      onDoubleClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyPress={[Function]}
                      onMouseOut={[Function]}
                      selected={false}
                      sizing="normal"
                      style={Object {}}
                    >
                      <li
                        className="ui-item sc-gqjmRU cGvDUY"
                        id=""
                        onBlur={[Function]}
                        onDoubleClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        onMouseOut={[Function]}
                        selected={false}
                        style={Object {}}
                      >
                        <Title
                          bottom=""
                          className=""
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          focus={false}
                          height=""
                          hiddenLeftButton={false}
                          hiddenRightButton={true}
                          href={
                            Object {
                              "selectHandler": [Function],
                            }
                          }
                          id=""
                          layout={5}
                          left=""
                          leftButton={null}
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          notheme={false}
                          obj="Tab"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onClick={[Function]}
                          onClose={[Function]}
                          onDoubleClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onMouseOut={[Function]}
                          onUpdate={[Function]}
                          orientation="top"
                          padding=""
                          rightButton={
                            <Button
                              bottom=""
                              className=""
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              href={
                                Object {
                                  "selectHandler": [Function],
                                }
                              }
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Tab"
                              onClick={[Function]}
                              onClose={[Function]}
                              orientation="top"
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              theme={null}
                              title="tab title"
                              tooltip=""
                              top=""
                              visible={false}
                              width=""
                              xcss={null}
                            >
                              Test content
                            </Button>
                          }
                          selected={false}
                          sizing="normal"
                          stacked={false}
                          style={Object {}}
                          testing={true}
                          theme={null}
                          title="tab title"
                          tooltip=""
                          top=""
                          useedit={false}
                          visible={true}
                          widget={null}
                          width=""
                          xcss={null}
                        >
                          <Wrapper
                            bottom=""
                            className=""
                            contentEditable={false}
                            controlled={true}
                            direction="right"
                            disabled={false}
                            err={null}
                            errorMessage=""
                            focus={false}
                            height=""
                            hiddenLeftButton={false}
                            hiddenRightButton={true}
                            href={
                              Object {
                                "selectHandler": [Function],
                              }
                            }
                            id=""
                            layout={5}
                            left=""
                            leftButton={null}
                            location="none"
                            noedit={false}
                            nohover={false}
                            noripple={false}
                            notheme={false}
                            obj="Tab"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onClick={[Function]}
                            onClose={[Function]}
                            onDoubleClick={[Function]}
                            onError={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onMouseOut={[Function]}
                            onUpdate={[Function]}
                            orientation="top"
                            padding=""
                            reset={false}
                            rightButton={
                              <Button
                                bottom=""
                                className=""
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                href={
                                  Object {
                                    "selectHandler": [Function],
                                  }
                                }
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Tab"
                                onClick={[Function]}
                                onClose={[Function]}
                                orientation="top"
                                padding=""
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                theme={null}
                                title="tab title"
                                tooltip=""
                                top=""
                                visible={false}
                                width=""
                                xcss={null}
                              >
                                Test content
                              </Button>
                            }
                            selected={false}
                            sizing="normal"
                            stacked={false}
                            style={Object {}}
                            testing={true}
                            theme={null}
                            title="tab title"
                            tooltip=""
                            top=""
                            useedit={false}
                            visible={true}
                            widget={null}
                            width=""
                            xcss={null}
                          >
                            <ThemeProvider
                              theme={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#c0c0c0",
                                  "color": "#000000",
                                  "headerBackgroundColor": "#004358",
                                  "headerForegroundColor": "#ffffff",
                                  "headerHoverColor": "#ffe11a",
                                  "hoverColor": "#c0c0c0",
                                  "inputBorderColor": "#c0c0c0",
                                  "itemHoverColor": "#bedb39",
                                  "selectedBackgroundColor": "#1f8a70",
                                  "selectedForegroundColor": "#ffe11a",
                                  "titleBarBackgroundColor": "#004358",
                                  "titleBarForegroundColor": "#ffe11a",
                                  "tooltipBackgroundColor": "#708090",
                                  "tooltipForegroundColor": "#ffffff",
                                  "transitionDelay": "0.5s",
                                }
                              }
                            >
                              <styled.div
                                className="ui-title-bar ripple"
                                disabled={false}
                                layout={5}
                                sizing="normal"
                                style={Object {}}
                                visible={true}
                              >
                                <StyledComponent
                                  className="ui-title-bar ripple"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-dnqmqq",
                                        "isStatic": false,
                                        "lastClassName": "dKSzzJ",
                                        "rules": Array [
                                          "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                                          [Function],
                                          ";
	flex-grow: 1;

	",
                                          [Function],
                                          "
	",
                                          [Function],
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-dnqmqq",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  layout={5}
                                  sizing="normal"
                                  style={Object {}}
                                  visible={true}
                                >
                                  <div
                                    className="ui-title-bar ripple sc-dnqmqq dKSzzJ"
                                    disabled={false}
                                    style={Object {}}
                                  >
                                    <Styled(Label)
                                      bottom=""
                                      className="ui-title"
                                      contentEditable={false}
                                      controlled={true}
                                      direction="right"
                                      disabled={false}
                                      err={null}
                                      errorMessage=""
                                      focus={false}
                                      height=""
                                      hiddenLeftButton={false}
                                      hiddenRightButton={true}
                                      href={
                                        Object {
                                          "selectHandler": [Function],
                                        }
                                      }
                                      id=""
                                      layout={5}
                                      left=""
                                      leftButton={null}
                                      location="none"
                                      noedit={false}
                                      nohover={false}
                                      noripple={false}
                                      notheme={false}
                                      obj="Tab"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onClose={[Function]}
                                      onDoubleClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      onMouseOut={[Function]}
                                      orientation="top"
                                      padding=""
                                      rightButton={
                                        <Button
                                          bottom=""
                                          className=""
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={false}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          href={
                                            Object {
                                              "selectHandler": [Function],
                                            }
                                          }
                                          iconName="times"
                                          iconStyle=""
                                          id=""
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Tab"
                                          onClick={[Function]}
                                          onClose={[Function]}
                                          orientation="top"
                                          padding=""
                                          selected={false}
                                          sizing="normal"
                                          style={Object {}}
                                          testing={true}
                                          theme={null}
                                          title="tab title"
                                          tooltip=""
                                          top=""
                                          visible={false}
                                          width=""
                                          xcss={null}
                                        >
                                          Test content
                                        </Button>
                                      }
                                      selected={false}
                                      sizing="normal"
                                      stacked={false}
                                      style={Object {}}
                                      testing={true}
                                      text="tab title"
                                      theme={null}
                                      title="tab title"
                                      tooltip=""
                                      top=""
                                      useedit={false}
                                      visible={true}
                                      widget={null}
                                      width=""
                                      xcss={
                                        Array [
                                          "
	text-align: left;
	flex: 5;
",
                                        ]
                                      }
                                    >
                                      <StyledComponent
                                        bottom=""
                                        className="ui-title"
                                        contentEditable={false}
                                        controlled={true}
                                        direction="right"
                                        disabled={false}
                                        err={null}
                                        errorMessage=""
                                        focus={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gZMcBi",
                                              "isStatic": false,
                                              "lastClassName": "gAxdUB",
                                              "rules": Array [
                                                "
	",
                                                "
	padding: ",
                                                [Function],
                                                ";

	",
                                                [Function],
                                                "
",
                                                "
",
                                              ],
                                            },
                                            "defaultStyles": Object {},
                                            "displayName": "Styled(Label)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gZMcBi",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                            Symbol(Symbol.hasInstance): [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        height=""
                                        hiddenLeftButton={false}
                                        hiddenRightButton={true}
                                        href={
                                          Object {
                                            "selectHandler": [Function],
                                          }
                                        }
                                        id=""
                                        layout={5}
                                        left=""
                                        leftButton={null}
                                        location="none"
                                        noedit={false}
                                        nohover={false}
                                        noripple={false}
                                        notheme={false}
                                        obj="Tab"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onClose={[Function]}
                                        onDoubleClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        onMouseOut={[Function]}
                                        orientation="top"
                                        padding=""
                                        rightButton={
                                          <Button
                                            bottom=""
                                            className=""
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            href={
                                              Object {
                                                "selectHandler": [Function],
                                              }
                                            }
                                            iconName="times"
                                            iconStyle=""
                                            id=""
                                            left=""
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Tab"
                                            onClick={[Function]}
                                            onClose={[Function]}
                                            orientation="top"
                                            padding=""
                                            selected={false}
                                            sizing="normal"
                                            style={Object {}}
                                            testing={true}
                                            theme={null}
                                            title="tab title"
                                            tooltip=""
                                            top=""
                                            visible={false}
                                            width=""
                                            xcss={null}
                                          >
                                            Test content
                                          </Button>
                                        }
                                        selected={false}
                                        sizing="normal"
                                        stacked={false}
                                        style={Object {}}
                                        testing={true}
                                        text="tab title"
                                        theme={null}
                                        title="tab title"
                                        tooltip=""
                                        top=""
                                        useedit={false}
                                        visible={true}
                                        widget={null}
                                        width=""
                                        xcss={
                                          Array [
                                            "
	text-align: left;
	flex: 5;
",
                                          ]
                                        }
                                      >
                                        <Label
                                          bottom=""
                                          className="ui-title sc-gZMcBi gAxdUB"
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={false}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          hiddenLeftButton={false}
                                          hiddenRightButton={true}
                                          href={
                                            Object {
                                              "selectHandler": [Function],
                                            }
                                          }
                                          id=""
                                          layout={5}
                                          left=""
                                          leftButton={null}
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Tab"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onClose={[Function]}
                                          onDoubleClick={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyPress={[Function]}
                                          onMouseOut={[Function]}
                                          onUpdate={[Function]}
                                          orientation="top"
                                          padding=""
                                          rightButton={
                                            <Button
                                              bottom=""
                                              className=""
                                              contentEditable={false}
                                              controlled={true}
                                              direction="right"
                                              disabled={false}
                                              err={null}
                                              errorMessage=""
                                              focus={false}
                                              height=""
                                              href={
                                                Object {
                                                  "selectHandler": [Function],
                                                }
                                              }
                                              iconName="times"
                                              iconStyle=""
                                              id=""
                                              left=""
                                              location="none"
                                              noedit={false}
                                              nohover={false}
                                              noripple={false}
                                              notheme={false}
                                              obj="Tab"
                                              onClick={[Function]}
                                              onClose={[Function]}
                                              orientation="top"
                                              padding=""
                                              selected={false}
                                              sizing="normal"
                                              style={Object {}}
                                              testing={true}
                                              theme={null}
                                              title="tab title"
                                              tooltip=""
                                              top=""
                                              visible={false}
                                              width=""
                                              xcss={null}
                                            >
                                              Test content
                                            </Button>
                                          }
                                          selected={false}
                                          sizing="normal"
                                          stacked={false}
                                          style={Object {}}
                                          testing={true}
                                          text="tab title"
                                          theme={null}
                                          title="tab title"
                                          tooltip=""
                                          top=""
                                          useedit={false}
                                          visible={true}
                                          widget={null}
                                          width=""
                                          xcss={
                                            Array [
                                              "
	text-align: left;
	flex: 5;
",
                                            ]
                                          }
                                        >
                                          <Wrapper
                                            bottom=""
                                            className="ui-title sc-gZMcBi gAxdUB"
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            hiddenLeftButton={false}
                                            hiddenRightButton={true}
                                            href={
                                              Object {
                                                "selectHandler": [Function],
                                              }
                                            }
                                            id=""
                                            layout={5}
                                            left=""
                                            leftButton={null}
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Tab"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            onClose={[Function]}
                                            onDoubleClick={[Function]}
                                            onError={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyPress={[Function]}
                                            onMouseOut={[Function]}
                                            onUpdate={[Function]}
                                            orientation="top"
                                            padding=""
                                            reset={false}
                                            rightButton={
                                              <Button
                                                bottom=""
                                                className=""
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                href={
                                                  Object {
                                                    "selectHandler": [Function],
                                                  }
                                                }
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="Tab"
                                                onClick={[Function]}
                                                onClose={[Function]}
                                                orientation="top"
                                                padding=""
                                                selected={false}
                                                sizing="normal"
                                                style={Object {}}
                                                testing={true}
                                                theme={null}
                                                title="tab title"
                                                tooltip=""
                                                top=""
                                                visible={false}
                                                width=""
                                                xcss={null}
                                              >
                                                Test content
                                              </Button>
                                            }
                                            selected={false}
                                            sizing="normal"
                                            stacked={false}
                                            style={Object {}}
                                            testing={true}
                                            text="tab title"
                                            theme={null}
                                            title="tab title"
                                            tooltip=""
                                            top=""
                                            useedit={false}
                                            visible={true}
                                            widget={null}
                                            width=""
                                            xcss={
                                              Array [
                                                "
	text-align: left;
	flex: 5;
",
                                              ]
                                            }
                                          >
                                            <ThemeProvider
                                              theme={
                                                Object {
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#c0c0c0",
                                                  "color": "#000000",
                                                  "headerBackgroundColor": "#004358",
                                                  "headerForegroundColor": "#ffffff",
                                                  "headerHoverColor": "#ffe11a",
                                                  "hoverColor": "#c0c0c0",
                                                  "inputBorderColor": "#c0c0c0",
                                                  "itemHoverColor": "#bedb39",
                                                  "selectedBackgroundColor": "#1f8a70",
                                                  "selectedForegroundColor": "#ffe11a",
                                                  "titleBarBackgroundColor": "#004358",
                                                  "titleBarForegroundColor": "#ffe11a",
                                                  "tooltipBackgroundColor": "#708090",
                                                  "tooltipForegroundColor": "#ffffff",
                                                  "transitionDelay": "0.5s",
                                                }
                                              }
                                            >
                                              <styled.span
                                                className="ui-label ui-title sc-gZMcBi gAxdUB"
                                                contentEditable={false}
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDoubleClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyPress={[Function]}
                                                sizing="normal"
                                                style={Object {}}
                                                suppressContentEditableWarning={true}
                                                visible={true}
                                              >
                                                <StyledComponent
                                                  className="ui-label ui-title sc-gZMcBi gAxdUB"
                                                  contentEditable={false}
                                                  disabled={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htoDjs",
                                                        "isStatic": false,
                                                        "lastClassName": "korbdG",
                                                        "rules": Array [
                                                          "
	background-color: inherit;

	",
                                                          [Function],
                                                          "
	",
                                                          [Function],
                                                          "
	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "displayName": "styled.span",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htoDjs",
                                                      "target": "span",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDoubleClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyPress={[Function]}
                                                  sizing="normal"
                                                  style={Object {}}
                                                  suppressContentEditableWarning={true}
                                                  visible={true}
                                                >
                                                  <span
                                                    className="ui-label ui-title sc-gZMcBi gAxdUB sc-htoDjs korbdG"
                                                    contentEditable={false}
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDoubleClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyPress={[Function]}
                                                    style={Object {}}
                                                    suppressContentEditableWarning={true}
                                                  >
                                                    tab title
                                                  </span>
                                                </StyledComponent>
                                              </styled.span>
                                            </ThemeProvider>
                                          </Wrapper>
                                        </Label>
                                      </StyledComponent>
                                    </Styled(Label)>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </ThemeProvider>
                          </Wrapper>
                        </Title>
                        <styled.div
                          className="ui-item-button"
                          hiddenRightButton={true}
                        >
                          <StyledComponent
                            className="ui-item-button"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-VigVT",
                                  "isStatic": false,
                                  "lastClassName": "eObhFe",
                                  "rules": Array [
                                    "
	display: inline-flex;
	position: relative;
	width: ",
                                    [Function],
                                    ";

	",
                                    [Function],
                                    ";
	",
                                    [Function],
                                    "

	> i, > .ui-button-circle, > .ui-option {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}

	> .ui-option {
		display: inline-flex;
		flex: 1;
	}
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-VigVT",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            hiddenRightButton={true}
                          >
                            <div
                              className="ui-item-button sc-VigVT eObhFe"
                            >
                              <Button
                                bottom=""
                                className=""
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                href={
                                  Object {
                                    "selectHandler": [Function],
                                  }
                                }
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Tab"
                                onClick={[Function]}
                                onClose={[Function]}
                                orientation="top"
                                padding=""
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                theme={null}
                                title="tab title"
                                tooltip=""
                                top=""
                                visible={false}
                                width=""
                                xcss={null}
                              >
                                <Wrapper
                                  bottom=""
                                  className=""
                                  contentEditable={false}
                                  controlled={true}
                                  direction="right"
                                  disabled={false}
                                  err={null}
                                  errorMessage=""
                                  focus={false}
                                  height=""
                                  href={
                                    Object {
                                      "selectHandler": [Function],
                                    }
                                  }
                                  iconName="times"
                                  iconStyle=""
                                  id=""
                                  left=""
                                  location="none"
                                  noedit={false}
                                  nohover={false}
                                  noripple={false}
                                  notheme={false}
                                  obj="Tab"
                                  onClick={[Function]}
                                  onClose={[Function]}
                                  onError={[Function]}
                                  orientation="top"
                                  padding=""
                                  reset={false}
                                  selected={false}
                                  sizing="normal"
                                  style={Object {}}
                                  testing={true}
                                  theme={null}
                                  title="tab title"
                                  tooltip=""
                                  top=""
                                  visible={false}
                                  width=""
                                  xcss={null}
                                >
                                  <ThemeProvider
                                    theme={
                                      Object {
                                        "backgroundColor": "#ffffff",
                                        "borderColor": "#c0c0c0",
                                        "color": "#000000",
                                        "headerBackgroundColor": "#004358",
                                        "headerForegroundColor": "#ffffff",
                                        "headerHoverColor": "#ffe11a",
                                        "hoverColor": "#c0c0c0",
                                        "inputBorderColor": "#c0c0c0",
                                        "itemHoverColor": "#bedb39",
                                        "selectedBackgroundColor": "#1f8a70",
                                        "selectedForegroundColor": "#ffe11a",
                                        "titleBarBackgroundColor": "#004358",
                                        "titleBarForegroundColor": "#ffe11a",
                                        "tooltipBackgroundColor": "#708090",
                                        "tooltipForegroundColor": "#ffffff",
                                        "transitionDelay": "0.5s",
                                      }
                                    }
                                  >
                                    <styled.div
                                      className="ui-button ripple"
                                      disabled={false}
                                      id="Button-0"
                                      onClick={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      visible={false}
                                    >
                                      <StyledComponent
                                        className="ui-button ripple"
                                        disabled={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gzVnrw",
                                              "isStatic": false,
                                              "lastClassName": "jvERqM",
                                              "rules": Array [
                                                "
	",
                                                "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                [Function],
                                                " ",
                                                [Function],
                                                ";
	}

	",
                                                [Function],
                                                "
	",
                                                [Function],
                                                "
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gzVnrw",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="Button-0"
                                        onClick={[Function]}
                                        sizing="normal"
                                        style={Object {}}
                                        visible={false}
                                      >
                                        <div
                                          className="ui-button ripple sc-gzVnrw jvERqM"
                                          disabled={false}
                                          id="Button-0"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <Icon
                                            bottom=""
                                            className=""
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            iconName="times"
                                            id=""
                                            imageFile=""
                                            left=""
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Icon"
                                            padding=""
                                            selected={false}
                                            sizing="normal"
                                            style={Object {}}
                                            testing={true}
                                            theme={null}
                                            tooltip=""
                                            top=""
                                            visible={true}
                                            width=""
                                            xcss={null}
                                          >
                                            <Wrapper
                                              bottom=""
                                              className=""
                                              contentEditable={false}
                                              controlled={true}
                                              direction="right"
                                              disabled={false}
                                              err={null}
                                              errorMessage=""
                                              focus={false}
                                              height=""
                                              iconName="times"
                                              id=""
                                              imageFile=""
                                              left=""
                                              location="none"
                                              noedit={false}
                                              nohover={false}
                                              noripple={false}
                                              notheme={false}
                                              obj="Icon"
                                              onError={[Function]}
                                              padding=""
                                              reset={false}
                                              selected={false}
                                              sizing="normal"
                                              style={Object {}}
                                              testing={true}
                                              theme={null}
                                              tooltip=""
                                              top=""
                                              visible={true}
                                              width=""
                                              xcss={null}
                                            >
                                              <ThemeProvider
                                                theme={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#c0c0c0",
                                                    "color": "#000000",
                                                    "headerBackgroundColor": "#004358",
                                                    "headerForegroundColor": "#ffffff",
                                                    "headerHoverColor": "#ffe11a",
                                                    "hoverColor": "#c0c0c0",
                                                    "inputBorderColor": "#c0c0c0",
                                                    "itemHoverColor": "#bedb39",
                                                    "selectedBackgroundColor": "#1f8a70",
                                                    "selectedForegroundColor": "#ffe11a",
                                                    "titleBarBackgroundColor": "#004358",
                                                    "titleBarForegroundColor": "#ffe11a",
                                                    "tooltipBackgroundColor": "#708090",
                                                    "tooltipForegroundColor": "#ffffff",
                                                    "transitionDelay": "0.5s",
                                                  }
                                                }
                                              >
                                                <styled.i
                                                  bottom=""
                                                  className="ui-icon fa fa-fw fa-times"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  height=""
                                                  iconName="times"
                                                  id=""
                                                  imageFile=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="Icon"
                                                  padding=""
                                                  selected={false}
                                                  sizing="normal"
                                                  style={Object {}}
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <StyledComponent
                                                    bottom=""
                                                    className="ui-icon fa fa-fw fa-times"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "hBOHvv",
                                                          "rules": Array [
                                                            "
	text-align: center;
	",
                                                            [Function],
                                                            "
	",
                                                            [Function],
                                                            "
	",
                                                            [Function],
                                                            "
	",
                                                            [Function],
                                                            "
",
                                                          ],
                                                        },
                                                        "displayName": "styled.i",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "i",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    height=""
                                                    iconName="times"
                                                    id=""
                                                    imageFile=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Icon"
                                                    padding=""
                                                    selected={false}
                                                    sizing="normal"
                                                    style={Object {}}
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <i
                                                      className="ui-icon fa fa-fw fa-times sc-bwzfXH hBOHvv"
                                                      contentEditable={false}
                                                      direction="right"
                                                      disabled={false}
                                                      height=""
                                                      id=""
                                                      selected={false}
                                                      style={Object {}}
                                                      width=""
                                                    />
                                                  </StyledComponent>
                                                </styled.i>
                                              </ThemeProvider>
                                            </Wrapper>
                                          </Icon>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                  </ThemeProvider>
                                </Wrapper>
                              </Button>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </li>
                    </StyledComponent>
                  </styled.li>
                </ThemeProvider>
              </Wrapper>
            </Item>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Tab>
`;

exports[`Test retrieval of Tab props object 1`] = `
Object {
  "bottom": "",
  "children": null,
  "className": "",
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": "",
  "focus": false,
  "height": "",
  "href": Object {
    "selectHandler": [Function],
  },
  "id": "",
  "left": "",
  "location": "none",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "notheme": false,
  "obj": "Tab",
  "onClick": [Function],
  "onClose": [Function],
  "orientation": "top",
  "padding": "",
  "selected": false,
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "theme": null,
  "title": "",
  "tooltip": "",
  "top": "",
  "visible": true,
  "width": "",
  "xcss": null,
}
`;

exports[`Test the click handler in the Tab instance 1`] = `
<Tab
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  href={
    Object {
      "selectHandler": [MockFunction],
    }
  }
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Tab"
  onClick={[Function]}
  onClose={[Function]}
  orientation="top"
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="tab title"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    href={
      Object {
        "selectHandler": [MockFunction],
      }
    }
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Tab"
    onClick={[Function]}
    onClose={[Function]}
    onError={[Function]}
    orientation="top"
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    title="tab title"
    tooltip=""
    top=""
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-tab"
        disabled={false}
        selected={false}
        sizing="normal"
        style={
          Object {
            "minWidth": "120px",
            "width": "",
          }
        }
        visible={true}
        xcss={
          Array [
            "
	border-right: solid 1px ",
            [Function],
            ";
	border-top: solid 1px ",
            [Function],
            ";

	&:first-child {
		border-left: solid 1px ",
            [Function],
            ";
	}
",
          ]
        }
      >
        <StyledComponent
          className="ui-tab"
          disabled={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jTzLTM",
                "isStatic": false,
                "lastClassName": "GBEEd",
                "rules": Array [
                  "
	cursor: default;
	display: inline-block;
	flex-grow: unset;

	",
                  [Function],
                  "

	&:hover .ui-button {
		color: ",
                  [Function],
                  ";
		background-color: ",
                  [Function],
                  ";
		display: flex;
		opacity: 1.0;
	}

	.ui-label {
		padding-left: 4px;
	}

	.ui-button:hover {
		background-color: ",
                  "#d9534f",
                  " !important;
	}

	.ui-button {
		display: none;
		opacity: 0;
		animation: fadeIn ",
                  [Function],
                  ";
	}

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jTzLTM",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          selected={false}
          sizing="normal"
          style={
            Object {
              "minWidth": "120px",
              "width": "",
            }
          }
          visible={true}
          xcss={
            Array [
              "
	border-right: solid 1px ",
              [Function],
              ";
	border-top: solid 1px ",
              [Function],
              ";

	&:first-child {
		border-left: solid 1px ",
              [Function],
              ";
	}
",
            ]
          }
        >
          <div
            className="ui-tab sc-jTzLTM GBEEd"
            disabled={false}
            selected={false}
            style={
              Object {
                "minWidth": "120px",
                "width": "",
              }
            }
          >
            <Item
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              hiddenLeftButton={false}
              hiddenRightButton={true}
              href={
                Object {
                  "selectHandler": [MockFunction],
                }
              }
              id=""
              layout={5}
              left=""
              leftButton={null}
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tab"
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onClose={[Function]}
              onDoubleClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseOut={[Function]}
              onUpdate={[Function]}
              orientation="top"
              padding=""
              rightButton={
                <Button
                  bottom=""
                  className=""
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  href={
                    Object {
                      "selectHandler": [MockFunction],
                    }
                  }
                  iconName="times"
                  iconStyle=""
                  id=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Tab"
                  onClick={[Function]}
                  onClose={[Function]}
                  orientation="top"
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  title="tab title"
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  Test content
                </Button>
              }
              selected={false}
              sizing="normal"
              stacked={false}
              style={Object {}}
              testing={true}
              theme={null}
              title="tab title"
              tooltip=""
              top=""
              useedit={false}
              visible={true}
              widget={null}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                hiddenLeftButton={false}
                hiddenRightButton={true}
                href={
                  Object {
                    "selectHandler": [MockFunction],
                  }
                }
                id=""
                layout={5}
                left=""
                leftButton={null}
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tab"
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onClose={[Function]}
                onDoubleClick={[Function]}
                onError={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                onMouseOut={[Function]}
                onUpdate={[Function]}
                orientation="top"
                padding=""
                reset={false}
                rightButton={
                  <Button
                    bottom=""
                    className=""
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    href={
                      Object {
                        "selectHandler": [MockFunction],
                      }
                    }
                    iconName="times"
                    iconStyle=""
                    id=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Tab"
                    onClick={[Function]}
                    onClose={[Function]}
                    orientation="top"
                    padding=""
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    title="tab title"
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    Test content
                  </Button>
                }
                selected={false}
                sizing="normal"
                stacked={false}
                style={Object {}}
                testing={true}
                theme={null}
                title="tab title"
                tooltip=""
                top=""
                useedit={false}
                visible={true}
                widget={null}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.li
                    className="ui-item"
                    id=""
                    nohover={false}
                    onBlur={[Function]}
                    onDoubleClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseOut={[Function]}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-item"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-gqjmRU",
                            "isStatic": false,
                            "lastClassName": "cGvDUY",
                            "rules": Array [
                              "
	background-color: ",
                              [Function],
                              ";
	color: ",
                              [Function],
                              ";
	cursor: default;
	display: flex;

	",
                              [Function],
                              "

	&:hover .ui-item-button {
		display: inline-flex;
		opacity: 1.0;
	}
",
                            ],
                          },
                          "displayName": "styled.li",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-gqjmRU",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id=""
                      nohover={false}
                      onBlur={[Function]}
                      onDoubleClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyPress={[Function]}
                      onMouseOut={[Function]}
                      selected={false}
                      sizing="normal"
                      style={Object {}}
                    >
                      <li
                        className="ui-item sc-gqjmRU cGvDUY"
                        id=""
                        onBlur={[Function]}
                        onDoubleClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        onMouseOut={[Function]}
                        selected={false}
                        style={Object {}}
                      >
                        <Title
                          bottom=""
                          className=""
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          focus={false}
                          height=""
                          hiddenLeftButton={false}
                          hiddenRightButton={true}
                          href={
                            Object {
                              "selectHandler": [MockFunction],
                            }
                          }
                          id=""
                          layout={5}
                          left=""
                          leftButton={null}
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          notheme={false}
                          obj="Tab"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onClick={[Function]}
                          onClose={[Function]}
                          onDoubleClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onMouseOut={[Function]}
                          onUpdate={[Function]}
                          orientation="top"
                          padding=""
                          rightButton={
                            <Button
                              bottom=""
                              className=""
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              href={
                                Object {
                                  "selectHandler": [MockFunction],
                                }
                              }
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Tab"
                              onClick={[Function]}
                              onClose={[Function]}
                              orientation="top"
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              theme={null}
                              title="tab title"
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              Test content
                            </Button>
                          }
                          selected={false}
                          sizing="normal"
                          stacked={false}
                          style={Object {}}
                          testing={true}
                          theme={null}
                          title="tab title"
                          tooltip=""
                          top=""
                          useedit={false}
                          visible={true}
                          widget={null}
                          width=""
                          xcss={null}
                        >
                          <Wrapper
                            bottom=""
                            className=""
                            contentEditable={false}
                            controlled={true}
                            direction="right"
                            disabled={false}
                            err={null}
                            errorMessage=""
                            focus={false}
                            height=""
                            hiddenLeftButton={false}
                            hiddenRightButton={true}
                            href={
                              Object {
                                "selectHandler": [MockFunction],
                              }
                            }
                            id=""
                            layout={5}
                            left=""
                            leftButton={null}
                            location="none"
                            noedit={false}
                            nohover={false}
                            noripple={false}
                            notheme={false}
                            obj="Tab"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onClick={[Function]}
                            onClose={[Function]}
                            onDoubleClick={[Function]}
                            onError={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onMouseOut={[Function]}
                            onUpdate={[Function]}
                            orientation="top"
                            padding=""
                            reset={false}
                            rightButton={
                              <Button
                                bottom=""
                                className=""
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                href={
                                  Object {
                                    "selectHandler": [MockFunction],
                                  }
                                }
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Tab"
                                onClick={[Function]}
                                onClose={[Function]}
                                orientation="top"
                                padding=""
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                theme={null}
                                title="tab title"
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                Test content
                              </Button>
                            }
                            selected={false}
                            sizing="normal"
                            stacked={false}
                            style={Object {}}
                            testing={true}
                            theme={null}
                            title="tab title"
                            tooltip=""
                            top=""
                            useedit={false}
                            visible={true}
                            widget={null}
                            width=""
                            xcss={null}
                          >
                            <ThemeProvider
                              theme={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#c0c0c0",
                                  "color": "#000000",
                                  "headerBackgroundColor": "#004358",
                                  "headerForegroundColor": "#ffffff",
                                  "headerHoverColor": "#ffe11a",
                                  "hoverColor": "#c0c0c0",
                                  "inputBorderColor": "#c0c0c0",
                                  "itemHoverColor": "#bedb39",
                                  "selectedBackgroundColor": "#1f8a70",
                                  "selectedForegroundColor": "#ffe11a",
                                  "titleBarBackgroundColor": "#004358",
                                  "titleBarForegroundColor": "#ffe11a",
                                  "tooltipBackgroundColor": "#708090",
                                  "tooltipForegroundColor": "#ffffff",
                                  "transitionDelay": "0.5s",
                                }
                              }
                            >
                              <styled.div
                                className="ui-title-bar ripple"
                                disabled={false}
                                layout={5}
                                sizing="normal"
                                style={Object {}}
                                visible={true}
                              >
                                <StyledComponent
                                  className="ui-title-bar ripple"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-dnqmqq",
                                        "isStatic": false,
                                        "lastClassName": "dKSzzJ",
                                        "rules": Array [
                                          "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                                          [Function],
                                          ";
	flex-grow: 1;

	",
                                          [Function],
                                          "
	",
                                          [Function],
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-dnqmqq",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  layout={5}
                                  sizing="normal"
                                  style={Object {}}
                                  visible={true}
                                >
                                  <div
                                    className="ui-title-bar ripple sc-dnqmqq dKSzzJ"
                                    disabled={false}
                                    style={Object {}}
                                  >
                                    <Styled(Label)
                                      bottom=""
                                      className="ui-title"
                                      contentEditable={false}
                                      controlled={true}
                                      direction="right"
                                      disabled={false}
                                      err={null}
                                      errorMessage=""
                                      focus={false}
                                      height=""
                                      hiddenLeftButton={false}
                                      hiddenRightButton={true}
                                      href={
                                        Object {
                                          "selectHandler": [MockFunction],
                                        }
                                      }
                                      id=""
                                      layout={5}
                                      left=""
                                      leftButton={null}
                                      location="none"
                                      noedit={false}
                                      nohover={false}
                                      noripple={false}
                                      notheme={false}
                                      obj="Tab"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onClose={[Function]}
                                      onDoubleClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      onMouseOut={[Function]}
                                      orientation="top"
                                      padding=""
                                      rightButton={
                                        <Button
                                          bottom=""
                                          className=""
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={false}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          href={
                                            Object {
                                              "selectHandler": [MockFunction],
                                            }
                                          }
                                          iconName="times"
                                          iconStyle=""
                                          id=""
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Tab"
                                          onClick={[Function]}
                                          onClose={[Function]}
                                          orientation="top"
                                          padding=""
                                          selected={false}
                                          sizing="normal"
                                          style={Object {}}
                                          testing={true}
                                          theme={null}
                                          title="tab title"
                                          tooltip=""
                                          top=""
                                          visible={true}
                                          width=""
                                          xcss={null}
                                        >
                                          Test content
                                        </Button>
                                      }
                                      selected={false}
                                      sizing="normal"
                                      stacked={false}
                                      style={Object {}}
                                      testing={true}
                                      text="tab title"
                                      theme={null}
                                      title="tab title"
                                      tooltip=""
                                      top=""
                                      useedit={false}
                                      visible={true}
                                      widget={null}
                                      width=""
                                      xcss={
                                        Array [
                                          "
	text-align: left;
	flex: 5;
",
                                        ]
                                      }
                                    >
                                      <StyledComponent
                                        bottom=""
                                        className="ui-title"
                                        contentEditable={false}
                                        controlled={true}
                                        direction="right"
                                        disabled={false}
                                        err={null}
                                        errorMessage=""
                                        focus={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gZMcBi",
                                              "isStatic": false,
                                              "lastClassName": "gAxdUB",
                                              "rules": Array [
                                                "
	",
                                                "
	padding: ",
                                                [Function],
                                                ";

	",
                                                [Function],
                                                "
",
                                                "
",
                                              ],
                                            },
                                            "defaultStyles": Object {},
                                            "displayName": "Styled(Label)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gZMcBi",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                            Symbol(Symbol.hasInstance): [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        height=""
                                        hiddenLeftButton={false}
                                        hiddenRightButton={true}
                                        href={
                                          Object {
                                            "selectHandler": [MockFunction],
                                          }
                                        }
                                        id=""
                                        layout={5}
                                        left=""
                                        leftButton={null}
                                        location="none"
                                        noedit={false}
                                        nohover={false}
                                        noripple={false}
                                        notheme={false}
                                        obj="Tab"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onClose={[Function]}
                                        onDoubleClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        onMouseOut={[Function]}
                                        orientation="top"
                                        padding=""
                                        rightButton={
                                          <Button
                                            bottom=""
                                            className=""
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            href={
                                              Object {
                                                "selectHandler": [MockFunction],
                                              }
                                            }
                                            iconName="times"
                                            iconStyle=""
                                            id=""
                                            left=""
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Tab"
                                            onClick={[Function]}
                                            onClose={[Function]}
                                            orientation="top"
                                            padding=""
                                            selected={false}
                                            sizing="normal"
                                            style={Object {}}
                                            testing={true}
                                            theme={null}
                                            title="tab title"
                                            tooltip=""
                                            top=""
                                            visible={true}
                                            width=""
                                            xcss={null}
                                          >
                                            Test content
                                          </Button>
                                        }
                                        selected={false}
                                        sizing="normal"
                                        stacked={false}
                                        style={Object {}}
                                        testing={true}
                                        text="tab title"
                                        theme={null}
                                        title="tab title"
                                        tooltip=""
                                        top=""
                                        useedit={false}
                                        visible={true}
                                        widget={null}
                                        width=""
                                        xcss={
                                          Array [
                                            "
	text-align: left;
	flex: 5;
",
                                          ]
                                        }
                                      >
                                        <Label
                                          bottom=""
                                          className="ui-title sc-gZMcBi gAxdUB"
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={false}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          hiddenLeftButton={false}
                                          hiddenRightButton={true}
                                          href={
                                            Object {
                                              "selectHandler": [MockFunction],
                                            }
                                          }
                                          id=""
                                          layout={5}
                                          left=""
                                          leftButton={null}
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Tab"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onClose={[Function]}
                                          onDoubleClick={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyPress={[Function]}
                                          onMouseOut={[Function]}
                                          onUpdate={[Function]}
                                          orientation="top"
                                          padding=""
                                          rightButton={
                                            <Button
                                              bottom=""
                                              className=""
                                              contentEditable={false}
                                              controlled={true}
                                              direction="right"
                                              disabled={false}
                                              err={null}
                                              errorMessage=""
                                              focus={false}
                                              height=""
                                              href={
                                                Object {
                                                  "selectHandler": [MockFunction],
                                                }
                                              }
                                              iconName="times"
                                              iconStyle=""
                                              id=""
                                              left=""
                                              location="none"
                                              noedit={false}
                                              nohover={false}
                                              noripple={false}
                                              notheme={false}
                                              obj="Tab"
                                              onClick={[Function]}
                                              onClose={[Function]}
                                              orientation="top"
                                              padding=""
                                              selected={false}
                                              sizing="normal"
                                              style={Object {}}
                                              testing={true}
                                              theme={null}
                                              title="tab title"
                                              tooltip=""
                                              top=""
                                              visible={true}
                                              width=""
                                              xcss={null}
                                            >
                                              Test content
                                            </Button>
                                          }
                                          selected={false}
                                          sizing="normal"
                                          stacked={false}
                                          style={Object {}}
                                          testing={true}
                                          text="tab title"
                                          theme={null}
                                          title="tab title"
                                          tooltip=""
                                          top=""
                                          useedit={false}
                                          visible={true}
                                          widget={null}
                                          width=""
                                          xcss={
                                            Array [
                                              "
	text-align: left;
	flex: 5;
",
                                            ]
                                          }
                                        >
                                          <Wrapper
                                            bottom=""
                                            className="ui-title sc-gZMcBi gAxdUB"
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            hiddenLeftButton={false}
                                            hiddenRightButton={true}
                                            href={
                                              Object {
                                                "selectHandler": [MockFunction],
                                              }
                                            }
                                            id=""
                                            layout={5}
                                            left=""
                                            leftButton={null}
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Tab"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            onClose={[Function]}
                                            onDoubleClick={[Function]}
                                            onError={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyPress={[Function]}
                                            onMouseOut={[Function]}
                                            onUpdate={[Function]}
                                            orientation="top"
                                            padding=""
                                            reset={false}
                                            rightButton={
                                              <Button
                                                bottom=""
                                                className=""
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                href={
                                                  Object {
                                                    "selectHandler": [MockFunction],
                                                  }
                                                }
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="Tab"
                                                onClick={[Function]}
                                                onClose={[Function]}
                                                orientation="top"
                                                padding=""
                                                selected={false}
                                                sizing="normal"
                                                style={Object {}}
                                                testing={true}
                                                theme={null}
                                                title="tab title"
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                Test content
                                              </Button>
                                            }
                                            selected={false}
                                            sizing="normal"
                                            stacked={false}
                                            style={Object {}}
                                            testing={true}
                                            text="tab title"
                                            theme={null}
                                            title="tab title"
                                            tooltip=""
                                            top=""
                                            useedit={false}
                                            visible={true}
                                            widget={null}
                                            width=""
                                            xcss={
                                              Array [
                                                "
	text-align: left;
	flex: 5;
",
                                              ]
                                            }
                                          >
                                            <ThemeProvider
                                              theme={
                                                Object {
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#c0c0c0",
                                                  "color": "#000000",
                                                  "headerBackgroundColor": "#004358",
                                                  "headerForegroundColor": "#ffffff",
                                                  "headerHoverColor": "#ffe11a",
                                                  "hoverColor": "#c0c0c0",
                                                  "inputBorderColor": "#c0c0c0",
                                                  "itemHoverColor": "#bedb39",
                                                  "selectedBackgroundColor": "#1f8a70",
                                                  "selectedForegroundColor": "#ffe11a",
                                                  "titleBarBackgroundColor": "#004358",
                                                  "titleBarForegroundColor": "#ffe11a",
                                                  "tooltipBackgroundColor": "#708090",
                                                  "tooltipForegroundColor": "#ffffff",
                                                  "transitionDelay": "0.5s",
                                                }
                                              }
                                            >
                                              <styled.span
                                                className="ui-label ui-title sc-gZMcBi gAxdUB"
                                                contentEditable={false}
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDoubleClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyPress={[Function]}
                                                sizing="normal"
                                                style={Object {}}
                                                suppressContentEditableWarning={true}
                                                visible={true}
                                              >
                                                <StyledComponent
                                                  className="ui-label ui-title sc-gZMcBi gAxdUB"
                                                  contentEditable={false}
                                                  disabled={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htoDjs",
                                                        "isStatic": false,
                                                        "lastClassName": "korbdG",
                                                        "rules": Array [
                                                          "
	background-color: inherit;

	",
                                                          [Function],
                                                          "
	",
                                                          [Function],
                                                          "
	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "displayName": "styled.span",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htoDjs",
                                                      "target": "span",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDoubleClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyPress={[Function]}
                                                  sizing="normal"
                                                  style={Object {}}
                                                  suppressContentEditableWarning={true}
                                                  visible={true}
                                                >
                                                  <span
                                                    className="ui-label ui-title sc-gZMcBi gAxdUB sc-htoDjs korbdG"
                                                    contentEditable={false}
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDoubleClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyPress={[Function]}
                                                    style={Object {}}
                                                    suppressContentEditableWarning={true}
                                                  >
                                                    tab title
                                                  </span>
                                                </StyledComponent>
                                              </styled.span>
                                            </ThemeProvider>
                                          </Wrapper>
                                        </Label>
                                      </StyledComponent>
                                    </Styled(Label)>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </ThemeProvider>
                          </Wrapper>
                        </Title>
                        <styled.div
                          className="ui-item-button"
                          hiddenRightButton={true}
                        >
                          <StyledComponent
                            className="ui-item-button"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-VigVT",
                                  "isStatic": false,
                                  "lastClassName": "eObhFe",
                                  "rules": Array [
                                    "
	display: inline-flex;
	position: relative;
	width: ",
                                    [Function],
                                    ";

	",
                                    [Function],
                                    ";
	",
                                    [Function],
                                    "

	> i, > .ui-button-circle, > .ui-option {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}

	> .ui-option {
		display: inline-flex;
		flex: 1;
	}
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-VigVT",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            hiddenRightButton={true}
                          >
                            <div
                              className="ui-item-button sc-VigVT eObhFe"
                            >
                              <Button
                                bottom=""
                                className=""
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                href={
                                  Object {
                                    "selectHandler": [MockFunction],
                                  }
                                }
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Tab"
                                onClick={[Function]}
                                onClose={[Function]}
                                orientation="top"
                                padding=""
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                theme={null}
                                title="tab title"
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <Wrapper
                                  bottom=""
                                  className=""
                                  contentEditable={false}
                                  controlled={true}
                                  direction="right"
                                  disabled={false}
                                  err={null}
                                  errorMessage=""
                                  focus={false}
                                  height=""
                                  href={
                                    Object {
                                      "selectHandler": [MockFunction],
                                    }
                                  }
                                  iconName="times"
                                  iconStyle=""
                                  id=""
                                  left=""
                                  location="none"
                                  noedit={false}
                                  nohover={false}
                                  noripple={false}
                                  notheme={false}
                                  obj="Tab"
                                  onClick={[Function]}
                                  onClose={[Function]}
                                  onError={[Function]}
                                  orientation="top"
                                  padding=""
                                  reset={false}
                                  selected={false}
                                  sizing="normal"
                                  style={Object {}}
                                  testing={true}
                                  theme={null}
                                  title="tab title"
                                  tooltip=""
                                  top=""
                                  visible={true}
                                  width=""
                                  xcss={null}
                                >
                                  <ThemeProvider
                                    theme={
                                      Object {
                                        "backgroundColor": "#ffffff",
                                        "borderColor": "#c0c0c0",
                                        "color": "#000000",
                                        "headerBackgroundColor": "#004358",
                                        "headerForegroundColor": "#ffffff",
                                        "headerHoverColor": "#ffe11a",
                                        "hoverColor": "#c0c0c0",
                                        "inputBorderColor": "#c0c0c0",
                                        "itemHoverColor": "#bedb39",
                                        "selectedBackgroundColor": "#1f8a70",
                                        "selectedForegroundColor": "#ffe11a",
                                        "titleBarBackgroundColor": "#004358",
                                        "titleBarForegroundColor": "#ffe11a",
                                        "tooltipBackgroundColor": "#708090",
                                        "tooltipForegroundColor": "#ffffff",
                                        "transitionDelay": "0.5s",
                                      }
                                    }
                                  >
                                    <styled.div
                                      className="ui-button ripple"
                                      disabled={false}
                                      id="Button-0"
                                      onClick={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      visible={true}
                                    >
                                      <StyledComponent
                                        className="ui-button ripple"
                                        disabled={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gzVnrw",
                                              "isStatic": false,
                                              "lastClassName": "bsgMqy",
                                              "rules": Array [
                                                "
	",
                                                "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                [Function],
                                                " ",
                                                [Function],
                                                ";
	}

	",
                                                [Function],
                                                "
	",
                                                [Function],
                                                "
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gzVnrw",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="Button-0"
                                        onClick={[Function]}
                                        sizing="normal"
                                        style={Object {}}
                                        visible={true}
                                      >
                                        <div
                                          className="ui-button ripple sc-gzVnrw bsgMqy"
                                          disabled={false}
                                          id="Button-0"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <Icon
                                            bottom=""
                                            className=""
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            iconName="times"
                                            id=""
                                            imageFile=""
                                            left=""
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Icon"
                                            padding=""
                                            selected={false}
                                            sizing="normal"
                                            style={Object {}}
                                            testing={true}
                                            theme={null}
                                            tooltip=""
                                            top=""
                                            visible={true}
                                            width=""
                                            xcss={null}
                                          >
                                            <Wrapper
                                              bottom=""
                                              className=""
                                              contentEditable={false}
                                              controlled={true}
                                              direction="right"
                                              disabled={false}
                                              err={null}
                                              errorMessage=""
                                              focus={false}
                                              height=""
                                              iconName="times"
                                              id=""
                                              imageFile=""
                                              left=""
                                              location="none"
                                              noedit={false}
                                              nohover={false}
                                              noripple={false}
                                              notheme={false}
                                              obj="Icon"
                                              onError={[Function]}
                                              padding=""
                                              reset={false}
                                              selected={false}
                                              sizing="normal"
                                              style={Object {}}
                                              testing={true}
                                              theme={null}
                                              tooltip=""
                                              top=""
                                              visible={true}
                                              width=""
                                              xcss={null}
                                            >
                                              <ThemeProvider
                                                theme={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#c0c0c0",
                                                    "color": "#000000",
                                                    "headerBackgroundColor": "#004358",
                                                    "headerForegroundColor": "#ffffff",
                                                    "headerHoverColor": "#ffe11a",
                                                    "hoverColor": "#c0c0c0",
                                                    "inputBorderColor": "#c0c0c0",
                                                    "itemHoverColor": "#bedb39",
                                                    "selectedBackgroundColor": "#1f8a70",
                                                    "selectedForegroundColor": "#ffe11a",
                                                    "titleBarBackgroundColor": "#004358",
                                                    "titleBarForegroundColor": "#ffe11a",
                                                    "tooltipBackgroundColor": "#708090",
                                                    "tooltipForegroundColor": "#ffffff",
                                                    "transitionDelay": "0.5s",
                                                  }
                                                }
                                              >
                                                <styled.i
                                                  bottom=""
                                                  className="ui-icon fa fa-fw fa-times"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  height=""
                                                  iconName="times"
                                                  id=""
                                                  imageFile=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="Icon"
                                                  padding=""
                                                  selected={false}
                                                  sizing="normal"
                                                  style={Object {}}
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <StyledComponent
                                                    bottom=""
                                                    className="ui-icon fa fa-fw fa-times"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "hBOHvv",
                                                          "rules": Array [
                                                            "
	text-align: center;
	",
                                                            [Function],
                                                            "
	",
                                                            [Function],
                                                            "
	",
                                                            [Function],
                                                            "
	",
                                                            [Function],
                                                            "
",
                                                          ],
                                                        },
                                                        "displayName": "styled.i",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "i",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    height=""
                                                    iconName="times"
                                                    id=""
                                                    imageFile=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Icon"
                                                    padding=""
                                                    selected={false}
                                                    sizing="normal"
                                                    style={Object {}}
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <i
                                                      className="ui-icon fa fa-fw fa-times sc-bwzfXH hBOHvv"
                                                      contentEditable={false}
                                                      direction="right"
                                                      disabled={false}
                                                      height=""
                                                      id=""
                                                      selected={false}
                                                      style={Object {}}
                                                      width=""
                                                    />
                                                  </StyledComponent>
                                                </styled.i>
                                              </ThemeProvider>
                                            </Wrapper>
                                          </Icon>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                  </ThemeProvider>
                                </Wrapper>
                              </Button>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </li>
                    </StyledComponent>
                  </styled.li>
                </ThemeProvider>
              </Wrapper>
            </Item>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Tab>
`;

exports[`Test the close click handler on a Tab instance 1`] = `
<Tab
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  href={
    Object {
      "hiddenTabHandler": [MockFunction],
    }
  }
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Tab"
  onClick={[Function]}
  onClose={[MockFunction]}
  orientation="top"
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="tab title"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    href={
      Object {
        "hiddenTabHandler": [MockFunction],
      }
    }
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Tab"
    onClick={[Function]}
    onClose={[MockFunction]}
    onError={[Function]}
    orientation="top"
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    title="tab title"
    tooltip=""
    top=""
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-tab"
        disabled={false}
        selected={false}
        sizing="normal"
        style={
          Object {
            "minWidth": "120px",
            "width": "",
          }
        }
        visible={true}
        xcss={
          Array [
            "
	border-right: solid 1px ",
            [Function],
            ";
	border-top: solid 1px ",
            [Function],
            ";

	&:first-child {
		border-left: solid 1px ",
            [Function],
            ";
	}
",
          ]
        }
      >
        <StyledComponent
          className="ui-tab"
          disabled={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jTzLTM",
                "isStatic": false,
                "lastClassName": "GBEEd",
                "rules": Array [
                  "
	cursor: default;
	display: inline-block;
	flex-grow: unset;

	",
                  [Function],
                  "

	&:hover .ui-button {
		color: ",
                  [Function],
                  ";
		background-color: ",
                  [Function],
                  ";
		display: flex;
		opacity: 1.0;
	}

	.ui-label {
		padding-left: 4px;
	}

	.ui-button:hover {
		background-color: ",
                  "#d9534f",
                  " !important;
	}

	.ui-button {
		display: none;
		opacity: 0;
		animation: fadeIn ",
                  [Function],
                  ";
	}

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jTzLTM",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          selected={false}
          sizing="normal"
          style={
            Object {
              "minWidth": "120px",
              "width": "",
            }
          }
          visible={true}
          xcss={
            Array [
              "
	border-right: solid 1px ",
              [Function],
              ";
	border-top: solid 1px ",
              [Function],
              ";

	&:first-child {
		border-left: solid 1px ",
              [Function],
              ";
	}
",
            ]
          }
        >
          <div
            className="ui-tab sc-jTzLTM GBEEd"
            disabled={false}
            selected={false}
            style={
              Object {
                "minWidth": "120px",
                "width": "",
              }
            }
          >
            <Item
              bottom=""
              className=""
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              hiddenLeftButton={false}
              hiddenRightButton={true}
              href={
                Object {
                  "hiddenTabHandler": [MockFunction],
                }
              }
              id=""
              layout={5}
              left=""
              leftButton={null}
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Tab"
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onClose={[MockFunction]}
              onDoubleClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onMouseOut={[Function]}
              onUpdate={[Function]}
              orientation="top"
              padding=""
              rightButton={
                <Button
                  bottom=""
                  className=""
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  href={
                    Object {
                      "hiddenTabHandler": [MockFunction],
                    }
                  }
                  iconName="times"
                  iconStyle=""
                  id=""
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Tab"
                  onClick={[Function]}
                  onClose={[MockFunction]}
                  orientation="top"
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  title="tab title"
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  Test content
                </Button>
              }
              selected={false}
              sizing="normal"
              stacked={false}
              style={Object {}}
              testing={true}
              theme={null}
              title="tab title"
              tooltip=""
              top=""
              useedit={false}
              visible={true}
              widget={null}
              width=""
              xcss={null}
            >
              <Wrapper
                bottom=""
                className=""
                contentEditable={false}
                controlled={true}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                focus={false}
                height=""
                hiddenLeftButton={false}
                hiddenRightButton={true}
                href={
                  Object {
                    "hiddenTabHandler": [MockFunction],
                  }
                }
                id=""
                layout={5}
                left=""
                leftButton={null}
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Tab"
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onClose={[MockFunction]}
                onDoubleClick={[Function]}
                onError={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                onMouseOut={[Function]}
                onUpdate={[Function]}
                orientation="top"
                padding=""
                reset={false}
                rightButton={
                  <Button
                    bottom=""
                    className=""
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    href={
                      Object {
                        "hiddenTabHandler": [MockFunction],
                      }
                    }
                    iconName="times"
                    iconStyle=""
                    id=""
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Tab"
                    onClick={[Function]}
                    onClose={[MockFunction]}
                    orientation="top"
                    padding=""
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    title="tab title"
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    Test content
                  </Button>
                }
                selected={false}
                sizing="normal"
                stacked={false}
                style={Object {}}
                testing={true}
                theme={null}
                title="tab title"
                tooltip=""
                top=""
                useedit={false}
                visible={true}
                widget={null}
                width=""
                xcss={null}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#c0c0c0",
                      "color": "#000000",
                      "headerBackgroundColor": "#004358",
                      "headerForegroundColor": "#ffffff",
                      "headerHoverColor": "#ffe11a",
                      "hoverColor": "#c0c0c0",
                      "inputBorderColor": "#c0c0c0",
                      "itemHoverColor": "#bedb39",
                      "selectedBackgroundColor": "#1f8a70",
                      "selectedForegroundColor": "#ffe11a",
                      "titleBarBackgroundColor": "#004358",
                      "titleBarForegroundColor": "#ffe11a",
                      "tooltipBackgroundColor": "#708090",
                      "tooltipForegroundColor": "#ffffff",
                      "transitionDelay": "0.5s",
                    }
                  }
                >
                  <styled.li
                    className="ui-item"
                    id=""
                    nohover={false}
                    onBlur={[Function]}
                    onDoubleClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyPress={[Function]}
                    onMouseOut={[Function]}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                  >
                    <StyledComponent
                      className="ui-item"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-gqjmRU",
                            "isStatic": false,
                            "lastClassName": "cGvDUY",
                            "rules": Array [
                              "
	background-color: ",
                              [Function],
                              ";
	color: ",
                              [Function],
                              ";
	cursor: default;
	display: flex;

	",
                              [Function],
                              "

	&:hover .ui-item-button {
		display: inline-flex;
		opacity: 1.0;
	}
",
                            ],
                          },
                          "displayName": "styled.li",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-gqjmRU",
                          "target": "li",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id=""
                      nohover={false}
                      onBlur={[Function]}
                      onDoubleClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyPress={[Function]}
                      onMouseOut={[Function]}
                      selected={false}
                      sizing="normal"
                      style={Object {}}
                    >
                      <li
                        className="ui-item sc-gqjmRU cGvDUY"
                        id=""
                        onBlur={[Function]}
                        onDoubleClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyPress={[Function]}
                        onMouseOut={[Function]}
                        selected={false}
                        style={Object {}}
                      >
                        <Title
                          bottom=""
                          className=""
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          focus={false}
                          height=""
                          hiddenLeftButton={false}
                          hiddenRightButton={true}
                          href={
                            Object {
                              "hiddenTabHandler": [MockFunction],
                            }
                          }
                          id=""
                          layout={5}
                          left=""
                          leftButton={null}
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={false}
                          notheme={false}
                          obj="Tab"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onClick={[Function]}
                          onClose={[MockFunction]}
                          onDoubleClick={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onMouseOut={[Function]}
                          onUpdate={[Function]}
                          orientation="top"
                          padding=""
                          rightButton={
                            <Button
                              bottom=""
                              className=""
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              href={
                                Object {
                                  "hiddenTabHandler": [MockFunction],
                                }
                              }
                              iconName="times"
                              iconStyle=""
                              id=""
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Tab"
                              onClick={[Function]}
                              onClose={[MockFunction]}
                              orientation="top"
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              theme={null}
                              title="tab title"
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              Test content
                            </Button>
                          }
                          selected={false}
                          sizing="normal"
                          stacked={false}
                          style={Object {}}
                          testing={true}
                          theme={null}
                          title="tab title"
                          tooltip=""
                          top=""
                          useedit={false}
                          visible={true}
                          widget={null}
                          width=""
                          xcss={null}
                        >
                          <Wrapper
                            bottom=""
                            className=""
                            contentEditable={false}
                            controlled={true}
                            direction="right"
                            disabled={false}
                            err={null}
                            errorMessage=""
                            focus={false}
                            height=""
                            hiddenLeftButton={false}
                            hiddenRightButton={true}
                            href={
                              Object {
                                "hiddenTabHandler": [MockFunction],
                              }
                            }
                            id=""
                            layout={5}
                            left=""
                            leftButton={null}
                            location="none"
                            noedit={false}
                            nohover={false}
                            noripple={false}
                            notheme={false}
                            obj="Tab"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onClick={[Function]}
                            onClose={[MockFunction]}
                            onDoubleClick={[Function]}
                            onError={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onMouseOut={[Function]}
                            onUpdate={[Function]}
                            orientation="top"
                            padding=""
                            reset={false}
                            rightButton={
                              <Button
                                bottom=""
                                className=""
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                href={
                                  Object {
                                    "hiddenTabHandler": [MockFunction],
                                  }
                                }
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Tab"
                                onClick={[Function]}
                                onClose={[MockFunction]}
                                orientation="top"
                                padding=""
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                theme={null}
                                title="tab title"
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                Test content
                              </Button>
                            }
                            selected={false}
                            sizing="normal"
                            stacked={false}
                            style={Object {}}
                            testing={true}
                            theme={null}
                            title="tab title"
                            tooltip=""
                            top=""
                            useedit={false}
                            visible={true}
                            widget={null}
                            width=""
                            xcss={null}
                          >
                            <ThemeProvider
                              theme={
                                Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#c0c0c0",
                                  "color": "#000000",
                                  "headerBackgroundColor": "#004358",
                                  "headerForegroundColor": "#ffffff",
                                  "headerHoverColor": "#ffe11a",
                                  "hoverColor": "#c0c0c0",
                                  "inputBorderColor": "#c0c0c0",
                                  "itemHoverColor": "#bedb39",
                                  "selectedBackgroundColor": "#1f8a70",
                                  "selectedForegroundColor": "#ffe11a",
                                  "titleBarBackgroundColor": "#004358",
                                  "titleBarForegroundColor": "#ffe11a",
                                  "tooltipBackgroundColor": "#708090",
                                  "tooltipForegroundColor": "#ffffff",
                                  "transitionDelay": "0.5s",
                                }
                              }
                            >
                              <styled.div
                                className="ui-title-bar ripple"
                                disabled={false}
                                layout={5}
                                sizing="normal"
                                style={Object {}}
                                visible={true}
                              >
                                <StyledComponent
                                  className="ui-title-bar ripple"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-dnqmqq",
                                        "isStatic": false,
                                        "lastClassName": "dKSzzJ",
                                        "rules": Array [
                                          "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                                          [Function],
                                          ";
	flex-grow: 1;

	",
                                          [Function],
                                          "
	",
                                          [Function],
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-dnqmqq",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  layout={5}
                                  sizing="normal"
                                  style={Object {}}
                                  visible={true}
                                >
                                  <div
                                    className="ui-title-bar ripple sc-dnqmqq dKSzzJ"
                                    disabled={false}
                                    style={Object {}}
                                  >
                                    <Styled(Label)
                                      bottom=""
                                      className="ui-title"
                                      contentEditable={false}
                                      controlled={true}
                                      direction="right"
                                      disabled={false}
                                      err={null}
                                      errorMessage=""
                                      focus={false}
                                      height=""
                                      hiddenLeftButton={false}
                                      hiddenRightButton={true}
                                      href={
                                        Object {
                                          "hiddenTabHandler": [MockFunction],
                                        }
                                      }
                                      id=""
                                      layout={5}
                                      left=""
                                      leftButton={null}
                                      location="none"
                                      noedit={false}
                                      nohover={false}
                                      noripple={false}
                                      notheme={false}
                                      obj="Tab"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onClose={[MockFunction]}
                                      onDoubleClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      onMouseOut={[Function]}
                                      orientation="top"
                                      padding=""
                                      rightButton={
                                        <Button
                                          bottom=""
                                          className=""
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={false}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          href={
                                            Object {
                                              "hiddenTabHandler": [MockFunction],
                                            }
                                          }
                                          iconName="times"
                                          iconStyle=""
                                          id=""
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Tab"
                                          onClick={[Function]}
                                          onClose={[MockFunction]}
                                          orientation="top"
                                          padding=""
                                          selected={false}
                                          sizing="normal"
                                          style={Object {}}
                                          testing={true}
                                          theme={null}
                                          title="tab title"
                                          tooltip=""
                                          top=""
                                          visible={true}
                                          width=""
                                          xcss={null}
                                        >
                                          Test content
                                        </Button>
                                      }
                                      selected={false}
                                      sizing="normal"
                                      stacked={false}
                                      style={Object {}}
                                      testing={true}
                                      text="tab title"
                                      theme={null}
                                      title="tab title"
                                      tooltip=""
                                      top=""
                                      useedit={false}
                                      visible={true}
                                      widget={null}
                                      width=""
                                      xcss={
                                        Array [
                                          "
	text-align: left;
	flex: 5;
",
                                        ]
                                      }
                                    >
                                      <StyledComponent
                                        bottom=""
                                        className="ui-title"
                                        contentEditable={false}
                                        controlled={true}
                                        direction="right"
                                        disabled={false}
                                        err={null}
                                        errorMessage=""
                                        focus={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gZMcBi",
                                              "isStatic": false,
                                              "lastClassName": "gAxdUB",
                                              "rules": Array [
                                                "
	",
                                                "
	padding: ",
                                                [Function],
                                                ";

	",
                                                [Function],
                                                "
",
                                                "
",
                                              ],
                                            },
                                            "defaultStyles": Object {},
                                            "displayName": "Styled(Label)",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gZMcBi",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                            Symbol(Symbol.hasInstance): [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        height=""
                                        hiddenLeftButton={false}
                                        hiddenRightButton={true}
                                        href={
                                          Object {
                                            "hiddenTabHandler": [MockFunction],
                                          }
                                        }
                                        id=""
                                        layout={5}
                                        left=""
                                        leftButton={null}
                                        location="none"
                                        noedit={false}
                                        nohover={false}
                                        noripple={false}
                                        notheme={false}
                                        obj="Tab"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onClose={[MockFunction]}
                                        onDoubleClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        onMouseOut={[Function]}
                                        orientation="top"
                                        padding=""
                                        rightButton={
                                          <Button
                                            bottom=""
                                            className=""
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            href={
                                              Object {
                                                "hiddenTabHandler": [MockFunction],
                                              }
                                            }
                                            iconName="times"
                                            iconStyle=""
                                            id=""
                                            left=""
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Tab"
                                            onClick={[Function]}
                                            onClose={[MockFunction]}
                                            orientation="top"
                                            padding=""
                                            selected={false}
                                            sizing="normal"
                                            style={Object {}}
                                            testing={true}
                                            theme={null}
                                            title="tab title"
                                            tooltip=""
                                            top=""
                                            visible={true}
                                            width=""
                                            xcss={null}
                                          >
                                            Test content
                                          </Button>
                                        }
                                        selected={false}
                                        sizing="normal"
                                        stacked={false}
                                        style={Object {}}
                                        testing={true}
                                        text="tab title"
                                        theme={null}
                                        title="tab title"
                                        tooltip=""
                                        top=""
                                        useedit={false}
                                        visible={true}
                                        widget={null}
                                        width=""
                                        xcss={
                                          Array [
                                            "
	text-align: left;
	flex: 5;
",
                                          ]
                                        }
                                      >
                                        <Label
                                          bottom=""
                                          className="ui-title sc-gZMcBi gAxdUB"
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={false}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          hiddenLeftButton={false}
                                          hiddenRightButton={true}
                                          href={
                                            Object {
                                              "hiddenTabHandler": [MockFunction],
                                            }
                                          }
                                          id=""
                                          layout={5}
                                          left=""
                                          leftButton={null}
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Tab"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onClick={[Function]}
                                          onClose={[MockFunction]}
                                          onDoubleClick={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyPress={[Function]}
                                          onMouseOut={[Function]}
                                          onUpdate={[Function]}
                                          orientation="top"
                                          padding=""
                                          rightButton={
                                            <Button
                                              bottom=""
                                              className=""
                                              contentEditable={false}
                                              controlled={true}
                                              direction="right"
                                              disabled={false}
                                              err={null}
                                              errorMessage=""
                                              focus={false}
                                              height=""
                                              href={
                                                Object {
                                                  "hiddenTabHandler": [MockFunction],
                                                }
                                              }
                                              iconName="times"
                                              iconStyle=""
                                              id=""
                                              left=""
                                              location="none"
                                              noedit={false}
                                              nohover={false}
                                              noripple={false}
                                              notheme={false}
                                              obj="Tab"
                                              onClick={[Function]}
                                              onClose={[MockFunction]}
                                              orientation="top"
                                              padding=""
                                              selected={false}
                                              sizing="normal"
                                              style={Object {}}
                                              testing={true}
                                              theme={null}
                                              title="tab title"
                                              tooltip=""
                                              top=""
                                              visible={true}
                                              width=""
                                              xcss={null}
                                            >
                                              Test content
                                            </Button>
                                          }
                                          selected={false}
                                          sizing="normal"
                                          stacked={false}
                                          style={Object {}}
                                          testing={true}
                                          text="tab title"
                                          theme={null}
                                          title="tab title"
                                          tooltip=""
                                          top=""
                                          useedit={false}
                                          visible={true}
                                          widget={null}
                                          width=""
                                          xcss={
                                            Array [
                                              "
	text-align: left;
	flex: 5;
",
                                            ]
                                          }
                                        >
                                          <Wrapper
                                            bottom=""
                                            className="ui-title sc-gZMcBi gAxdUB"
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            hiddenLeftButton={false}
                                            hiddenRightButton={true}
                                            href={
                                              Object {
                                                "hiddenTabHandler": [MockFunction],
                                              }
                                            }
                                            id=""
                                            layout={5}
                                            left=""
                                            leftButton={null}
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Tab"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onClick={[Function]}
                                            onClose={[MockFunction]}
                                            onDoubleClick={[Function]}
                                            onError={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyPress={[Function]}
                                            onMouseOut={[Function]}
                                            onUpdate={[Function]}
                                            orientation="top"
                                            padding=""
                                            reset={false}
                                            rightButton={
                                              <Button
                                                bottom=""
                                                className=""
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={false}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                height=""
                                                href={
                                                  Object {
                                                    "hiddenTabHandler": [MockFunction],
                                                  }
                                                }
                                                iconName="times"
                                                iconStyle=""
                                                id=""
                                                left=""
                                                location="none"
                                                noedit={false}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="Tab"
                                                onClick={[Function]}
                                                onClose={[MockFunction]}
                                                orientation="top"
                                                padding=""
                                                selected={false}
                                                sizing="normal"
                                                style={Object {}}
                                                testing={true}
                                                theme={null}
                                                title="tab title"
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                width=""
                                                xcss={null}
                                              >
                                                Test content
                                              </Button>
                                            }
                                            selected={false}
                                            sizing="normal"
                                            stacked={false}
                                            style={Object {}}
                                            testing={true}
                                            text="tab title"
                                            theme={null}
                                            title="tab title"
                                            tooltip=""
                                            top=""
                                            useedit={false}
                                            visible={true}
                                            widget={null}
                                            width=""
                                            xcss={
                                              Array [
                                                "
	text-align: left;
	flex: 5;
",
                                              ]
                                            }
                                          >
                                            <ThemeProvider
                                              theme={
                                                Object {
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#c0c0c0",
                                                  "color": "#000000",
                                                  "headerBackgroundColor": "#004358",
                                                  "headerForegroundColor": "#ffffff",
                                                  "headerHoverColor": "#ffe11a",
                                                  "hoverColor": "#c0c0c0",
                                                  "inputBorderColor": "#c0c0c0",
                                                  "itemHoverColor": "#bedb39",
                                                  "selectedBackgroundColor": "#1f8a70",
                                                  "selectedForegroundColor": "#ffe11a",
                                                  "titleBarBackgroundColor": "#004358",
                                                  "titleBarForegroundColor": "#ffe11a",
                                                  "tooltipBackgroundColor": "#708090",
                                                  "tooltipForegroundColor": "#ffffff",
                                                  "transitionDelay": "0.5s",
                                                }
                                              }
                                            >
                                              <styled.span
                                                className="ui-label ui-title sc-gZMcBi gAxdUB"
                                                contentEditable={false}
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDoubleClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyPress={[Function]}
                                                sizing="normal"
                                                style={Object {}}
                                                suppressContentEditableWarning={true}
                                                visible={true}
                                              >
                                                <StyledComponent
                                                  className="ui-label ui-title sc-gZMcBi gAxdUB"
                                                  contentEditable={false}
                                                  disabled={false}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htoDjs",
                                                        "isStatic": false,
                                                        "lastClassName": "korbdG",
                                                        "rules": Array [
                                                          "
	background-color: inherit;

	",
                                                          [Function],
                                                          "
	",
                                                          [Function],
                                                          "
	",
                                                          [Function],
                                                          "
",
                                                        ],
                                                      },
                                                      "displayName": "styled.span",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htoDjs",
                                                      "target": "span",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDoubleClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyPress={[Function]}
                                                  sizing="normal"
                                                  style={Object {}}
                                                  suppressContentEditableWarning={true}
                                                  visible={true}
                                                >
                                                  <span
                                                    className="ui-label ui-title sc-gZMcBi gAxdUB sc-htoDjs korbdG"
                                                    contentEditable={false}
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDoubleClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyPress={[Function]}
                                                    style={Object {}}
                                                    suppressContentEditableWarning={true}
                                                  >
                                                    tab title
                                                  </span>
                                                </StyledComponent>
                                              </styled.span>
                                            </ThemeProvider>
                                          </Wrapper>
                                        </Label>
                                      </StyledComponent>
                                    </Styled(Label)>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </ThemeProvider>
                          </Wrapper>
                        </Title>
                        <styled.div
                          className="ui-item-button"
                          hiddenRightButton={true}
                        >
                          <StyledComponent
                            className="ui-item-button"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-VigVT",
                                  "isStatic": false,
                                  "lastClassName": "eObhFe",
                                  "rules": Array [
                                    "
	display: inline-flex;
	position: relative;
	width: ",
                                    [Function],
                                    ";

	",
                                    [Function],
                                    ";
	",
                                    [Function],
                                    "

	> i, > .ui-button-circle, > .ui-option {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}

	> .ui-option {
		display: inline-flex;
		flex: 1;
	}
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-VigVT",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            hiddenRightButton={true}
                          >
                            <div
                              className="ui-item-button sc-VigVT eObhFe"
                            >
                              <Button
                                bottom=""
                                className=""
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                height=""
                                href={
                                  Object {
                                    "hiddenTabHandler": [MockFunction],
                                  }
                                }
                                iconName="times"
                                iconStyle=""
                                id=""
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Tab"
                                onClick={[Function]}
                                onClose={[MockFunction]}
                                orientation="top"
                                padding=""
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                theme={null}
                                title="tab title"
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <Wrapper
                                  bottom=""
                                  className=""
                                  contentEditable={false}
                                  controlled={true}
                                  direction="right"
                                  disabled={false}
                                  err={null}
                                  errorMessage=""
                                  focus={false}
                                  height=""
                                  href={
                                    Object {
                                      "hiddenTabHandler": [MockFunction],
                                    }
                                  }
                                  iconName="times"
                                  iconStyle=""
                                  id=""
                                  left=""
                                  location="none"
                                  noedit={false}
                                  nohover={false}
                                  noripple={false}
                                  notheme={false}
                                  obj="Tab"
                                  onClick={[Function]}
                                  onClose={[MockFunction]}
                                  onError={[Function]}
                                  orientation="top"
                                  padding=""
                                  reset={false}
                                  selected={false}
                                  sizing="normal"
                                  style={Object {}}
                                  testing={true}
                                  theme={null}
                                  title="tab title"
                                  tooltip=""
                                  top=""
                                  visible={true}
                                  width=""
                                  xcss={null}
                                >
                                  <ThemeProvider
                                    theme={
                                      Object {
                                        "backgroundColor": "#ffffff",
                                        "borderColor": "#c0c0c0",
                                        "color": "#000000",
                                        "headerBackgroundColor": "#004358",
                                        "headerForegroundColor": "#ffffff",
                                        "headerHoverColor": "#ffe11a",
                                        "hoverColor": "#c0c0c0",
                                        "inputBorderColor": "#c0c0c0",
                                        "itemHoverColor": "#bedb39",
                                        "selectedBackgroundColor": "#1f8a70",
                                        "selectedForegroundColor": "#ffe11a",
                                        "titleBarBackgroundColor": "#004358",
                                        "titleBarForegroundColor": "#ffe11a",
                                        "tooltipBackgroundColor": "#708090",
                                        "tooltipForegroundColor": "#ffffff",
                                        "transitionDelay": "0.5s",
                                      }
                                    }
                                  >
                                    <styled.div
                                      className="ui-button ripple"
                                      disabled={false}
                                      id="Button-0"
                                      onClick={[Function]}
                                      sizing="normal"
                                      style={Object {}}
                                      visible={true}
                                    >
                                      <StyledComponent
                                        className="ui-button ripple"
                                        disabled={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gzVnrw",
                                              "isStatic": false,
                                              "lastClassName": "bsgMqy",
                                              "rules": Array [
                                                "
	",
                                                "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                [Function],
                                                " ",
                                                [Function],
                                                ";
	}

	",
                                                [Function],
                                                "
	",
                                                [Function],
                                                "
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gzVnrw",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="Button-0"
                                        onClick={[Function]}
                                        sizing="normal"
                                        style={Object {}}
                                        visible={true}
                                      >
                                        <div
                                          className="ui-button ripple sc-gzVnrw bsgMqy"
                                          disabled={false}
                                          id="Button-0"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <Icon
                                            bottom=""
                                            className=""
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            height=""
                                            iconName="times"
                                            id=""
                                            imageFile=""
                                            left=""
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Icon"
                                            padding=""
                                            selected={false}
                                            sizing="normal"
                                            style={Object {}}
                                            testing={true}
                                            theme={null}
                                            tooltip=""
                                            top=""
                                            visible={true}
                                            width=""
                                            xcss={null}
                                          >
                                            <Wrapper
                                              bottom=""
                                              className=""
                                              contentEditable={false}
                                              controlled={true}
                                              direction="right"
                                              disabled={false}
                                              err={null}
                                              errorMessage=""
                                              focus={false}
                                              height=""
                                              iconName="times"
                                              id=""
                                              imageFile=""
                                              left=""
                                              location="none"
                                              noedit={false}
                                              nohover={false}
                                              noripple={false}
                                              notheme={false}
                                              obj="Icon"
                                              onError={[Function]}
                                              padding=""
                                              reset={false}
                                              selected={false}
                                              sizing="normal"
                                              style={Object {}}
                                              testing={true}
                                              theme={null}
                                              tooltip=""
                                              top=""
                                              visible={true}
                                              width=""
                                              xcss={null}
                                            >
                                              <ThemeProvider
                                                theme={
                                                  Object {
                                                    "backgroundColor": "#ffffff",
                                                    "borderColor": "#c0c0c0",
                                                    "color": "#000000",
                                                    "headerBackgroundColor": "#004358",
                                                    "headerForegroundColor": "#ffffff",
                                                    "headerHoverColor": "#ffe11a",
                                                    "hoverColor": "#c0c0c0",
                                                    "inputBorderColor": "#c0c0c0",
                                                    "itemHoverColor": "#bedb39",
                                                    "selectedBackgroundColor": "#1f8a70",
                                                    "selectedForegroundColor": "#ffe11a",
                                                    "titleBarBackgroundColor": "#004358",
                                                    "titleBarForegroundColor": "#ffe11a",
                                                    "tooltipBackgroundColor": "#708090",
                                                    "tooltipForegroundColor": "#ffffff",
                                                    "transitionDelay": "0.5s",
                                                  }
                                                }
                                              >
                                                <styled.i
                                                  bottom=""
                                                  className="ui-icon fa fa-fw fa-times"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={false}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  height=""
                                                  iconName="times"
                                                  id=""
                                                  imageFile=""
                                                  left=""
                                                  location="none"
                                                  noedit={false}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="Icon"
                                                  padding=""
                                                  selected={false}
                                                  sizing="normal"
                                                  style={Object {}}
                                                  testing={true}
                                                  theme={null}
                                                  tooltip=""
                                                  top=""
                                                  visible={true}
                                                  width=""
                                                  xcss={null}
                                                >
                                                  <StyledComponent
                                                    bottom=""
                                                    className="ui-icon fa fa-fw fa-times"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bwzfXH",
                                                          "isStatic": false,
                                                          "lastClassName": "hBOHvv",
                                                          "rules": Array [
                                                            "
	text-align: center;
	",
                                                            [Function],
                                                            "
	",
                                                            [Function],
                                                            "
	",
                                                            [Function],
                                                            "
	",
                                                            [Function],
                                                            "
",
                                                          ],
                                                        },
                                                        "displayName": "styled.i",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bwzfXH",
                                                        "target": "i",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    height=""
                                                    iconName="times"
                                                    id=""
                                                    imageFile=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Icon"
                                                    padding=""
                                                    selected={false}
                                                    sizing="normal"
                                                    style={Object {}}
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <i
                                                      className="ui-icon fa fa-fw fa-times sc-bwzfXH hBOHvv"
                                                      contentEditable={false}
                                                      direction="right"
                                                      disabled={false}
                                                      height=""
                                                      id=""
                                                      selected={false}
                                                      style={Object {}}
                                                      width=""
                                                    />
                                                  </StyledComponent>
                                                </styled.i>
                                              </ThemeProvider>
                                            </Wrapper>
                                          </Icon>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                  </ThemeProvider>
                                </Wrapper>
                              </Button>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </li>
                    </StyledComponent>
                  </styled.li>
                </ThemeProvider>
              </Wrapper>
            </Item>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Tab>
`;

exports[`Test the creation of a Tab instance 1`] = `
<Wrapper
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  href={
    Object {
      "selectHandler": [Function],
    }
  }
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Tab"
  onClick={[Function]}
  onClose={[Function]}
  onError={[Function]}
  orientation="top"
  padding=""
  reset={false}
  selected={true}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="tab title"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-tab ui-selected"
    disabled={false}
    selected={true}
    sizing="normal"
    style={
      Object {
        "minWidth": "120px",
        "width": "",
      }
    }
    visible={true}
    xcss={
      Array [
        "
	border-right: solid 1px ",
        [Function],
        ";
	border-top: solid 1px ",
        [Function],
        ";

	&:first-child {
		border-left: solid 1px ",
        [Function],
        ";
	}
",
      ]
    }
  >
    <Item
      bottom=""
      className=""
      contentEditable={false}
      controlled={true}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      focus={false}
      height=""
      hiddenLeftButton={false}
      hiddenRightButton={true}
      href={
        Object {
          "selectHandler": [Function],
        }
      }
      id=""
      layout={5}
      left=""
      leftButton={null}
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Tab"
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onDoubleClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onMouseOut={[Function]}
      onUpdate={[Function]}
      orientation="top"
      padding=""
      rightButton={
        <Button
          bottom=""
          className=""
          contentEditable={false}
          controlled={true}
          direction="right"
          disabled={false}
          err={null}
          errorMessage=""
          focus={false}
          height=""
          href={
            Object {
              "selectHandler": [Function],
            }
          }
          iconName="times"
          iconStyle=""
          id=""
          left=""
          location="none"
          noedit={false}
          nohover={false}
          noripple={false}
          notheme={false}
          obj="Tab"
          onClick={[Function]}
          onClose={[Function]}
          orientation="top"
          padding=""
          selected={true}
          sizing="normal"
          style={Object {}}
          testing={true}
          theme={null}
          title="tab title"
          tooltip=""
          top=""
          visible={true}
          width=""
          xcss={null}
        >
          Test content
        </Button>
      }
      selected={true}
      sizing="normal"
      stacked={false}
      style={Object {}}
      testing={true}
      theme={null}
      title="tab title"
      tooltip=""
      top=""
      useedit={false}
      visible={true}
      widget={null}
      width=""
      xcss={null}
    >
      Test content
    </Item>
  </styled.div>
</Wrapper>
`;
