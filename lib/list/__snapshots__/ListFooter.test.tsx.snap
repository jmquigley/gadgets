// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test retrieval of ListFooter props object 1`] = `
Object {
  "bottom": "",
  "children": null,
  "className": "",
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": "",
  "focus": false,
  "height": "",
  "id": "",
  "layout": 1,
  "left": "",
  "location": "none",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "notheme": false,
  "obj": "ListFooter",
  "onClick": [Function],
  "onUpdate": [Function],
  "padding": "",
  "selected": false,
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "theme": null,
  "title": "",
  "tooltip": "",
  "top": "",
  "visible": true,
  "widget": null,
  "width": "",
  "xcss": null,
}
`;

exports[`Test the creation of a ListFooter control with simple title 1`] = `
<ListFooter
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  layout={1}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="ListFooter"
  onClick={[Function]}
  onUpdate={[Function]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test title"
  tooltip=""
  top=""
  visible={true}
  widget={null}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    layout={1}
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="ListFooter"
    onClick={[Function]}
    onError={[Function]}
    onUpdate={[Function]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    title="test title"
    tooltip=""
    top=""
    visible={true}
    widget={null}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <Styled(Title)
        bottom=""
        className="ui-list-footer"
        contentEditable={false}
        controlled={true}
        direction="right"
        disabled={false}
        err={null}
        errorMessage=""
        focus={false}
        height=""
        id=""
        layout={1}
        left=""
        location="none"
        noedit={false}
        nohover={false}
        noripple={true}
        notheme={false}
        obj="ListFooter"
        onClick={[Function]}
        onUpdate={[Function]}
        padding=""
        selected={false}
        sizing="normal"
        style={Object {}}
        testing={true}
        theme={null}
        title="test title"
        tooltip=""
        top=""
        visible={true}
        widget={null}
        width=""
        xcss={null}
      >
        <StyledComponent
          bottom=""
          className="ui-list-footer"
          contentEditable={false}
          controlled={true}
          direction="right"
          disabled={false}
          err={null}
          errorMessage=""
          focus={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-gzVnrw",
                "isStatic": true,
                "lastClassName": "kQHqrN",
                "rules": Array [
                  "
	margin: -1px;
	padding: 3px;
	padding-left: 7px;

	input {
		padding: 2px;
	}
",
                ],
              },
              "defaultStyles": Object {},
              "displayName": "Styled(Title)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-gzVnrw",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            }
          }
          forwardedRef={null}
          height=""
          id=""
          layout={1}
          left=""
          location="none"
          noedit={false}
          nohover={false}
          noripple={true}
          notheme={false}
          obj="ListFooter"
          onClick={[Function]}
          onUpdate={[Function]}
          padding=""
          selected={false}
          sizing="normal"
          style={Object {}}
          testing={true}
          theme={null}
          title="test title"
          tooltip=""
          top=""
          visible={true}
          widget={null}
          width=""
          xcss={null}
        >
          <Title
            bottom=""
            className="ui-list-footer sc-gzVnrw kQHqrN"
            contentEditable={false}
            controlled={true}
            direction="right"
            disabled={false}
            err={null}
            errorMessage=""
            focus={false}
            height=""
            id=""
            layout={1}
            left=""
            location="none"
            noedit={false}
            nohover={false}
            noripple={true}
            notheme={false}
            obj="ListFooter"
            onClick={[Function]}
            onUpdate={[Function]}
            padding=""
            selected={false}
            sizing="normal"
            style={Object {}}
            testing={true}
            theme={null}
            title="test title"
            tooltip=""
            top=""
            visible={true}
            widget={null}
            width=""
            xcss={null}
          >
            <Wrapper
              bottom=""
              className="ui-list-footer sc-gzVnrw kQHqrN"
              contentEditable={false}
              controlled={true}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              focus={false}
              height=""
              id=""
              layout={1}
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={true}
              notheme={false}
              obj="ListFooter"
              onClick={[Function]}
              onError={[Function]}
              onUpdate={[Function]}
              padding=""
              reset={false}
              selected={false}
              sizing="normal"
              style={Object {}}
              testing={true}
              theme={null}
              title="test title"
              tooltip=""
              top=""
              visible={true}
              widget={null}
              width=""
              xcss={null}
            >
              <ThemeProvider
                theme={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#c0c0c0",
                    "color": "#000000",
                    "headerBackgroundColor": "#004358",
                    "headerForegroundColor": "#ffffff",
                    "headerHoverColor": "#ffe11a",
                    "hoverColor": "#c0c0c0",
                    "inputBorderColor": "#c0c0c0",
                    "itemHoverColor": "#bedb39",
                    "selectedBackgroundColor": "#1f8a70",
                    "selectedForegroundColor": "#ffe11a",
                    "titleBarBackgroundColor": "#004358",
                    "titleBarForegroundColor": "#ffe11a",
                    "tooltipBackgroundColor": "#708090",
                    "tooltipForegroundColor": "#ffffff",
                    "transitionDelay": "0.5s",
                  }
                }
              >
                <styled.div
                  className="ui-title-bar ui-list-footer sc-gzVnrw kQHqrN"
                  disabled={false}
                  layout={1}
                  sizing="normal"
                  style={Object {}}
                  visible={true}
                >
                  <StyledComponent
                    className="ui-title-bar ui-list-footer sc-gzVnrw kQHqrN"
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "fsmfqq",
                          "rules": Array [
                            "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                            [Function],
                            ";
	flex-grow: 1;

	",
                            [Function],
                            "
	",
                            [Function],
                            "
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    layout={1}
                    sizing="normal"
                    style={Object {}}
                    visible={true}
                  >
                    <div
                      className="ui-title-bar ui-list-footer sc-gzVnrw kQHqrN sc-ifAKCX fsmfqq"
                      disabled={false}
                      style={Object {}}
                    >
                      <Styled(Label)
                        bottom=""
                        className="ui-title"
                        contentEditable={false}
                        controlled={true}
                        direction="right"
                        disabled={false}
                        err={null}
                        errorMessage=""
                        focus={false}
                        height=""
                        id=""
                        layout={1}
                        left=""
                        location="none"
                        noedit={false}
                        nohover={false}
                        noripple={true}
                        notheme={false}
                        obj="ListFooter"
                        onClick={[Function]}
                        padding=""
                        selected={false}
                        sizing="normal"
                        style={Object {}}
                        testing={true}
                        text="test title"
                        theme={null}
                        title="test title"
                        tooltip=""
                        top=""
                        visible={true}
                        widget={null}
                        width=""
                        xcss={
                          Array [
                            "
	text-align: left;
	flex: 1;
",
                          ]
                        }
                      >
                        <StyledComponent
                          bottom=""
                          className="ui-title"
                          contentEditable={false}
                          controlled={true}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          focus={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": false,
                                "lastClassName": "eDjJla",
                                "rules": Array [
                                  "
	",
                                  "
	padding: ",
                                  [Function],
                                  ";

	",
                                  [Function],
                                  "
",
                                  "
",
                                ],
                              },
                              "defaultStyles": Object {},
                              "displayName": "Styled(Label)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          height=""
                          id=""
                          layout={1}
                          left=""
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={true}
                          notheme={false}
                          obj="ListFooter"
                          onClick={[Function]}
                          padding=""
                          selected={false}
                          sizing="normal"
                          style={Object {}}
                          testing={true}
                          text="test title"
                          theme={null}
                          title="test title"
                          tooltip=""
                          top=""
                          visible={true}
                          widget={null}
                          width=""
                          xcss={
                            Array [
                              "
	text-align: left;
	flex: 1;
",
                            ]
                          }
                        >
                          <Label
                            bottom=""
                            className="ui-title sc-bZQynM eDjJla"
                            contentEditable={false}
                            controlled={true}
                            direction="right"
                            disabled={false}
                            err={null}
                            errorMessage=""
                            focus={false}
                            height=""
                            id=""
                            layout={1}
                            left=""
                            location="none"
                            noedit={false}
                            nohover={false}
                            noripple={true}
                            notheme={false}
                            obj="ListFooter"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onClick={[Function]}
                            onDoubleClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyPress={[Function]}
                            onUpdate={[Function]}
                            padding=""
                            selected={false}
                            sizing="normal"
                            style={Object {}}
                            testing={true}
                            text="test title"
                            theme={null}
                            title="test title"
                            tooltip=""
                            top=""
                            useedit={false}
                            visible={true}
                            widget={null}
                            width=""
                            xcss={
                              Array [
                                "
	text-align: left;
	flex: 1;
",
                              ]
                            }
                          >
                            <Wrapper
                              bottom=""
                              className="ui-title sc-bZQynM eDjJla"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              layout={1}
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={true}
                              notheme={false}
                              obj="ListFooter"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onDoubleClick={[Function]}
                              onError={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onUpdate={[Function]}
                              padding=""
                              reset={false}
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="test title"
                              theme={null}
                              title="test title"
                              tooltip=""
                              top=""
                              useedit={false}
                              visible={true}
                              widget={null}
                              width=""
                              xcss={
                                Array [
                                  "
	text-align: left;
	flex: 1;
",
                                ]
                              }
                            >
                              <ThemeProvider
                                theme={
                                  Object {
                                    "backgroundColor": "#ffffff",
                                    "borderColor": "#c0c0c0",
                                    "color": "#000000",
                                    "headerBackgroundColor": "#004358",
                                    "headerForegroundColor": "#ffffff",
                                    "headerHoverColor": "#ffe11a",
                                    "hoverColor": "#c0c0c0",
                                    "inputBorderColor": "#c0c0c0",
                                    "itemHoverColor": "#bedb39",
                                    "selectedBackgroundColor": "#1f8a70",
                                    "selectedForegroundColor": "#ffe11a",
                                    "titleBarBackgroundColor": "#004358",
                                    "titleBarForegroundColor": "#ffe11a",
                                    "tooltipBackgroundColor": "#708090",
                                    "tooltipForegroundColor": "#ffffff",
                                    "transitionDelay": "0.5s",
                                  }
                                }
                              >
                                <styled.span
                                  className="ui-label ui-title sc-bZQynM eDjJla"
                                  contentEditable={false}
                                  disabled={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDoubleClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyPress={[Function]}
                                  sizing="normal"
                                  style={Object {}}
                                  suppressContentEditableWarning={true}
                                  visible={true}
                                >
                                  <StyledComponent
                                    className="ui-label ui-title sc-bZQynM eDjJla"
                                    contentEditable={false}
                                    disabled={false}
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bxivhb",
                                          "isStatic": false,
                                          "lastClassName": "cTXvCi",
                                          "rules": Array [
                                            "
	background-color: inherit;

	",
                                            [Function],
                                            "
	",
                                            [Function],
                                            "
	",
                                            [Function],
                                            "
",
                                          ],
                                        },
                                        "displayName": "styled.span",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bxivhb",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={[Function]}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    sizing="normal"
                                    style={Object {}}
                                    suppressContentEditableWarning={true}
                                    visible={true}
                                  >
                                    <span
                                      className="ui-label ui-title sc-bZQynM eDjJla sc-bxivhb cTXvCi"
                                      contentEditable={false}
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDoubleClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyPress={[Function]}
                                      style={Object {}}
                                      suppressContentEditableWarning={true}
                                    >
                                      test title
                                    </span>
                                  </StyledComponent>
                                </styled.span>
                              </ThemeProvider>
                            </Wrapper>
                          </Label>
                        </StyledComponent>
                      </Styled(Label)>
                    </div>
                  </StyledComponent>
                </styled.div>
              </ThemeProvider>
            </Wrapper>
          </Title>
        </StyledComponent>
      </Styled(Title)>
    </ThemeProvider>
  </Wrapper>
</ListFooter>
`;
