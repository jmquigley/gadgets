// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test creation of a default DialogBox control 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#004358",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "headerHoverColor": "#ffe11a",
      "hoverColor": "#c0c0c0",
      "inputBorderColor": "#c0c0c0",
      "tooltipBackgroundColor": "gray",
      "tooltipForegroundColor": "white",
      "transitionDelay": "0.5s",
    }
  }
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="DialogBox"
    isOpen={false}
    onAfterOpen={[Function]}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={false}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "left": "50%",
          "marginRight": "-50%",
          "padding": "15px",
          "right": "auto",
          "top": "40%",
          "transform": "translate(-50%, -50%)",
        },
      }
    }
  >
    <styled.div
      className="ui-dialogbox test-class"
    >
      <styled.div>
        <Styled(Icon)
          iconName="info-circle"
          sizing="xxlarge"
          style={
            Object {
              "color": "#5bc0de",
            }
          }
        />
      </styled.div>
      <styled.div>
        <styled.div
          dangerouslySetInnerHTML={
            Object {
              "__html": "<p></p>",
            }
          }
        />
        <styled.div>
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="Yes"
          />
          <styled.div />
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="No"
          />
        </styled.div>
      </styled.div>
    </styled.div>
  </Modal>
</ThemeProvider>
`;

exports[`Test pressing the "yes" button on the default DialogBox 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#004358",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "headerHoverColor": "#ffe11a",
      "hoverColor": "#c0c0c0",
      "inputBorderColor": "#c0c0c0",
      "tooltipBackgroundColor": "gray",
      "tooltipForegroundColor": "white",
      "transitionDelay": "0.5s",
    }
  }
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="DialogBox"
    isOpen={true}
    onAfterOpen={[Function]}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={false}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "left": "50%",
          "marginRight": "-50%",
          "padding": "15px",
          "right": "auto",
          "top": "40%",
          "transform": "translate(-50%, -50%)",
        },
      }
    }
  >
    <styled.div
      className="ui-dialogbox"
    >
      <styled.div>
        <Styled(Icon)
          iconName="info-circle"
          sizing="xxlarge"
          style={
            Object {
              "color": "#5bc0de",
            }
          }
        />
      </styled.div>
      <styled.div>
        <styled.div
          dangerouslySetInnerHTML={
            Object {
              "__html": "<p>Testing click handler for yes</p>",
            }
          }
        />
        <styled.div>
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="Yes"
          />
          <styled.div />
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="No"
          />
        </styled.div>
      </styled.div>
    </styled.div>
  </Modal>
</ThemeProvider>
`;

exports[`Test retrieval of DialogBox props object 1`] = `
Object {
  "className": "",
  "contentEditable": false,
  "dialogType": "info",
  "direction": "right",
  "disabled": false,
  "focus": false,
  "height": "",
  "iconName": "bomb",
  "id": "",
  "location": "none",
  "message": "",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "onClose": [Function],
  "onOpen": [Function],
  "onSelection": [Function],
  "selected": false,
  "show": false,
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "theme": Object {},
  "tooltip": "",
  "visible": true,
  "width": "",
  "xcss": null,
}
`;

exports[`Test the creation of an custom DialogBox 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#004358",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "headerHoverColor": "#ffe11a",
      "hoverColor": "#c0c0c0",
      "inputBorderColor": "#c0c0c0",
      "tooltipBackgroundColor": "gray",
      "tooltipForegroundColor": "white",
      "transitionDelay": "0.5s",
    }
  }
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="DialogBox"
    isOpen={true}
    onAfterOpen={[Function]}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={false}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "left": "50%",
          "marginRight": "-50%",
          "padding": "15px",
          "right": "auto",
          "top": "40%",
          "transform": "translate(-50%, -50%)",
        },
      }
    }
  >
    <styled.div
      className="ui-dialogbox"
    >
      <styled.div>
        <Styled(Icon)
          iconName="car"
          sizing="xxlarge"
          style={
            Object {
              "color": "magenta",
            }
          }
        />
      </styled.div>
      <styled.div>
        <styled.div
          dangerouslySetInnerHTML={
            Object {
              "__html": "<p>Sample info message</p>",
            }
          }
        />
        <styled.div>
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="Yes"
          />
          <styled.div />
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="No"
          />
        </styled.div>
      </styled.div>
    </styled.div>
  </Modal>
</ThemeProvider>
`;

exports[`Test the creation of an error DialogBox 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#004358",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "headerHoverColor": "#ffe11a",
      "hoverColor": "#c0c0c0",
      "inputBorderColor": "#c0c0c0",
      "tooltipBackgroundColor": "gray",
      "tooltipForegroundColor": "white",
      "transitionDelay": "0.5s",
    }
  }
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="DialogBox"
    isOpen={true}
    onAfterOpen={[Function]}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={false}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "left": "50%",
          "marginRight": "-50%",
          "padding": "15px",
          "right": "auto",
          "top": "40%",
          "transform": "translate(-50%, -50%)",
        },
      }
    }
  >
    <styled.div
      className="ui-dialogbox"
    >
      <styled.div>
        <Styled(Icon)
          iconName="times-circle"
          sizing="xxlarge"
          style={
            Object {
              "color": "#d9534f",
            }
          }
        />
      </styled.div>
      <styled.div>
        <styled.div
          dangerouslySetInnerHTML={
            Object {
              "__html": "<p>Sample error message</p>",
            }
          }
        />
        <styled.div>
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="Yes"
          />
          <styled.div />
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="No"
          />
        </styled.div>
      </styled.div>
    </styled.div>
  </Modal>
</ThemeProvider>
`;

exports[`Test the creation of an info DialogBox 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#004358",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "headerHoverColor": "#ffe11a",
      "hoverColor": "#c0c0c0",
      "inputBorderColor": "#c0c0c0",
      "tooltipBackgroundColor": "gray",
      "tooltipForegroundColor": "white",
      "transitionDelay": "0.5s",
    }
  }
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="DialogBox"
    isOpen={true}
    onAfterOpen={[Function]}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={false}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "left": "50%",
          "marginRight": "-50%",
          "padding": "15px",
          "right": "auto",
          "top": "40%",
          "transform": "translate(-50%, -50%)",
        },
      }
    }
  >
    <styled.div
      className="ui-dialogbox"
    >
      <styled.div>
        <Styled(Icon)
          iconName="info-circle"
          sizing="xxlarge"
          style={
            Object {
              "color": "#5bc0de",
            }
          }
        />
      </styled.div>
      <styled.div>
        <styled.div
          dangerouslySetInnerHTML={
            Object {
              "__html": "<p>Sample info message</p>",
            }
          }
        />
        <styled.div>
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="Yes"
          />
          <styled.div />
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="No"
          />
        </styled.div>
      </styled.div>
    </styled.div>
  </Modal>
</ThemeProvider>
`;

exports[`Test the creation of an success DialogBox 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#004358",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "headerHoverColor": "#ffe11a",
      "hoverColor": "#c0c0c0",
      "inputBorderColor": "#c0c0c0",
      "tooltipBackgroundColor": "gray",
      "tooltipForegroundColor": "white",
      "transitionDelay": "0.5s",
    }
  }
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="DialogBox"
    isOpen={true}
    onAfterOpen={[Function]}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={false}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "left": "50%",
          "marginRight": "-50%",
          "padding": "15px",
          "right": "auto",
          "top": "40%",
          "transform": "translate(-50%, -50%)",
        },
      }
    }
  >
    <styled.div
      className="ui-dialogbox"
    >
      <styled.div>
        <Styled(Icon)
          iconName="check-circle"
          sizing="xxlarge"
          style={
            Object {
              "color": "#5cb85c",
            }
          }
        />
      </styled.div>
      <styled.div>
        <styled.div
          dangerouslySetInnerHTML={
            Object {
              "__html": "<p>Sample success message</p>",
            }
          }
        />
        <styled.div>
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="Yes"
          />
          <styled.div />
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="No"
          />
        </styled.div>
      </styled.div>
    </styled.div>
  </Modal>
</ThemeProvider>
`;

exports[`Test the creation of an warning DialogBox 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#004358",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "headerHoverColor": "#ffe11a",
      "hoverColor": "#c0c0c0",
      "inputBorderColor": "#c0c0c0",
      "tooltipBackgroundColor": "gray",
      "tooltipForegroundColor": "white",
      "transitionDelay": "0.5s",
    }
  }
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="DialogBox"
    isOpen={true}
    onAfterOpen={[Function]}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={false}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "left": "50%",
          "marginRight": "-50%",
          "padding": "15px",
          "right": "auto",
          "top": "40%",
          "transform": "translate(-50%, -50%)",
        },
      }
    }
  >
    <styled.div
      className="ui-dialogbox"
    >
      <styled.div>
        <Styled(Icon)
          iconName="exclamation-circle"
          sizing="xxlarge"
          style={
            Object {
              "color": "#f0ad4e",
            }
          }
        />
      </styled.div>
      <styled.div>
        <styled.div
          dangerouslySetInnerHTML={
            Object {
              "__html": "<p>Sample warning message</p>",
            }
          }
        />
        <styled.div>
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="Yes"
          />
          <styled.div />
          <Styled(ButtonText)
            justify={2}
            noicon={true}
            onClick={[Function]}
            sizing="normal"
            text="No"
          />
        </styled.div>
      </styled.div>
    </styled.div>
  </Modal>
</ThemeProvider>
`;
