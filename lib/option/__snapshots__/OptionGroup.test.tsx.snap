// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Creation of the OptionGroup control (inherit) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType={0}
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="inherit"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="inherit"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="inherit"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType={0}
      selected={true}
      sizing="inherit"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="inherit"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="inherit"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control (large) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType={0}
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="large"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="large"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="large"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType={0}
      selected={true}
      sizing="large"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="large"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="large"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control (medium) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType={0}
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="medium"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="medium"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="medium"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType={0}
      selected={true}
      sizing="medium"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="medium"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="medium"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control (normal) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType={0}
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType={0}
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control (small) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType={0}
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="small"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="small"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="small"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType={0}
      selected={true}
      sizing="small"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="small"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="small"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control (xlarge) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType={0}
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="xlarge"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="xlarge"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="xlarge"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType={0}
      selected={true}
      sizing="xlarge"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="xlarge"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="xlarge"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control (xsmall) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType={0}
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="xsmall"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="xsmall"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="xsmall"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType={0}
      selected={true}
      sizing="xsmall"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="xsmall"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="xsmall"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control (xxlarge) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType={0}
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="xxlarge"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="xxlarge"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="xxlarge"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType={0}
      selected={true}
      sizing="xxlarge"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="xxlarge"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="xxlarge"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control (xxsmall) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType={0}
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="xxsmall"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="xxsmall"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="xxsmall"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType={0}
      selected={true}
      sizing="xxsmall"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="xxsmall"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType={0}
      selected={false}
      sizing="xxsmall"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control of type (0) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType="square"
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType="square"
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType="square"
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType="square"
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control of type (1) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType="squareFilled"
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType="squareFilled"
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType="squareFilled"
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType="squareFilled"
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control of type (2) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType="squareReverse"
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType="squareReverse"
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType="squareReverse"
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType="squareReverse"
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control of type (3) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType="circle"
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType="circle"
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType="circle"
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType="circle"
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control of type (4) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType="circleFilled"
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType="circleFilled"
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType="circleFilled"
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType="circleFilled"
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control of type (5) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType="circleReverse"
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType="circleReverse"
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType="circleReverse"
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType="circleReverse"
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control of type (6) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType="times"
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType="times"
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType="times"
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType="times"
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control of type (7) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType="timesReverse"
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType="timesReverse"
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType="timesReverse"
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType="timesReverse"
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control of type (8) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType="dot"
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType="dot"
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType="dot"
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType="dot"
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the OptionGroup control of type (9) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onError={[Function]}
  onSelect={[Function]}
  optionType="star"
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option-group test-class"
    sizing="normal"
  >
    <Styled(Title)
      className="ui-option-group-title"
      layout={6}
      noedit={true}
      noripple={true}
      sizing="normal"
      title="test options"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={true}
      key="option1"
      onClick={[Function]}
      optionType="star"
      selected={true}
      sizing="normal"
      text="option1"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option2"
      onClick={[Function]}
      optionType="star"
      selected={false}
      sizing="normal"
      text="option2"
    />
    <Styled(Option)
      controlled={false}
      disabled={false}
      initialToggle={false}
      key="option3"
      onClick={[Function]}
      optionType="star"
      selected={false}
      sizing="normal"
      text="option3"
    />
  </styled.div>
</Wrapper>
`;

exports[`Test disabling of the OptionGroup control 1`] = `
<OptionGroup
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  default="option1"
  direction="right"
  disabled={true}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="OptionGroup"
  onSelect={[Function]}
  optionType={0}
  options={
    Array [
      "option1",
      "option2",
      "option3",
    ]
  }
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  title="test options"
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className="test-class"
    contentEditable={false}
    controlled={true}
    default="option1"
    direction="right"
    disabled={true}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="OptionGroup"
    onError={[Function]}
    onSelect={[Function]}
    optionType={0}
    options={
      Array [
        "option1",
        "option2",
        "option3",
      ]
    }
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    title="test options"
    tooltip=""
    top=""
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-option-group test-class"
        sizing="normal"
      >
        <StyledComponent
          className="ui-option-group test-class"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-fjdhpX",
                "isStatic": false,
                "lastClassName": "gWzMzz",
                "rules": Array [
                  "
	border: solid 1px ",
                  [Function],
                  ";
	display: inline-flex;
	flex-direction: column;
	margin: ",
                  [Function],
                  ";
	padding: 0.6rem;
	position: relative;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-fjdhpX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          sizing="normal"
        >
          <div
            className="ui-option-group test-class sc-fjdhpX gWzMzz"
          >
            <Styled(Title)
              className="ui-option-group-title"
              layout={6}
              noedit={true}
              noripple={true}
              sizing="normal"
              title="test options"
            >
              <StyledComponent
                className="ui-option-group-title"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cSHVUG",
                      "isStatic": false,
                      "lastClassName": "kuyihe",
                      "rules": Array [
                        "
	background-color: ",
                        [Function],
                        ";
	left: 0.3rem;
	padding: 0 0.33rem;
	position: absolute;
	top: -",
                        [Function],
                        ";
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Title)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-cSHVUG",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                layout={6}
                noedit={true}
                noripple={true}
                sizing="normal"
                title="test options"
              >
                <Title
                  bottom=""
                  className="ui-option-group-title sc-cSHVUG kuyihe"
                  contentEditable={false}
                  controlled={true}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  id=""
                  layout={6}
                  left=""
                  location="none"
                  noedit={true}
                  nohover={false}
                  noripple={true}
                  notheme={false}
                  obj="Title"
                  onClick={[Function]}
                  onUpdate={[Function]}
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={Object {}}
                  testing={true}
                  theme={null}
                  title="test options"
                  tooltip=""
                  top=""
                  visible={true}
                  widget={null}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="ui-option-group-title sc-cSHVUG kuyihe"
                    contentEditable={false}
                    controlled={true}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    id=""
                    layout={6}
                    left=""
                    location="none"
                    noedit={true}
                    nohover={false}
                    noripple={true}
                    notheme={false}
                    obj="Title"
                    onClick={[Function]}
                    onError={[Function]}
                    onUpdate={[Function]}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={Object {}}
                    testing={true}
                    theme={null}
                    title="test options"
                    tooltip=""
                    top=""
                    visible={true}
                    widget={null}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.div
                        className="ui-title-bar ui-option-group-title sc-cSHVUG kuyihe"
                        disabled={false}
                        layout={6}
                        sizing="normal"
                        style={Object {}}
                        visible={true}
                      >
                        <StyledComponent
                          className="ui-title-bar ui-option-group-title sc-cSHVUG kuyihe"
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-dnqmqq",
                                "isStatic": false,
                                "lastClassName": "krjgum",
                                "rules": Array [
                                  "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                                  [Function],
                                  ";
	flex-grow: 1;

	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-dnqmqq",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          layout={6}
                          sizing="normal"
                          style={Object {}}
                          visible={true}
                        >
                          <div
                            className="ui-title-bar ui-option-group-title sc-cSHVUG kuyihe sc-dnqmqq dKSzzJ"
                            disabled={false}
                            style={Object {}}
                          >
                            <Styled(Label)
                              bottom=""
                              className="ui-title"
                              contentEditable={false}
                              controlled={true}
                              direction="right"
                              disabled={false}
                              err={null}
                              errorMessage=""
                              focus={false}
                              height=""
                              id=""
                              layout={6}
                              left=""
                              location="none"
                              noedit={true}
                              nohover={false}
                              noripple={true}
                              notheme={false}
                              obj="Title"
                              onClick={[Function]}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={Object {}}
                              testing={true}
                              text="test options"
                              theme={null}
                              title="test options"
                              tooltip=""
                              top=""
                              visible={true}
                              widget={null}
                              width=""
                              xcss={
                                Array [
                                  "
	text-align: left;
	flex: 1;
",
                                ]
                              }
                            >
                              <StyledComponent
                                bottom=""
                                className="ui-title"
                                contentEditable={false}
                                controlled={true}
                                direction="right"
                                disabled={false}
                                err={null}
                                errorMessage=""
                                focus={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gZMcBi",
                                      "isStatic": false,
                                      "lastClassName": "jLaVqp",
                                      "rules": Array [
                                        "
	",
                                        "
	padding: ",
                                        [Function],
                                        ";

	",
                                        [Function],
                                        "
",
                                        "
",
                                      ],
                                    },
                                    "defaultStyles": Object {},
                                    "displayName": "Styled(Label)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gZMcBi",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                    Symbol(Symbol.hasInstance): [Function],
                                  }
                                }
                                forwardedRef={null}
                                height=""
                                id=""
                                layout={6}
                                left=""
                                location="none"
                                noedit={true}
                                nohover={false}
                                noripple={true}
                                notheme={false}
                                obj="Title"
                                onClick={[Function]}
                                padding=""
                                selected={false}
                                sizing="normal"
                                style={Object {}}
                                testing={true}
                                text="test options"
                                theme={null}
                                title="test options"
                                tooltip=""
                                top=""
                                visible={true}
                                widget={null}
                                width=""
                                xcss={
                                  Array [
                                    "
	text-align: left;
	flex: 1;
",
                                  ]
                                }
                              >
                                <Label
                                  bottom=""
                                  className="ui-title sc-gZMcBi jLaVqp"
                                  contentEditable={false}
                                  controlled={true}
                                  direction="right"
                                  disabled={false}
                                  err={null}
                                  errorMessage=""
                                  focus={false}
                                  height=""
                                  id=""
                                  layout={6}
                                  left=""
                                  location="none"
                                  noedit={true}
                                  nohover={false}
                                  noripple={true}
                                  notheme={false}
                                  obj="Title"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onClick={[Function]}
                                  onDoubleClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyPress={[Function]}
                                  onUpdate={[Function]}
                                  padding=""
                                  selected={false}
                                  sizing="normal"
                                  style={Object {}}
                                  testing={true}
                                  text="test options"
                                  theme={null}
                                  title="test options"
                                  tooltip=""
                                  top=""
                                  useedit={false}
                                  visible={true}
                                  widget={null}
                                  width=""
                                  xcss={
                                    Array [
                                      "
	text-align: left;
	flex: 1;
",
                                    ]
                                  }
                                >
                                  <Wrapper
                                    bottom=""
                                    className="ui-title sc-gZMcBi jLaVqp"
                                    contentEditable={false}
                                    controlled={true}
                                    direction="right"
                                    disabled={false}
                                    err={null}
                                    errorMessage=""
                                    focus={false}
                                    height=""
                                    id=""
                                    layout={6}
                                    left=""
                                    location="none"
                                    noedit={true}
                                    nohover={false}
                                    noripple={true}
                                    notheme={false}
                                    obj="Title"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onClick={[Function]}
                                    onDoubleClick={[Function]}
                                    onError={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyPress={[Function]}
                                    onUpdate={[Function]}
                                    padding=""
                                    reset={false}
                                    selected={false}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    text="test options"
                                    theme={null}
                                    title="test options"
                                    tooltip=""
                                    top=""
                                    useedit={false}
                                    visible={true}
                                    widget={null}
                                    width=""
                                    xcss={
                                      Array [
                                        "
	text-align: left;
	flex: 1;
",
                                      ]
                                    }
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "backgroundColor": "#ffffff",
                                          "borderColor": "#c0c0c0",
                                          "color": "#000000",
                                          "headerBackgroundColor": "#004358",
                                          "headerForegroundColor": "#ffffff",
                                          "headerHoverColor": "#ffe11a",
                                          "hoverColor": "#c0c0c0",
                                          "inputBorderColor": "#c0c0c0",
                                          "itemHoverColor": "#bedb39",
                                          "selectedBackgroundColor": "#1f8a70",
                                          "selectedForegroundColor": "#ffe11a",
                                          "titleBarBackgroundColor": "#004358",
                                          "titleBarForegroundColor": "#ffe11a",
                                          "tooltipBackgroundColor": "#708090",
                                          "tooltipForegroundColor": "#ffffff",
                                          "transitionDelay": "0.5s",
                                        }
                                      }
                                    >
                                      <styled.span
                                        className="ui-label ui-title sc-gZMcBi jLaVqp"
                                        contentEditable={false}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDoubleClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyPress={[Function]}
                                        sizing="normal"
                                        style={Object {}}
                                        suppressContentEditableWarning={true}
                                        visible={true}
                                      >
                                        <StyledComponent
                                          className="ui-label ui-title sc-gZMcBi jLaVqp"
                                          contentEditable={false}
                                          disabled={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htoDjs",
                                                "isStatic": false,
                                                "lastClassName": "iouaLl",
                                                "rules": Array [
                                                  "
	background-color: inherit;

	",
                                                  [Function],
                                                  "
	",
                                                  [Function],
                                                  "
	",
                                                  [Function],
                                                  "
",
                                                ],
                                              },
                                              "displayName": "styled.span",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htoDjs",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={[Function]}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDoubleClick={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyPress={[Function]}
                                          sizing="normal"
                                          style={Object {}}
                                          suppressContentEditableWarning={true}
                                          visible={true}
                                        >
                                          <span
                                            className="ui-label ui-title sc-gZMcBi jLaVqp sc-htoDjs korbdG"
                                            contentEditable={false}
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDoubleClick={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyPress={[Function]}
                                            style={Object {}}
                                            suppressContentEditableWarning={true}
                                          >
                                            test options
                                          </span>
                                        </StyledComponent>
                                      </styled.span>
                                    </ThemeProvider>
                                  </Wrapper>
                                </Label>
                              </StyledComponent>
                            </Styled(Label)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </ThemeProvider>
                  </Wrapper>
                </Title>
              </StyledComponent>
            </Styled(Title)>
            <Styled(Option)
              controlled={false}
              disabled={true}
              initialToggle={true}
              key="option1"
              onClick={[Function]}
              optionType={0}
              selected={true}
              sizing="normal"
              text="option1"
            >
              <StyledComponent
                controlled={false}
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jzJRlG",
                      "isStatic": true,
                      "lastClassName": "istBgv",
                      "rules": Array [
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Option)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-jzJRlG",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                initialToggle={true}
                onClick={[Function]}
                optionType={0}
                selected={true}
                sizing="normal"
                text="option1"
              >
                <Option
                  bottom=""
                  className="sc-jzJRlG istBgv"
                  contentEditable={false}
                  controlled={false}
                  direction="right"
                  disabled={true}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  id=""
                  initialToggle={true}
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Option"
                  onClick={[Function]}
                  optionType={0}
                  padding=""
                  selected={true}
                  sizing="normal"
                  style={
                    Object {
                      "backgroundColor": "inherit",
                      "color": "inherit",
                    }
                  }
                  testing={true}
                  text="option1"
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-jzJRlG istBgv"
                    contentEditable={false}
                    controlled={false}
                    direction="right"
                    disabled={true}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    id=""
                    initialToggle={true}
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Option"
                    onClick={[Function]}
                    onError={[Function]}
                    optionType={0}
                    padding=""
                    reset={false}
                    selected={true}
                    sizing="normal"
                    style={
                      Object {
                        "backgroundColor": "inherit",
                        "color": "inherit",
                      }
                    }
                    testing={true}
                    text="option1"
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.div
                        className="ui-option sc-jzJRlG istBgv"
                        onClick={[Function]}
                        sizing="normal"
                        style={
                          Object {
                            "backgroundColor": "inherit",
                            "color": "inherit",
                          }
                        }
                        visible={true}
                      >
                        <StyledComponent
                          className="ui-option sc-jzJRlG istBgv"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-gqjmRU",
                                "isStatic": false,
                                "lastClassName": "kynOPX",
                                "rules": Array [
                                  "
	align-items: center;
	cursor: default;
	display: inline-flex;

	> span {
		padding: 0 0.2rem;
	}

	> span:hover {
		background-color: ",
                                  [Function],
                                  ";
	}

	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-gqjmRU",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          sizing="normal"
                          style={
                            Object {
                              "backgroundColor": "inherit",
                              "color": "inherit",
                            }
                          }
                          visible={true}
                        >
                          <div
                            className="ui-option sc-jzJRlG istBgv sc-gqjmRU kynOPX"
                            onClick={[Function]}
                            style={
                              Object {
                                "backgroundColor": "inherit",
                                "color": "inherit",
                              }
                            }
                          >
                            <Styled(ButtonToggle)
                              bgColorOff="inherit"
                              bgColorOn="inherit"
                              bottom=""
                              className="sc-jzJRlG istBgv"
                              contentEditable={false}
                              controlled={false}
                              direction="right"
                              disabled={true}
                              err={null}
                              errorMessage=""
                              fgColorOff="inherit"
                              fgColorOn="inherit"
                              focus={false}
                              height=""
                              iconNameOff="square-o"
                              iconNameOn="check-square-o"
                              id=""
                              initialToggle={true}
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Option"
                              onClick={[Function]}
                              optionType={0}
                              padding=""
                              selected={true}
                              sizing="normal"
                              style={
                                Object {
                                  "backgroundColor": "inherit",
                                  "color": "inherit",
                                }
                              }
                              testing={true}
                              text="option1"
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <StyledComponent
                                bgColorOff="inherit"
                                bgColorOn="inherit"
                                bottom=""
                                className="sc-jzJRlG istBgv"
                                contentEditable={false}
                                controlled={false}
                                direction="right"
                                disabled={true}
                                err={null}
                                errorMessage=""
                                fgColorOff="inherit"
                                fgColorOn="inherit"
                                focus={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-VigVT",
                                      "isStatic": true,
                                      "lastClassName": "bwwtAd",
                                      "rules": Array [
                                        "
	display: inline;
	flex: unset;
	width: unset;
",
                                      ],
                                    },
                                    "defaultStyles": Object {},
                                    "displayName": "Styled(ButtonToggle)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-VigVT",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                    Symbol(Symbol.hasInstance): [Function],
                                  }
                                }
                                forwardedRef={null}
                                height=""
                                iconNameOff="square-o"
                                iconNameOn="check-square-o"
                                id=""
                                initialToggle={true}
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Option"
                                onClick={[Function]}
                                optionType={0}
                                padding=""
                                selected={true}
                                sizing="normal"
                                style={
                                  Object {
                                    "backgroundColor": "inherit",
                                    "color": "inherit",
                                  }
                                }
                                testing={true}
                                text="option1"
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ButtonToggle
                                  bgColorOff="inherit"
                                  bgColorOn="inherit"
                                  bottom=""
                                  className="sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                  contentEditable={false}
                                  controlled={false}
                                  direction="right"
                                  disabled={true}
                                  err={null}
                                  errorMessage=""
                                  fgColorOff="inherit"
                                  fgColorOn="inherit"
                                  focus={false}
                                  height=""
                                  iconName="bomb"
                                  iconNameOff="square-o"
                                  iconNameOn="check-square-o"
                                  iconStyle=""
                                  id=""
                                  initialToggle={true}
                                  left=""
                                  location="none"
                                  noedit={false}
                                  nohover={false}
                                  noripple={false}
                                  notheme={false}
                                  obj="Option"
                                  onClick={[Function]}
                                  optionType={0}
                                  padding=""
                                  selected={true}
                                  sizing="normal"
                                  style={
                                    Object {
                                      "backgroundColor": "inherit",
                                      "color": "inherit",
                                    }
                                  }
                                  testing={true}
                                  text="option1"
                                  theme={null}
                                  tooltip=""
                                  top=""
                                  visible={true}
                                  width=""
                                  xcss={null}
                                >
                                  <Wrapper
                                    bgColorOff="inherit"
                                    bgColorOn="inherit"
                                    bottom=""
                                    className="sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                    contentEditable={false}
                                    controlled={false}
                                    direction="right"
                                    disabled={true}
                                    err={null}
                                    errorMessage=""
                                    fgColorOff="inherit"
                                    fgColorOn="inherit"
                                    focus={false}
                                    height=""
                                    iconName="bomb"
                                    iconNameOff="square-o"
                                    iconNameOn="check-square-o"
                                    iconStyle=""
                                    id=""
                                    initialToggle={true}
                                    left=""
                                    location="none"
                                    noedit={false}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="Option"
                                    onClick={[Function]}
                                    onError={[Function]}
                                    optionType={0}
                                    padding=""
                                    reset={false}
                                    selected={true}
                                    sizing="normal"
                                    style={
                                      Object {
                                        "backgroundColor": "inherit",
                                        "color": "inherit",
                                      }
                                    }
                                    testing={true}
                                    text="option1"
                                    theme={null}
                                    tooltip=""
                                    top=""
                                    visible={true}
                                    width=""
                                    xcss={null}
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "backgroundColor": "#ffffff",
                                          "borderColor": "#c0c0c0",
                                          "color": "#000000",
                                          "headerBackgroundColor": "#004358",
                                          "headerForegroundColor": "#ffffff",
                                          "headerHoverColor": "#ffe11a",
                                          "hoverColor": "#c0c0c0",
                                          "inputBorderColor": "#c0c0c0",
                                          "itemHoverColor": "#bedb39",
                                          "selectedBackgroundColor": "#1f8a70",
                                          "selectedForegroundColor": "#ffe11a",
                                          "titleBarBackgroundColor": "#004358",
                                          "titleBarForegroundColor": "#ffe11a",
                                          "tooltipBackgroundColor": "#708090",
                                          "tooltipForegroundColor": "#ffffff",
                                          "transitionDelay": "0.5s",
                                        }
                                      }
                                    >
                                      <Button
                                        bgColorOff="inherit"
                                        bgColorOn="inherit"
                                        bottom=""
                                        className="ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                        contentEditable={false}
                                        controlled={false}
                                        direction="right"
                                        disabled={true}
                                        err={null}
                                        errorMessage=""
                                        fgColorOff="inherit"
                                        fgColorOn="inherit"
                                        focus={false}
                                        height=""
                                        iconName="check-square-o"
                                        iconNameOff="square-o"
                                        iconNameOn="check-square-o"
                                        iconStyle=""
                                        id=""
                                        initialToggle={true}
                                        left=""
                                        location="none"
                                        noedit={false}
                                        nohover={false}
                                        noripple={true}
                                        notheme={false}
                                        obj="Option"
                                        onClick={[Function]}
                                        optionType={0}
                                        padding=""
                                        selected={true}
                                        sizing="normal"
                                        style={
                                          Object {
                                            "backgroundColor": "inherit",
                                            "color": "inherit",
                                          }
                                        }
                                        testing={true}
                                        text="option1"
                                        theme={null}
                                        tooltip=""
                                        top=""
                                        visible={true}
                                        width=""
                                        xcss={null}
                                      >
                                        <Wrapper
                                          bgColorOff="inherit"
                                          bgColorOn="inherit"
                                          bottom=""
                                          className="ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                          contentEditable={false}
                                          controlled={false}
                                          direction="right"
                                          disabled={true}
                                          err={null}
                                          errorMessage=""
                                          fgColorOff="inherit"
                                          fgColorOn="inherit"
                                          focus={false}
                                          height=""
                                          iconName="check-square-o"
                                          iconNameOff="square-o"
                                          iconNameOn="check-square-o"
                                          iconStyle=""
                                          id=""
                                          initialToggle={true}
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={true}
                                          notheme={false}
                                          obj="Option"
                                          onClick={[Function]}
                                          onError={[Function]}
                                          optionType={0}
                                          padding=""
                                          reset={false}
                                          selected={true}
                                          sizing="normal"
                                          style={
                                            Object {
                                              "backgroundColor": "inherit",
                                              "color": "inherit",
                                            }
                                          }
                                          testing={true}
                                          text="option1"
                                          theme={null}
                                          tooltip=""
                                          top=""
                                          visible={true}
                                          width=""
                                          xcss={null}
                                        >
                                          <ThemeProvider
                                            theme={
                                              Object {
                                                "backgroundColor": "#ffffff",
                                                "borderColor": "#c0c0c0",
                                                "color": "#000000",
                                                "headerBackgroundColor": "#004358",
                                                "headerForegroundColor": "#ffffff",
                                                "headerHoverColor": "#ffe11a",
                                                "hoverColor": "#c0c0c0",
                                                "inputBorderColor": "#c0c0c0",
                                                "itemHoverColor": "#bedb39",
                                                "selectedBackgroundColor": "#1f8a70",
                                                "selectedForegroundColor": "#ffe11a",
                                                "titleBarBackgroundColor": "#004358",
                                                "titleBarForegroundColor": "#ffe11a",
                                                "tooltipBackgroundColor": "#708090",
                                                "tooltipForegroundColor": "#ffffff",
                                                "transitionDelay": "0.5s",
                                              }
                                            }
                                          >
                                            <styled.div
                                              className="ui-button nohover ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                              disabled={true}
                                              id="Button-0"
                                              onClick={[Function]}
                                              sizing="normal"
                                              style={
                                                Object {
                                                  "backgroundColor": "inherit",
                                                  "color": "inherit",
                                                }
                                              }
                                              visible={true}
                                            >
                                              <StyledComponent
                                                className="ui-button nohover ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                                disabled={true}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-gzVnrw",
                                                      "isStatic": false,
                                                      "lastClassName": "fqspZq",
                                                      "rules": Array [
                                                        "
	",
                                                        "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                        "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        ";
	}

	",
                                                        [Function],
                                                        "
	",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.div",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-gzVnrw",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                id="Button-0"
                                                onClick={[Function]}
                                                sizing="normal"
                                                style={
                                                  Object {
                                                    "backgroundColor": "inherit",
                                                    "color": "inherit",
                                                  }
                                                }
                                                visible={true}
                                              >
                                                <div
                                                  className="ui-button nohover ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd sc-gzVnrw fqspZq"
                                                  disabled={true}
                                                  id="Button-0"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "backgroundColor": "inherit",
                                                      "color": "inherit",
                                                    }
                                                  }
                                                >
                                                  <Icon
                                                    bottom=""
                                                    className=""
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="check-square-o"
                                                    id=""
                                                    imageFile=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Icon"
                                                    padding=""
                                                    selected={false}
                                                    sizing="normal"
                                                    style={Object {}}
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className=""
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="check-square-o"
                                                      id=""
                                                      imageFile=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="Icon"
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="normal"
                                                      style={Object {}}
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.i
                                                          bottom=""
                                                          className="ui-icon fa fa-fw fa-check-square-o"
                                                          contentEditable={false}
                                                          controlled={true}
                                                          direction="right"
                                                          disabled={false}
                                                          err={null}
                                                          errorMessage=""
                                                          focus={false}
                                                          height=""
                                                          iconName="check-square-o"
                                                          id=""
                                                          imageFile=""
                                                          left=""
                                                          location="none"
                                                          noedit={false}
                                                          nohover={false}
                                                          noripple={false}
                                                          notheme={false}
                                                          obj="Icon"
                                                          padding=""
                                                          selected={false}
                                                          sizing="normal"
                                                          style={Object {}}
                                                          testing={true}
                                                          theme={null}
                                                          tooltip=""
                                                          top=""
                                                          visible={true}
                                                          width=""
                                                          xcss={null}
                                                        >
                                                          <StyledComponent
                                                            bottom=""
                                                            className="ui-icon fa fa-fw fa-check-square-o"
                                                            contentEditable={false}
                                                            controlled={true}
                                                            direction="right"
                                                            disabled={false}
                                                            err={null}
                                                            errorMessage=""
                                                            focus={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bwzfXH",
                                                                  "isStatic": false,
                                                                  "lastClassName": "hBOHvv",
                                                                  "rules": Array [
                                                                    "
	text-align: center;
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.i",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bwzfXH",
                                                                "target": "i",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            height=""
                                                            iconName="check-square-o"
                                                            id=""
                                                            imageFile=""
                                                            left=""
                                                            location="none"
                                                            noedit={false}
                                                            nohover={false}
                                                            noripple={false}
                                                            notheme={false}
                                                            obj="Icon"
                                                            padding=""
                                                            selected={false}
                                                            sizing="normal"
                                                            style={Object {}}
                                                            testing={true}
                                                            theme={null}
                                                            tooltip=""
                                                            top=""
                                                            visible={true}
                                                            width=""
                                                            xcss={null}
                                                          >
                                                            <i
                                                              className="ui-icon fa fa-fw fa-check-square-o sc-bwzfXH hBOHvv"
                                                              contentEditable={false}
                                                              direction="right"
                                                              disabled={false}
                                                              height=""
                                                              id=""
                                                              selected={false}
                                                              style={Object {}}
                                                              width=""
                                                            />
                                                          </StyledComponent>
                                                        </styled.i>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Icon>
                                                </div>
                                              </StyledComponent>
                                            </styled.div>
                                          </ThemeProvider>
                                        </Wrapper>
                                      </Button>
                                    </ThemeProvider>
                                  </Wrapper>
                                </ButtonToggle>
                              </StyledComponent>
                            </Styled(ButtonToggle)>
                            <Styled(Title)
                              disabled={true}
                              layout={6}
                              noedit={true}
                              sizing="normal"
                              title="option1"
                            >
                              <StyledComponent
                                disabled={true}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-jTzLTM",
                                      "isStatic": true,
                                      "lastClassName": "eCMmlJ",
                                      "rules": Array [],
                                    },
                                    "defaultStyles": Object {},
                                    "displayName": "Styled(Title)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-jTzLTM",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                    Symbol(Symbol.hasInstance): [Function],
                                  }
                                }
                                forwardedRef={null}
                                layout={6}
                                noedit={true}
                                sizing="normal"
                                title="option1"
                              >
                                <Title
                                  bottom=""
                                  className="sc-jTzLTM eCMmlJ"
                                  contentEditable={false}
                                  controlled={true}
                                  direction="right"
                                  disabled={true}
                                  err={null}
                                  errorMessage=""
                                  focus={false}
                                  height=""
                                  id=""
                                  layout={6}
                                  left=""
                                  location="none"
                                  noedit={true}
                                  nohover={false}
                                  noripple={false}
                                  notheme={false}
                                  obj="Title"
                                  onClick={[Function]}
                                  onUpdate={[Function]}
                                  padding=""
                                  selected={false}
                                  sizing="normal"
                                  style={Object {}}
                                  testing={true}
                                  theme={null}
                                  title="option1"
                                  tooltip=""
                                  top=""
                                  visible={true}
                                  widget={null}
                                  width=""
                                  xcss={null}
                                >
                                  <Wrapper
                                    bottom=""
                                    className="sc-jTzLTM eCMmlJ"
                                    contentEditable={false}
                                    controlled={true}
                                    direction="right"
                                    disabled={true}
                                    err={null}
                                    errorMessage=""
                                    focus={false}
                                    height=""
                                    id=""
                                    layout={6}
                                    left=""
                                    location="none"
                                    noedit={true}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="Title"
                                    onClick={[Function]}
                                    onError={[Function]}
                                    onUpdate={[Function]}
                                    padding=""
                                    reset={false}
                                    selected={false}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    theme={null}
                                    title="option1"
                                    tooltip=""
                                    top=""
                                    visible={true}
                                    widget={null}
                                    width=""
                                    xcss={null}
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "backgroundColor": "#ffffff",
                                          "borderColor": "#c0c0c0",
                                          "color": "#000000",
                                          "headerBackgroundColor": "#004358",
                                          "headerForegroundColor": "#ffffff",
                                          "headerHoverColor": "#ffe11a",
                                          "hoverColor": "#c0c0c0",
                                          "inputBorderColor": "#c0c0c0",
                                          "itemHoverColor": "#bedb39",
                                          "selectedBackgroundColor": "#1f8a70",
                                          "selectedForegroundColor": "#ffe11a",
                                          "titleBarBackgroundColor": "#004358",
                                          "titleBarForegroundColor": "#ffe11a",
                                          "tooltipBackgroundColor": "#708090",
                                          "tooltipForegroundColor": "#ffffff",
                                          "transitionDelay": "0.5s",
                                        }
                                      }
                                    >
                                      <styled.div
                                        className="ui-title-bar sc-jTzLTM eCMmlJ"
                                        disabled={true}
                                        layout={6}
                                        sizing="normal"
                                        style={Object {}}
                                        visible={true}
                                      >
                                        <StyledComponent
                                          className="ui-title-bar sc-jTzLTM eCMmlJ"
                                          disabled={true}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-dnqmqq",
                                                "isStatic": false,
                                                "lastClassName": "krjgum",
                                                "rules": Array [
                                                  "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                                                  [Function],
                                                  ";
	flex-grow: 1;

	",
                                                  [Function],
                                                  "
	",
                                                  [Function],
                                                  "
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-dnqmqq",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          layout={6}
                                          sizing="normal"
                                          style={Object {}}
                                          visible={true}
                                        >
                                          <div
                                            className="ui-title-bar sc-jTzLTM eCMmlJ sc-dnqmqq krjgum"
                                            disabled={true}
                                            style={Object {}}
                                          >
                                            <Styled(Label)
                                              bottom=""
                                              className="ui-title"
                                              contentEditable={false}
                                              controlled={true}
                                              direction="right"
                                              disabled={true}
                                              err={null}
                                              errorMessage=""
                                              focus={false}
                                              height=""
                                              id=""
                                              layout={6}
                                              left=""
                                              location="none"
                                              noedit={true}
                                              nohover={false}
                                              noripple={false}
                                              notheme={false}
                                              obj="Title"
                                              onClick={[Function]}
                                              padding=""
                                              selected={false}
                                              sizing="normal"
                                              style={Object {}}
                                              testing={true}
                                              text="option1"
                                              theme={null}
                                              title="option1"
                                              tooltip=""
                                              top=""
                                              visible={true}
                                              widget={null}
                                              width=""
                                              xcss={
                                                Array [
                                                  "
	text-align: left;
	flex: 1;
",
                                                ]
                                              }
                                            >
                                              <StyledComponent
                                                bottom=""
                                                className="ui-title"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={true}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-gZMcBi",
                                                      "isStatic": false,
                                                      "lastClassName": "jLaVqp",
                                                      "rules": Array [
                                                        "
	",
                                                        "
	padding: ",
                                                        [Function],
                                                        ";

	",
                                                        [Function],
                                                        "
",
                                                        "
",
                                                      ],
                                                    },
                                                    "defaultStyles": Object {},
                                                    "displayName": "Styled(Label)",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-gZMcBi",
                                                    "target": [Function],
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                    Symbol(Symbol.hasInstance): [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                height=""
                                                id=""
                                                layout={6}
                                                left=""
                                                location="none"
                                                noedit={true}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="Title"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="normal"
                                                style={Object {}}
                                                testing={true}
                                                text="option1"
                                                theme={null}
                                                title="option1"
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                widget={null}
                                                width=""
                                                xcss={
                                                  Array [
                                                    "
	text-align: left;
	flex: 1;
",
                                                  ]
                                                }
                                              >
                                                <Label
                                                  bottom=""
                                                  className="ui-title sc-gZMcBi jLaVqp"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={true}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  height=""
                                                  id=""
                                                  layout={6}
                                                  left=""
                                                  location="none"
                                                  noedit={true}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="Title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  onDoubleClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyPress={[Function]}
                                                  onUpdate={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="normal"
                                                  style={Object {}}
                                                  testing={true}
                                                  text="option1"
                                                  theme={null}
                                                  title="option1"
                                                  tooltip=""
                                                  top=""
                                                  useedit={false}
                                                  visible={true}
                                                  widget={null}
                                                  width=""
                                                  xcss={
                                                    Array [
                                                      "
	text-align: left;
	flex: 1;
",
                                                    ]
                                                  }
                                                >
                                                  <Wrapper
                                                    bottom=""
                                                    className="ui-title sc-gZMcBi jLaVqp"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={true}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    id=""
                                                    layout={6}
                                                    left=""
                                                    location="none"
                                                    noedit={true}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    onDoubleClick={[Function]}
                                                    onError={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyPress={[Function]}
                                                    onUpdate={[Function]}
                                                    padding=""
                                                    reset={false}
                                                    selected={false}
                                                    sizing="normal"
                                                    style={Object {}}
                                                    testing={true}
                                                    text="option1"
                                                    theme={null}
                                                    title="option1"
                                                    tooltip=""
                                                    top=""
                                                    useedit={false}
                                                    visible={true}
                                                    widget={null}
                                                    width=""
                                                    xcss={
                                                      Array [
                                                        "
	text-align: left;
	flex: 1;
",
                                                      ]
                                                    }
                                                  >
                                                    <ThemeProvider
                                                      theme={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#c0c0c0",
                                                          "color": "#000000",
                                                          "headerBackgroundColor": "#004358",
                                                          "headerForegroundColor": "#ffffff",
                                                          "headerHoverColor": "#ffe11a",
                                                          "hoverColor": "#c0c0c0",
                                                          "inputBorderColor": "#c0c0c0",
                                                          "itemHoverColor": "#bedb39",
                                                          "selectedBackgroundColor": "#1f8a70",
                                                          "selectedForegroundColor": "#ffe11a",
                                                          "titleBarBackgroundColor": "#004358",
                                                          "titleBarForegroundColor": "#ffe11a",
                                                          "tooltipBackgroundColor": "#708090",
                                                          "tooltipForegroundColor": "#ffffff",
                                                          "transitionDelay": "0.5s",
                                                        }
                                                      }
                                                    >
                                                      <styled.span
                                                        className="ui-label ui-title sc-gZMcBi jLaVqp"
                                                        contentEditable={false}
                                                        disabled={true}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDoubleClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyPress={[Function]}
                                                        sizing="normal"
                                                        style={Object {}}
                                                        suppressContentEditableWarning={true}
                                                        visible={true}
                                                      >
                                                        <StyledComponent
                                                          className="ui-label ui-title sc-gZMcBi jLaVqp"
                                                          contentEditable={false}
                                                          disabled={true}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htoDjs",
                                                                "isStatic": false,
                                                                "lastClassName": "iouaLl",
                                                                "rules": Array [
                                                                  "
	background-color: inherit;

	",
                                                                  [Function],
                                                                  "
	",
                                                                  [Function],
                                                                  "
	",
                                                                  [Function],
                                                                  "
",
                                                                ],
                                                              },
                                                              "displayName": "styled.span",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htoDjs",
                                                              "target": "span",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={[Function]}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onDoubleClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyPress={[Function]}
                                                          sizing="normal"
                                                          style={Object {}}
                                                          suppressContentEditableWarning={true}
                                                          visible={true}
                                                        >
                                                          <span
                                                            className="ui-label ui-title sc-gZMcBi jLaVqp sc-htoDjs iouaLl"
                                                            contentEditable={false}
                                                            disabled={true}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDoubleClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyPress={[Function]}
                                                            style={Object {}}
                                                            suppressContentEditableWarning={true}
                                                          >
                                                            option1
                                                          </span>
                                                        </StyledComponent>
                                                      </styled.span>
                                                    </ThemeProvider>
                                                  </Wrapper>
                                                </Label>
                                              </StyledComponent>
                                            </Styled(Label)>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </ThemeProvider>
                                  </Wrapper>
                                </Title>
                              </StyledComponent>
                            </Styled(Title)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </ThemeProvider>
                  </Wrapper>
                </Option>
              </StyledComponent>
            </Styled(Option)>
            <Styled(Option)
              controlled={false}
              disabled={true}
              initialToggle={false}
              key="option2"
              onClick={[Function]}
              optionType={0}
              selected={false}
              sizing="normal"
              text="option2"
            >
              <StyledComponent
                controlled={false}
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jzJRlG",
                      "isStatic": true,
                      "lastClassName": "istBgv",
                      "rules": Array [
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Option)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-jzJRlG",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                initialToggle={false}
                onClick={[Function]}
                optionType={0}
                selected={false}
                sizing="normal"
                text="option2"
              >
                <Option
                  bottom=""
                  className="sc-jzJRlG istBgv"
                  contentEditable={false}
                  controlled={false}
                  direction="right"
                  disabled={true}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  id=""
                  initialToggle={false}
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Option"
                  onClick={[Function]}
                  optionType={0}
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={
                    Object {
                      "backgroundColor": "inherit",
                      "color": "inherit",
                    }
                  }
                  testing={true}
                  text="option2"
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-jzJRlG istBgv"
                    contentEditable={false}
                    controlled={false}
                    direction="right"
                    disabled={true}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    id=""
                    initialToggle={false}
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Option"
                    onClick={[Function]}
                    onError={[Function]}
                    optionType={0}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={
                      Object {
                        "backgroundColor": "inherit",
                        "color": "inherit",
                      }
                    }
                    testing={true}
                    text="option2"
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.div
                        className="ui-option sc-jzJRlG istBgv"
                        onClick={[Function]}
                        sizing="normal"
                        style={
                          Object {
                            "backgroundColor": "inherit",
                            "color": "inherit",
                          }
                        }
                        visible={true}
                      >
                        <StyledComponent
                          className="ui-option sc-jzJRlG istBgv"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-gqjmRU",
                                "isStatic": false,
                                "lastClassName": "kynOPX",
                                "rules": Array [
                                  "
	align-items: center;
	cursor: default;
	display: inline-flex;

	> span {
		padding: 0 0.2rem;
	}

	> span:hover {
		background-color: ",
                                  [Function],
                                  ";
	}

	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-gqjmRU",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          sizing="normal"
                          style={
                            Object {
                              "backgroundColor": "inherit",
                              "color": "inherit",
                            }
                          }
                          visible={true}
                        >
                          <div
                            className="ui-option sc-jzJRlG istBgv sc-gqjmRU kynOPX"
                            onClick={[Function]}
                            style={
                              Object {
                                "backgroundColor": "inherit",
                                "color": "inherit",
                              }
                            }
                          >
                            <Styled(ButtonToggle)
                              bgColorOff="inherit"
                              bgColorOn="inherit"
                              bottom=""
                              className="sc-jzJRlG istBgv"
                              contentEditable={false}
                              controlled={false}
                              direction="right"
                              disabled={true}
                              err={null}
                              errorMessage=""
                              fgColorOff="inherit"
                              fgColorOn="inherit"
                              focus={false}
                              height=""
                              iconNameOff="square-o"
                              iconNameOn="check-square-o"
                              id=""
                              initialToggle={false}
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Option"
                              onClick={[Function]}
                              optionType={0}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={
                                Object {
                                  "backgroundColor": "inherit",
                                  "color": "inherit",
                                }
                              }
                              testing={true}
                              text="option2"
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <StyledComponent
                                bgColorOff="inherit"
                                bgColorOn="inherit"
                                bottom=""
                                className="sc-jzJRlG istBgv"
                                contentEditable={false}
                                controlled={false}
                                direction="right"
                                disabled={true}
                                err={null}
                                errorMessage=""
                                fgColorOff="inherit"
                                fgColorOn="inherit"
                                focus={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-VigVT",
                                      "isStatic": true,
                                      "lastClassName": "bwwtAd",
                                      "rules": Array [
                                        "
	display: inline;
	flex: unset;
	width: unset;
",
                                      ],
                                    },
                                    "defaultStyles": Object {},
                                    "displayName": "Styled(ButtonToggle)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-VigVT",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                    Symbol(Symbol.hasInstance): [Function],
                                  }
                                }
                                forwardedRef={null}
                                height=""
                                iconNameOff="square-o"
                                iconNameOn="check-square-o"
                                id=""
                                initialToggle={false}
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Option"
                                onClick={[Function]}
                                optionType={0}
                                padding=""
                                selected={false}
                                sizing="normal"
                                style={
                                  Object {
                                    "backgroundColor": "inherit",
                                    "color": "inherit",
                                  }
                                }
                                testing={true}
                                text="option2"
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ButtonToggle
                                  bgColorOff="inherit"
                                  bgColorOn="inherit"
                                  bottom=""
                                  className="sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                  contentEditable={false}
                                  controlled={false}
                                  direction="right"
                                  disabled={true}
                                  err={null}
                                  errorMessage=""
                                  fgColorOff="inherit"
                                  fgColorOn="inherit"
                                  focus={false}
                                  height=""
                                  iconName="bomb"
                                  iconNameOff="square-o"
                                  iconNameOn="check-square-o"
                                  iconStyle=""
                                  id=""
                                  initialToggle={false}
                                  left=""
                                  location="none"
                                  noedit={false}
                                  nohover={false}
                                  noripple={false}
                                  notheme={false}
                                  obj="Option"
                                  onClick={[Function]}
                                  optionType={0}
                                  padding=""
                                  selected={false}
                                  sizing="normal"
                                  style={
                                    Object {
                                      "backgroundColor": "inherit",
                                      "color": "inherit",
                                    }
                                  }
                                  testing={true}
                                  text="option2"
                                  theme={null}
                                  tooltip=""
                                  top=""
                                  visible={true}
                                  width=""
                                  xcss={null}
                                >
                                  <Wrapper
                                    bgColorOff="inherit"
                                    bgColorOn="inherit"
                                    bottom=""
                                    className="sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                    contentEditable={false}
                                    controlled={false}
                                    direction="right"
                                    disabled={true}
                                    err={null}
                                    errorMessage=""
                                    fgColorOff="inherit"
                                    fgColorOn="inherit"
                                    focus={false}
                                    height=""
                                    iconName="bomb"
                                    iconNameOff="square-o"
                                    iconNameOn="check-square-o"
                                    iconStyle=""
                                    id=""
                                    initialToggle={false}
                                    left=""
                                    location="none"
                                    noedit={false}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="Option"
                                    onClick={[Function]}
                                    onError={[Function]}
                                    optionType={0}
                                    padding=""
                                    reset={false}
                                    selected={false}
                                    sizing="normal"
                                    style={
                                      Object {
                                        "backgroundColor": "inherit",
                                        "color": "inherit",
                                      }
                                    }
                                    testing={true}
                                    text="option2"
                                    theme={null}
                                    tooltip=""
                                    top=""
                                    visible={true}
                                    width=""
                                    xcss={null}
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "backgroundColor": "#ffffff",
                                          "borderColor": "#c0c0c0",
                                          "color": "#000000",
                                          "headerBackgroundColor": "#004358",
                                          "headerForegroundColor": "#ffffff",
                                          "headerHoverColor": "#ffe11a",
                                          "hoverColor": "#c0c0c0",
                                          "inputBorderColor": "#c0c0c0",
                                          "itemHoverColor": "#bedb39",
                                          "selectedBackgroundColor": "#1f8a70",
                                          "selectedForegroundColor": "#ffe11a",
                                          "titleBarBackgroundColor": "#004358",
                                          "titleBarForegroundColor": "#ffe11a",
                                          "tooltipBackgroundColor": "#708090",
                                          "tooltipForegroundColor": "#ffffff",
                                          "transitionDelay": "0.5s",
                                        }
                                      }
                                    >
                                      <Button
                                        bgColorOff="inherit"
                                        bgColorOn="inherit"
                                        bottom=""
                                        className="ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                        contentEditable={false}
                                        controlled={false}
                                        direction="right"
                                        disabled={true}
                                        err={null}
                                        errorMessage=""
                                        fgColorOff="inherit"
                                        fgColorOn="inherit"
                                        focus={false}
                                        height=""
                                        iconName="square-o"
                                        iconNameOff="square-o"
                                        iconNameOn="check-square-o"
                                        iconStyle=""
                                        id=""
                                        initialToggle={false}
                                        left=""
                                        location="none"
                                        noedit={false}
                                        nohover={false}
                                        noripple={true}
                                        notheme={false}
                                        obj="Option"
                                        onClick={[Function]}
                                        optionType={0}
                                        padding=""
                                        selected={false}
                                        sizing="normal"
                                        style={
                                          Object {
                                            "backgroundColor": "inherit",
                                            "color": "inherit",
                                          }
                                        }
                                        testing={true}
                                        text="option2"
                                        theme={null}
                                        tooltip=""
                                        top=""
                                        visible={true}
                                        width=""
                                        xcss={null}
                                      >
                                        <Wrapper
                                          bgColorOff="inherit"
                                          bgColorOn="inherit"
                                          bottom=""
                                          className="ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                          contentEditable={false}
                                          controlled={false}
                                          direction="right"
                                          disabled={true}
                                          err={null}
                                          errorMessage=""
                                          fgColorOff="inherit"
                                          fgColorOn="inherit"
                                          focus={false}
                                          height=""
                                          iconName="square-o"
                                          iconNameOff="square-o"
                                          iconNameOn="check-square-o"
                                          iconStyle=""
                                          id=""
                                          initialToggle={false}
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={true}
                                          notheme={false}
                                          obj="Option"
                                          onClick={[Function]}
                                          onError={[Function]}
                                          optionType={0}
                                          padding=""
                                          reset={false}
                                          selected={false}
                                          sizing="normal"
                                          style={
                                            Object {
                                              "backgroundColor": "inherit",
                                              "color": "inherit",
                                            }
                                          }
                                          testing={true}
                                          text="option2"
                                          theme={null}
                                          tooltip=""
                                          top=""
                                          visible={true}
                                          width=""
                                          xcss={null}
                                        >
                                          <ThemeProvider
                                            theme={
                                              Object {
                                                "backgroundColor": "#ffffff",
                                                "borderColor": "#c0c0c0",
                                                "color": "#000000",
                                                "headerBackgroundColor": "#004358",
                                                "headerForegroundColor": "#ffffff",
                                                "headerHoverColor": "#ffe11a",
                                                "hoverColor": "#c0c0c0",
                                                "inputBorderColor": "#c0c0c0",
                                                "itemHoverColor": "#bedb39",
                                                "selectedBackgroundColor": "#1f8a70",
                                                "selectedForegroundColor": "#ffe11a",
                                                "titleBarBackgroundColor": "#004358",
                                                "titleBarForegroundColor": "#ffe11a",
                                                "tooltipBackgroundColor": "#708090",
                                                "tooltipForegroundColor": "#ffffff",
                                                "transitionDelay": "0.5s",
                                              }
                                            }
                                          >
                                            <styled.div
                                              className="ui-button nohover ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                              disabled={true}
                                              id="Button-0"
                                              onClick={[Function]}
                                              sizing="normal"
                                              style={
                                                Object {
                                                  "backgroundColor": "inherit",
                                                  "color": "inherit",
                                                }
                                              }
                                              visible={true}
                                            >
                                              <StyledComponent
                                                className="ui-button nohover ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                                disabled={true}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-gzVnrw",
                                                      "isStatic": false,
                                                      "lastClassName": "fqspZq",
                                                      "rules": Array [
                                                        "
	",
                                                        "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                        "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        ";
	}

	",
                                                        [Function],
                                                        "
	",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.div",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-gzVnrw",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                id="Button-0"
                                                onClick={[Function]}
                                                sizing="normal"
                                                style={
                                                  Object {
                                                    "backgroundColor": "inherit",
                                                    "color": "inherit",
                                                  }
                                                }
                                                visible={true}
                                              >
                                                <div
                                                  className="ui-button nohover ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd sc-gzVnrw fqspZq"
                                                  disabled={true}
                                                  id="Button-0"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "backgroundColor": "inherit",
                                                      "color": "inherit",
                                                    }
                                                  }
                                                >
                                                  <Icon
                                                    bottom=""
                                                    className=""
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="square-o"
                                                    id=""
                                                    imageFile=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Icon"
                                                    padding=""
                                                    selected={false}
                                                    sizing="normal"
                                                    style={Object {}}
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className=""
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="square-o"
                                                      id=""
                                                      imageFile=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="Icon"
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="normal"
                                                      style={Object {}}
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.i
                                                          bottom=""
                                                          className="ui-icon fa fa-fw fa-square-o"
                                                          contentEditable={false}
                                                          controlled={true}
                                                          direction="right"
                                                          disabled={false}
                                                          err={null}
                                                          errorMessage=""
                                                          focus={false}
                                                          height=""
                                                          iconName="square-o"
                                                          id=""
                                                          imageFile=""
                                                          left=""
                                                          location="none"
                                                          noedit={false}
                                                          nohover={false}
                                                          noripple={false}
                                                          notheme={false}
                                                          obj="Icon"
                                                          padding=""
                                                          selected={false}
                                                          sizing="normal"
                                                          style={Object {}}
                                                          testing={true}
                                                          theme={null}
                                                          tooltip=""
                                                          top=""
                                                          visible={true}
                                                          width=""
                                                          xcss={null}
                                                        >
                                                          <StyledComponent
                                                            bottom=""
                                                            className="ui-icon fa fa-fw fa-square-o"
                                                            contentEditable={false}
                                                            controlled={true}
                                                            direction="right"
                                                            disabled={false}
                                                            err={null}
                                                            errorMessage=""
                                                            focus={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bwzfXH",
                                                                  "isStatic": false,
                                                                  "lastClassName": "hBOHvv",
                                                                  "rules": Array [
                                                                    "
	text-align: center;
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.i",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bwzfXH",
                                                                "target": "i",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            height=""
                                                            iconName="square-o"
                                                            id=""
                                                            imageFile=""
                                                            left=""
                                                            location="none"
                                                            noedit={false}
                                                            nohover={false}
                                                            noripple={false}
                                                            notheme={false}
                                                            obj="Icon"
                                                            padding=""
                                                            selected={false}
                                                            sizing="normal"
                                                            style={Object {}}
                                                            testing={true}
                                                            theme={null}
                                                            tooltip=""
                                                            top=""
                                                            visible={true}
                                                            width=""
                                                            xcss={null}
                                                          >
                                                            <i
                                                              className="ui-icon fa fa-fw fa-square-o sc-bwzfXH hBOHvv"
                                                              contentEditable={false}
                                                              direction="right"
                                                              disabled={false}
                                                              height=""
                                                              id=""
                                                              selected={false}
                                                              style={Object {}}
                                                              width=""
                                                            />
                                                          </StyledComponent>
                                                        </styled.i>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Icon>
                                                </div>
                                              </StyledComponent>
                                            </styled.div>
                                          </ThemeProvider>
                                        </Wrapper>
                                      </Button>
                                    </ThemeProvider>
                                  </Wrapper>
                                </ButtonToggle>
                              </StyledComponent>
                            </Styled(ButtonToggle)>
                            <Styled(Title)
                              disabled={true}
                              layout={6}
                              noedit={true}
                              sizing="normal"
                              title="option2"
                            >
                              <StyledComponent
                                disabled={true}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-jTzLTM",
                                      "isStatic": true,
                                      "lastClassName": "eCMmlJ",
                                      "rules": Array [],
                                    },
                                    "defaultStyles": Object {},
                                    "displayName": "Styled(Title)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-jTzLTM",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                    Symbol(Symbol.hasInstance): [Function],
                                  }
                                }
                                forwardedRef={null}
                                layout={6}
                                noedit={true}
                                sizing="normal"
                                title="option2"
                              >
                                <Title
                                  bottom=""
                                  className="sc-jTzLTM eCMmlJ"
                                  contentEditable={false}
                                  controlled={true}
                                  direction="right"
                                  disabled={true}
                                  err={null}
                                  errorMessage=""
                                  focus={false}
                                  height=""
                                  id=""
                                  layout={6}
                                  left=""
                                  location="none"
                                  noedit={true}
                                  nohover={false}
                                  noripple={false}
                                  notheme={false}
                                  obj="Title"
                                  onClick={[Function]}
                                  onUpdate={[Function]}
                                  padding=""
                                  selected={false}
                                  sizing="normal"
                                  style={Object {}}
                                  testing={true}
                                  theme={null}
                                  title="option2"
                                  tooltip=""
                                  top=""
                                  visible={true}
                                  widget={null}
                                  width=""
                                  xcss={null}
                                >
                                  <Wrapper
                                    bottom=""
                                    className="sc-jTzLTM eCMmlJ"
                                    contentEditable={false}
                                    controlled={true}
                                    direction="right"
                                    disabled={true}
                                    err={null}
                                    errorMessage=""
                                    focus={false}
                                    height=""
                                    id=""
                                    layout={6}
                                    left=""
                                    location="none"
                                    noedit={true}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="Title"
                                    onClick={[Function]}
                                    onError={[Function]}
                                    onUpdate={[Function]}
                                    padding=""
                                    reset={false}
                                    selected={false}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    theme={null}
                                    title="option2"
                                    tooltip=""
                                    top=""
                                    visible={true}
                                    widget={null}
                                    width=""
                                    xcss={null}
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "backgroundColor": "#ffffff",
                                          "borderColor": "#c0c0c0",
                                          "color": "#000000",
                                          "headerBackgroundColor": "#004358",
                                          "headerForegroundColor": "#ffffff",
                                          "headerHoverColor": "#ffe11a",
                                          "hoverColor": "#c0c0c0",
                                          "inputBorderColor": "#c0c0c0",
                                          "itemHoverColor": "#bedb39",
                                          "selectedBackgroundColor": "#1f8a70",
                                          "selectedForegroundColor": "#ffe11a",
                                          "titleBarBackgroundColor": "#004358",
                                          "titleBarForegroundColor": "#ffe11a",
                                          "tooltipBackgroundColor": "#708090",
                                          "tooltipForegroundColor": "#ffffff",
                                          "transitionDelay": "0.5s",
                                        }
                                      }
                                    >
                                      <styled.div
                                        className="ui-title-bar sc-jTzLTM eCMmlJ"
                                        disabled={true}
                                        layout={6}
                                        sizing="normal"
                                        style={Object {}}
                                        visible={true}
                                      >
                                        <StyledComponent
                                          className="ui-title-bar sc-jTzLTM eCMmlJ"
                                          disabled={true}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-dnqmqq",
                                                "isStatic": false,
                                                "lastClassName": "krjgum",
                                                "rules": Array [
                                                  "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                                                  [Function],
                                                  ";
	flex-grow: 1;

	",
                                                  [Function],
                                                  "
	",
                                                  [Function],
                                                  "
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-dnqmqq",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          layout={6}
                                          sizing="normal"
                                          style={Object {}}
                                          visible={true}
                                        >
                                          <div
                                            className="ui-title-bar sc-jTzLTM eCMmlJ sc-dnqmqq krjgum"
                                            disabled={true}
                                            style={Object {}}
                                          >
                                            <Styled(Label)
                                              bottom=""
                                              className="ui-title"
                                              contentEditable={false}
                                              controlled={true}
                                              direction="right"
                                              disabled={true}
                                              err={null}
                                              errorMessage=""
                                              focus={false}
                                              height=""
                                              id=""
                                              layout={6}
                                              left=""
                                              location="none"
                                              noedit={true}
                                              nohover={false}
                                              noripple={false}
                                              notheme={false}
                                              obj="Title"
                                              onClick={[Function]}
                                              padding=""
                                              selected={false}
                                              sizing="normal"
                                              style={Object {}}
                                              testing={true}
                                              text="option2"
                                              theme={null}
                                              title="option2"
                                              tooltip=""
                                              top=""
                                              visible={true}
                                              widget={null}
                                              width=""
                                              xcss={
                                                Array [
                                                  "
	text-align: left;
	flex: 1;
",
                                                ]
                                              }
                                            >
                                              <StyledComponent
                                                bottom=""
                                                className="ui-title"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={true}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-gZMcBi",
                                                      "isStatic": false,
                                                      "lastClassName": "jLaVqp",
                                                      "rules": Array [
                                                        "
	",
                                                        "
	padding: ",
                                                        [Function],
                                                        ";

	",
                                                        [Function],
                                                        "
",
                                                        "
",
                                                      ],
                                                    },
                                                    "defaultStyles": Object {},
                                                    "displayName": "Styled(Label)",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-gZMcBi",
                                                    "target": [Function],
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                    Symbol(Symbol.hasInstance): [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                height=""
                                                id=""
                                                layout={6}
                                                left=""
                                                location="none"
                                                noedit={true}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="Title"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="normal"
                                                style={Object {}}
                                                testing={true}
                                                text="option2"
                                                theme={null}
                                                title="option2"
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                widget={null}
                                                width=""
                                                xcss={
                                                  Array [
                                                    "
	text-align: left;
	flex: 1;
",
                                                  ]
                                                }
                                              >
                                                <Label
                                                  bottom=""
                                                  className="ui-title sc-gZMcBi jLaVqp"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={true}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  height=""
                                                  id=""
                                                  layout={6}
                                                  left=""
                                                  location="none"
                                                  noedit={true}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="Title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  onDoubleClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyPress={[Function]}
                                                  onUpdate={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="normal"
                                                  style={Object {}}
                                                  testing={true}
                                                  text="option2"
                                                  theme={null}
                                                  title="option2"
                                                  tooltip=""
                                                  top=""
                                                  useedit={false}
                                                  visible={true}
                                                  widget={null}
                                                  width=""
                                                  xcss={
                                                    Array [
                                                      "
	text-align: left;
	flex: 1;
",
                                                    ]
                                                  }
                                                >
                                                  <Wrapper
                                                    bottom=""
                                                    className="ui-title sc-gZMcBi jLaVqp"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={true}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    id=""
                                                    layout={6}
                                                    left=""
                                                    location="none"
                                                    noedit={true}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    onDoubleClick={[Function]}
                                                    onError={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyPress={[Function]}
                                                    onUpdate={[Function]}
                                                    padding=""
                                                    reset={false}
                                                    selected={false}
                                                    sizing="normal"
                                                    style={Object {}}
                                                    testing={true}
                                                    text="option2"
                                                    theme={null}
                                                    title="option2"
                                                    tooltip=""
                                                    top=""
                                                    useedit={false}
                                                    visible={true}
                                                    widget={null}
                                                    width=""
                                                    xcss={
                                                      Array [
                                                        "
	text-align: left;
	flex: 1;
",
                                                      ]
                                                    }
                                                  >
                                                    <ThemeProvider
                                                      theme={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#c0c0c0",
                                                          "color": "#000000",
                                                          "headerBackgroundColor": "#004358",
                                                          "headerForegroundColor": "#ffffff",
                                                          "headerHoverColor": "#ffe11a",
                                                          "hoverColor": "#c0c0c0",
                                                          "inputBorderColor": "#c0c0c0",
                                                          "itemHoverColor": "#bedb39",
                                                          "selectedBackgroundColor": "#1f8a70",
                                                          "selectedForegroundColor": "#ffe11a",
                                                          "titleBarBackgroundColor": "#004358",
                                                          "titleBarForegroundColor": "#ffe11a",
                                                          "tooltipBackgroundColor": "#708090",
                                                          "tooltipForegroundColor": "#ffffff",
                                                          "transitionDelay": "0.5s",
                                                        }
                                                      }
                                                    >
                                                      <styled.span
                                                        className="ui-label ui-title sc-gZMcBi jLaVqp"
                                                        contentEditable={false}
                                                        disabled={true}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDoubleClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyPress={[Function]}
                                                        sizing="normal"
                                                        style={Object {}}
                                                        suppressContentEditableWarning={true}
                                                        visible={true}
                                                      >
                                                        <StyledComponent
                                                          className="ui-label ui-title sc-gZMcBi jLaVqp"
                                                          contentEditable={false}
                                                          disabled={true}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htoDjs",
                                                                "isStatic": false,
                                                                "lastClassName": "iouaLl",
                                                                "rules": Array [
                                                                  "
	background-color: inherit;

	",
                                                                  [Function],
                                                                  "
	",
                                                                  [Function],
                                                                  "
	",
                                                                  [Function],
                                                                  "
",
                                                                ],
                                                              },
                                                              "displayName": "styled.span",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htoDjs",
                                                              "target": "span",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={[Function]}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onDoubleClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyPress={[Function]}
                                                          sizing="normal"
                                                          style={Object {}}
                                                          suppressContentEditableWarning={true}
                                                          visible={true}
                                                        >
                                                          <span
                                                            className="ui-label ui-title sc-gZMcBi jLaVqp sc-htoDjs iouaLl"
                                                            contentEditable={false}
                                                            disabled={true}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDoubleClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyPress={[Function]}
                                                            style={Object {}}
                                                            suppressContentEditableWarning={true}
                                                          >
                                                            option2
                                                          </span>
                                                        </StyledComponent>
                                                      </styled.span>
                                                    </ThemeProvider>
                                                  </Wrapper>
                                                </Label>
                                              </StyledComponent>
                                            </Styled(Label)>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </ThemeProvider>
                                  </Wrapper>
                                </Title>
                              </StyledComponent>
                            </Styled(Title)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </ThemeProvider>
                  </Wrapper>
                </Option>
              </StyledComponent>
            </Styled(Option)>
            <Styled(Option)
              controlled={false}
              disabled={true}
              initialToggle={false}
              key="option3"
              onClick={[Function]}
              optionType={0}
              selected={false}
              sizing="normal"
              text="option3"
            >
              <StyledComponent
                controlled={false}
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-jzJRlG",
                      "isStatic": true,
                      "lastClassName": "istBgv",
                      "rules": Array [
                        "
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(Option)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-jzJRlG",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                initialToggle={false}
                onClick={[Function]}
                optionType={0}
                selected={false}
                sizing="normal"
                text="option3"
              >
                <Option
                  bottom=""
                  className="sc-jzJRlG istBgv"
                  contentEditable={false}
                  controlled={false}
                  direction="right"
                  disabled={true}
                  err={null}
                  errorMessage=""
                  focus={false}
                  height=""
                  id=""
                  initialToggle={false}
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Option"
                  onClick={[Function]}
                  optionType={0}
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={
                    Object {
                      "backgroundColor": "inherit",
                      "color": "inherit",
                    }
                  }
                  testing={true}
                  text="option3"
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bottom=""
                    className="sc-jzJRlG istBgv"
                    contentEditable={false}
                    controlled={false}
                    direction="right"
                    disabled={true}
                    err={null}
                    errorMessage=""
                    focus={false}
                    height=""
                    id=""
                    initialToggle={false}
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Option"
                    onClick={[Function]}
                    onError={[Function]}
                    optionType={0}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={
                      Object {
                        "backgroundColor": "inherit",
                        "color": "inherit",
                      }
                    }
                    testing={true}
                    text="option3"
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <styled.div
                        className="ui-option sc-jzJRlG istBgv"
                        onClick={[Function]}
                        sizing="normal"
                        style={
                          Object {
                            "backgroundColor": "inherit",
                            "color": "inherit",
                          }
                        }
                        visible={true}
                      >
                        <StyledComponent
                          className="ui-option sc-jzJRlG istBgv"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-gqjmRU",
                                "isStatic": false,
                                "lastClassName": "kynOPX",
                                "rules": Array [
                                  "
	align-items: center;
	cursor: default;
	display: inline-flex;

	> span {
		padding: 0 0.2rem;
	}

	> span:hover {
		background-color: ",
                                  [Function],
                                  ";
	}

	",
                                  [Function],
                                  "
	",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-gqjmRU",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          sizing="normal"
                          style={
                            Object {
                              "backgroundColor": "inherit",
                              "color": "inherit",
                            }
                          }
                          visible={true}
                        >
                          <div
                            className="ui-option sc-jzJRlG istBgv sc-gqjmRU kynOPX"
                            onClick={[Function]}
                            style={
                              Object {
                                "backgroundColor": "inherit",
                                "color": "inherit",
                              }
                            }
                          >
                            <Styled(ButtonToggle)
                              bgColorOff="inherit"
                              bgColorOn="inherit"
                              bottom=""
                              className="sc-jzJRlG istBgv"
                              contentEditable={false}
                              controlled={false}
                              direction="right"
                              disabled={true}
                              err={null}
                              errorMessage=""
                              fgColorOff="inherit"
                              fgColorOn="inherit"
                              focus={false}
                              height=""
                              iconNameOff="square-o"
                              iconNameOn="check-square-o"
                              id=""
                              initialToggle={false}
                              left=""
                              location="none"
                              noedit={false}
                              nohover={false}
                              noripple={false}
                              notheme={false}
                              obj="Option"
                              onClick={[Function]}
                              optionType={0}
                              padding=""
                              selected={false}
                              sizing="normal"
                              style={
                                Object {
                                  "backgroundColor": "inherit",
                                  "color": "inherit",
                                }
                              }
                              testing={true}
                              text="option3"
                              theme={null}
                              tooltip=""
                              top=""
                              visible={true}
                              width=""
                              xcss={null}
                            >
                              <StyledComponent
                                bgColorOff="inherit"
                                bgColorOn="inherit"
                                bottom=""
                                className="sc-jzJRlG istBgv"
                                contentEditable={false}
                                controlled={false}
                                direction="right"
                                disabled={true}
                                err={null}
                                errorMessage=""
                                fgColorOff="inherit"
                                fgColorOn="inherit"
                                focus={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-VigVT",
                                      "isStatic": true,
                                      "lastClassName": "bwwtAd",
                                      "rules": Array [
                                        "
	display: inline;
	flex: unset;
	width: unset;
",
                                      ],
                                    },
                                    "defaultStyles": Object {},
                                    "displayName": "Styled(ButtonToggle)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-VigVT",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                    Symbol(Symbol.hasInstance): [Function],
                                  }
                                }
                                forwardedRef={null}
                                height=""
                                iconNameOff="square-o"
                                iconNameOn="check-square-o"
                                id=""
                                initialToggle={false}
                                left=""
                                location="none"
                                noedit={false}
                                nohover={false}
                                noripple={false}
                                notheme={false}
                                obj="Option"
                                onClick={[Function]}
                                optionType={0}
                                padding=""
                                selected={false}
                                sizing="normal"
                                style={
                                  Object {
                                    "backgroundColor": "inherit",
                                    "color": "inherit",
                                  }
                                }
                                testing={true}
                                text="option3"
                                theme={null}
                                tooltip=""
                                top=""
                                visible={true}
                                width=""
                                xcss={null}
                              >
                                <ButtonToggle
                                  bgColorOff="inherit"
                                  bgColorOn="inherit"
                                  bottom=""
                                  className="sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                  contentEditable={false}
                                  controlled={false}
                                  direction="right"
                                  disabled={true}
                                  err={null}
                                  errorMessage=""
                                  fgColorOff="inherit"
                                  fgColorOn="inherit"
                                  focus={false}
                                  height=""
                                  iconName="bomb"
                                  iconNameOff="square-o"
                                  iconNameOn="check-square-o"
                                  iconStyle=""
                                  id=""
                                  initialToggle={false}
                                  left=""
                                  location="none"
                                  noedit={false}
                                  nohover={false}
                                  noripple={false}
                                  notheme={false}
                                  obj="Option"
                                  onClick={[Function]}
                                  optionType={0}
                                  padding=""
                                  selected={false}
                                  sizing="normal"
                                  style={
                                    Object {
                                      "backgroundColor": "inherit",
                                      "color": "inherit",
                                    }
                                  }
                                  testing={true}
                                  text="option3"
                                  theme={null}
                                  tooltip=""
                                  top=""
                                  visible={true}
                                  width=""
                                  xcss={null}
                                >
                                  <Wrapper
                                    bgColorOff="inherit"
                                    bgColorOn="inherit"
                                    bottom=""
                                    className="sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                    contentEditable={false}
                                    controlled={false}
                                    direction="right"
                                    disabled={true}
                                    err={null}
                                    errorMessage=""
                                    fgColorOff="inherit"
                                    fgColorOn="inherit"
                                    focus={false}
                                    height=""
                                    iconName="bomb"
                                    iconNameOff="square-o"
                                    iconNameOn="check-square-o"
                                    iconStyle=""
                                    id=""
                                    initialToggle={false}
                                    left=""
                                    location="none"
                                    noedit={false}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="Option"
                                    onClick={[Function]}
                                    onError={[Function]}
                                    optionType={0}
                                    padding=""
                                    reset={false}
                                    selected={false}
                                    sizing="normal"
                                    style={
                                      Object {
                                        "backgroundColor": "inherit",
                                        "color": "inherit",
                                      }
                                    }
                                    testing={true}
                                    text="option3"
                                    theme={null}
                                    tooltip=""
                                    top=""
                                    visible={true}
                                    width=""
                                    xcss={null}
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "backgroundColor": "#ffffff",
                                          "borderColor": "#c0c0c0",
                                          "color": "#000000",
                                          "headerBackgroundColor": "#004358",
                                          "headerForegroundColor": "#ffffff",
                                          "headerHoverColor": "#ffe11a",
                                          "hoverColor": "#c0c0c0",
                                          "inputBorderColor": "#c0c0c0",
                                          "itemHoverColor": "#bedb39",
                                          "selectedBackgroundColor": "#1f8a70",
                                          "selectedForegroundColor": "#ffe11a",
                                          "titleBarBackgroundColor": "#004358",
                                          "titleBarForegroundColor": "#ffe11a",
                                          "tooltipBackgroundColor": "#708090",
                                          "tooltipForegroundColor": "#ffffff",
                                          "transitionDelay": "0.5s",
                                        }
                                      }
                                    >
                                      <Button
                                        bgColorOff="inherit"
                                        bgColorOn="inherit"
                                        bottom=""
                                        className="ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                        contentEditable={false}
                                        controlled={false}
                                        direction="right"
                                        disabled={true}
                                        err={null}
                                        errorMessage=""
                                        fgColorOff="inherit"
                                        fgColorOn="inherit"
                                        focus={false}
                                        height=""
                                        iconName="square-o"
                                        iconNameOff="square-o"
                                        iconNameOn="check-square-o"
                                        iconStyle=""
                                        id=""
                                        initialToggle={false}
                                        left=""
                                        location="none"
                                        noedit={false}
                                        nohover={false}
                                        noripple={true}
                                        notheme={false}
                                        obj="Option"
                                        onClick={[Function]}
                                        optionType={0}
                                        padding=""
                                        selected={false}
                                        sizing="normal"
                                        style={
                                          Object {
                                            "backgroundColor": "inherit",
                                            "color": "inherit",
                                          }
                                        }
                                        testing={true}
                                        text="option3"
                                        theme={null}
                                        tooltip=""
                                        top=""
                                        visible={true}
                                        width=""
                                        xcss={null}
                                      >
                                        <Wrapper
                                          bgColorOff="inherit"
                                          bgColorOn="inherit"
                                          bottom=""
                                          className="ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                          contentEditable={false}
                                          controlled={false}
                                          direction="right"
                                          disabled={true}
                                          err={null}
                                          errorMessage=""
                                          fgColorOff="inherit"
                                          fgColorOn="inherit"
                                          focus={false}
                                          height=""
                                          iconName="square-o"
                                          iconNameOff="square-o"
                                          iconNameOn="check-square-o"
                                          iconStyle=""
                                          id=""
                                          initialToggle={false}
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={true}
                                          notheme={false}
                                          obj="Option"
                                          onClick={[Function]}
                                          onError={[Function]}
                                          optionType={0}
                                          padding=""
                                          reset={false}
                                          selected={false}
                                          sizing="normal"
                                          style={
                                            Object {
                                              "backgroundColor": "inherit",
                                              "color": "inherit",
                                            }
                                          }
                                          testing={true}
                                          text="option3"
                                          theme={null}
                                          tooltip=""
                                          top=""
                                          visible={true}
                                          width=""
                                          xcss={null}
                                        >
                                          <ThemeProvider
                                            theme={
                                              Object {
                                                "backgroundColor": "#ffffff",
                                                "borderColor": "#c0c0c0",
                                                "color": "#000000",
                                                "headerBackgroundColor": "#004358",
                                                "headerForegroundColor": "#ffffff",
                                                "headerHoverColor": "#ffe11a",
                                                "hoverColor": "#c0c0c0",
                                                "inputBorderColor": "#c0c0c0",
                                                "itemHoverColor": "#bedb39",
                                                "selectedBackgroundColor": "#1f8a70",
                                                "selectedForegroundColor": "#ffe11a",
                                                "titleBarBackgroundColor": "#004358",
                                                "titleBarForegroundColor": "#ffe11a",
                                                "tooltipBackgroundColor": "#708090",
                                                "tooltipForegroundColor": "#ffffff",
                                                "transitionDelay": "0.5s",
                                              }
                                            }
                                          >
                                            <styled.div
                                              className="ui-button nohover ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                              disabled={true}
                                              id="Button-0"
                                              onClick={[Function]}
                                              sizing="normal"
                                              style={
                                                Object {
                                                  "backgroundColor": "inherit",
                                                  "color": "inherit",
                                                }
                                              }
                                              visible={true}
                                            >
                                              <StyledComponent
                                                className="ui-button nohover ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd"
                                                disabled={true}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-gzVnrw",
                                                      "isStatic": false,
                                                      "lastClassName": "fqspZq",
                                                      "rules": Array [
                                                        "
	",
                                                        "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                                        "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        ";
	}

	",
                                                        [Function],
                                                        "
	",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.div",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-gzVnrw",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                id="Button-0"
                                                onClick={[Function]}
                                                sizing="normal"
                                                style={
                                                  Object {
                                                    "backgroundColor": "inherit",
                                                    "color": "inherit",
                                                  }
                                                }
                                                visible={true}
                                              >
                                                <div
                                                  className="ui-button nohover ui-button-toggle sc-jzJRlG istBgv sc-VigVT bwwtAd sc-gzVnrw fqspZq"
                                                  disabled={true}
                                                  id="Button-0"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "backgroundColor": "inherit",
                                                      "color": "inherit",
                                                    }
                                                  }
                                                >
                                                  <Icon
                                                    bottom=""
                                                    className=""
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={false}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    iconName="square-o"
                                                    id=""
                                                    imageFile=""
                                                    left=""
                                                    location="none"
                                                    noedit={false}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Icon"
                                                    padding=""
                                                    selected={false}
                                                    sizing="normal"
                                                    style={Object {}}
                                                    testing={true}
                                                    theme={null}
                                                    tooltip=""
                                                    top=""
                                                    visible={true}
                                                    width=""
                                                    xcss={null}
                                                  >
                                                    <Wrapper
                                                      bottom=""
                                                      className=""
                                                      contentEditable={false}
                                                      controlled={true}
                                                      direction="right"
                                                      disabled={false}
                                                      err={null}
                                                      errorMessage=""
                                                      focus={false}
                                                      height=""
                                                      iconName="square-o"
                                                      id=""
                                                      imageFile=""
                                                      left=""
                                                      location="none"
                                                      noedit={false}
                                                      nohover={false}
                                                      noripple={false}
                                                      notheme={false}
                                                      obj="Icon"
                                                      onError={[Function]}
                                                      padding=""
                                                      reset={false}
                                                      selected={false}
                                                      sizing="normal"
                                                      style={Object {}}
                                                      testing={true}
                                                      theme={null}
                                                      tooltip=""
                                                      top=""
                                                      visible={true}
                                                      width=""
                                                      xcss={null}
                                                    >
                                                      <ThemeProvider
                                                        theme={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderColor": "#c0c0c0",
                                                            "color": "#000000",
                                                            "headerBackgroundColor": "#004358",
                                                            "headerForegroundColor": "#ffffff",
                                                            "headerHoverColor": "#ffe11a",
                                                            "hoverColor": "#c0c0c0",
                                                            "inputBorderColor": "#c0c0c0",
                                                            "itemHoverColor": "#bedb39",
                                                            "selectedBackgroundColor": "#1f8a70",
                                                            "selectedForegroundColor": "#ffe11a",
                                                            "titleBarBackgroundColor": "#004358",
                                                            "titleBarForegroundColor": "#ffe11a",
                                                            "tooltipBackgroundColor": "#708090",
                                                            "tooltipForegroundColor": "#ffffff",
                                                            "transitionDelay": "0.5s",
                                                          }
                                                        }
                                                      >
                                                        <styled.i
                                                          bottom=""
                                                          className="ui-icon fa fa-fw fa-square-o"
                                                          contentEditable={false}
                                                          controlled={true}
                                                          direction="right"
                                                          disabled={false}
                                                          err={null}
                                                          errorMessage=""
                                                          focus={false}
                                                          height=""
                                                          iconName="square-o"
                                                          id=""
                                                          imageFile=""
                                                          left=""
                                                          location="none"
                                                          noedit={false}
                                                          nohover={false}
                                                          noripple={false}
                                                          notheme={false}
                                                          obj="Icon"
                                                          padding=""
                                                          selected={false}
                                                          sizing="normal"
                                                          style={Object {}}
                                                          testing={true}
                                                          theme={null}
                                                          tooltip=""
                                                          top=""
                                                          visible={true}
                                                          width=""
                                                          xcss={null}
                                                        >
                                                          <StyledComponent
                                                            bottom=""
                                                            className="ui-icon fa fa-fw fa-square-o"
                                                            contentEditable={false}
                                                            controlled={true}
                                                            direction="right"
                                                            disabled={false}
                                                            err={null}
                                                            errorMessage=""
                                                            focus={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bwzfXH",
                                                                  "isStatic": false,
                                                                  "lastClassName": "hBOHvv",
                                                                  "rules": Array [
                                                                    "
	text-align: center;
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
	",
                                                                    [Function],
                                                                    "
",
                                                                  ],
                                                                },
                                                                "displayName": "styled.i",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bwzfXH",
                                                                "target": "i",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            height=""
                                                            iconName="square-o"
                                                            id=""
                                                            imageFile=""
                                                            left=""
                                                            location="none"
                                                            noedit={false}
                                                            nohover={false}
                                                            noripple={false}
                                                            notheme={false}
                                                            obj="Icon"
                                                            padding=""
                                                            selected={false}
                                                            sizing="normal"
                                                            style={Object {}}
                                                            testing={true}
                                                            theme={null}
                                                            tooltip=""
                                                            top=""
                                                            visible={true}
                                                            width=""
                                                            xcss={null}
                                                          >
                                                            <i
                                                              className="ui-icon fa fa-fw fa-square-o sc-bwzfXH hBOHvv"
                                                              contentEditable={false}
                                                              direction="right"
                                                              disabled={false}
                                                              height=""
                                                              id=""
                                                              selected={false}
                                                              style={Object {}}
                                                              width=""
                                                            />
                                                          </StyledComponent>
                                                        </styled.i>
                                                      </ThemeProvider>
                                                    </Wrapper>
                                                  </Icon>
                                                </div>
                                              </StyledComponent>
                                            </styled.div>
                                          </ThemeProvider>
                                        </Wrapper>
                                      </Button>
                                    </ThemeProvider>
                                  </Wrapper>
                                </ButtonToggle>
                              </StyledComponent>
                            </Styled(ButtonToggle)>
                            <Styled(Title)
                              disabled={true}
                              layout={6}
                              noedit={true}
                              sizing="normal"
                              title="option3"
                            >
                              <StyledComponent
                                disabled={true}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-jTzLTM",
                                      "isStatic": true,
                                      "lastClassName": "eCMmlJ",
                                      "rules": Array [],
                                    },
                                    "defaultStyles": Object {},
                                    "displayName": "Styled(Title)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-jTzLTM",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                    Symbol(Symbol.hasInstance): [Function],
                                  }
                                }
                                forwardedRef={null}
                                layout={6}
                                noedit={true}
                                sizing="normal"
                                title="option3"
                              >
                                <Title
                                  bottom=""
                                  className="sc-jTzLTM eCMmlJ"
                                  contentEditable={false}
                                  controlled={true}
                                  direction="right"
                                  disabled={true}
                                  err={null}
                                  errorMessage=""
                                  focus={false}
                                  height=""
                                  id=""
                                  layout={6}
                                  left=""
                                  location="none"
                                  noedit={true}
                                  nohover={false}
                                  noripple={false}
                                  notheme={false}
                                  obj="Title"
                                  onClick={[Function]}
                                  onUpdate={[Function]}
                                  padding=""
                                  selected={false}
                                  sizing="normal"
                                  style={Object {}}
                                  testing={true}
                                  theme={null}
                                  title="option3"
                                  tooltip=""
                                  top=""
                                  visible={true}
                                  widget={null}
                                  width=""
                                  xcss={null}
                                >
                                  <Wrapper
                                    bottom=""
                                    className="sc-jTzLTM eCMmlJ"
                                    contentEditable={false}
                                    controlled={true}
                                    direction="right"
                                    disabled={true}
                                    err={null}
                                    errorMessage=""
                                    focus={false}
                                    height=""
                                    id=""
                                    layout={6}
                                    left=""
                                    location="none"
                                    noedit={true}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="Title"
                                    onClick={[Function]}
                                    onError={[Function]}
                                    onUpdate={[Function]}
                                    padding=""
                                    reset={false}
                                    selected={false}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    theme={null}
                                    title="option3"
                                    tooltip=""
                                    top=""
                                    visible={true}
                                    widget={null}
                                    width=""
                                    xcss={null}
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "backgroundColor": "#ffffff",
                                          "borderColor": "#c0c0c0",
                                          "color": "#000000",
                                          "headerBackgroundColor": "#004358",
                                          "headerForegroundColor": "#ffffff",
                                          "headerHoverColor": "#ffe11a",
                                          "hoverColor": "#c0c0c0",
                                          "inputBorderColor": "#c0c0c0",
                                          "itemHoverColor": "#bedb39",
                                          "selectedBackgroundColor": "#1f8a70",
                                          "selectedForegroundColor": "#ffe11a",
                                          "titleBarBackgroundColor": "#004358",
                                          "titleBarForegroundColor": "#ffe11a",
                                          "tooltipBackgroundColor": "#708090",
                                          "tooltipForegroundColor": "#ffffff",
                                          "transitionDelay": "0.5s",
                                        }
                                      }
                                    >
                                      <styled.div
                                        className="ui-title-bar sc-jTzLTM eCMmlJ"
                                        disabled={true}
                                        layout={6}
                                        sizing="normal"
                                        style={Object {}}
                                        visible={true}
                                      >
                                        <StyledComponent
                                          className="ui-title-bar sc-jTzLTM eCMmlJ"
                                          disabled={true}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-dnqmqq",
                                                "isStatic": false,
                                                "lastClassName": "krjgum",
                                                "rules": Array [
                                                  "
	box-sizing: border-box;
	display: flex;
	flex-direction: ",
                                                  [Function],
                                                  ";
	flex-grow: 1;

	",
                                                  [Function],
                                                  "
	",
                                                  [Function],
                                                  "
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-dnqmqq",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          layout={6}
                                          sizing="normal"
                                          style={Object {}}
                                          visible={true}
                                        >
                                          <div
                                            className="ui-title-bar sc-jTzLTM eCMmlJ sc-dnqmqq krjgum"
                                            disabled={true}
                                            style={Object {}}
                                          >
                                            <Styled(Label)
                                              bottom=""
                                              className="ui-title"
                                              contentEditable={false}
                                              controlled={true}
                                              direction="right"
                                              disabled={true}
                                              err={null}
                                              errorMessage=""
                                              focus={false}
                                              height=""
                                              id=""
                                              layout={6}
                                              left=""
                                              location="none"
                                              noedit={true}
                                              nohover={false}
                                              noripple={false}
                                              notheme={false}
                                              obj="Title"
                                              onClick={[Function]}
                                              padding=""
                                              selected={false}
                                              sizing="normal"
                                              style={Object {}}
                                              testing={true}
                                              text="option3"
                                              theme={null}
                                              title="option3"
                                              tooltip=""
                                              top=""
                                              visible={true}
                                              widget={null}
                                              width=""
                                              xcss={
                                                Array [
                                                  "
	text-align: left;
	flex: 1;
",
                                                ]
                                              }
                                            >
                                              <StyledComponent
                                                bottom=""
                                                className="ui-title"
                                                contentEditable={false}
                                                controlled={true}
                                                direction="right"
                                                disabled={true}
                                                err={null}
                                                errorMessage=""
                                                focus={false}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-gZMcBi",
                                                      "isStatic": false,
                                                      "lastClassName": "jLaVqp",
                                                      "rules": Array [
                                                        "
	",
                                                        "
	padding: ",
                                                        [Function],
                                                        ";

	",
                                                        [Function],
                                                        "
",
                                                        "
",
                                                      ],
                                                    },
                                                    "defaultStyles": Object {},
                                                    "displayName": "Styled(Label)",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-gZMcBi",
                                                    "target": [Function],
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                    Symbol(Symbol.hasInstance): [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                height=""
                                                id=""
                                                layout={6}
                                                left=""
                                                location="none"
                                                noedit={true}
                                                nohover={false}
                                                noripple={false}
                                                notheme={false}
                                                obj="Title"
                                                onClick={[Function]}
                                                padding=""
                                                selected={false}
                                                sizing="normal"
                                                style={Object {}}
                                                testing={true}
                                                text="option3"
                                                theme={null}
                                                title="option3"
                                                tooltip=""
                                                top=""
                                                visible={true}
                                                widget={null}
                                                width=""
                                                xcss={
                                                  Array [
                                                    "
	text-align: left;
	flex: 1;
",
                                                  ]
                                                }
                                              >
                                                <Label
                                                  bottom=""
                                                  className="ui-title sc-gZMcBi jLaVqp"
                                                  contentEditable={false}
                                                  controlled={true}
                                                  direction="right"
                                                  disabled={true}
                                                  err={null}
                                                  errorMessage=""
                                                  focus={false}
                                                  height=""
                                                  id=""
                                                  layout={6}
                                                  left=""
                                                  location="none"
                                                  noedit={true}
                                                  nohover={false}
                                                  noripple={false}
                                                  notheme={false}
                                                  obj="Title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  onDoubleClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyPress={[Function]}
                                                  onUpdate={[Function]}
                                                  padding=""
                                                  selected={false}
                                                  sizing="normal"
                                                  style={Object {}}
                                                  testing={true}
                                                  text="option3"
                                                  theme={null}
                                                  title="option3"
                                                  tooltip=""
                                                  top=""
                                                  useedit={false}
                                                  visible={true}
                                                  widget={null}
                                                  width=""
                                                  xcss={
                                                    Array [
                                                      "
	text-align: left;
	flex: 1;
",
                                                    ]
                                                  }
                                                >
                                                  <Wrapper
                                                    bottom=""
                                                    className="ui-title sc-gZMcBi jLaVqp"
                                                    contentEditable={false}
                                                    controlled={true}
                                                    direction="right"
                                                    disabled={true}
                                                    err={null}
                                                    errorMessage=""
                                                    focus={false}
                                                    height=""
                                                    id=""
                                                    layout={6}
                                                    left=""
                                                    location="none"
                                                    noedit={true}
                                                    nohover={false}
                                                    noripple={false}
                                                    notheme={false}
                                                    obj="Title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    onDoubleClick={[Function]}
                                                    onError={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyPress={[Function]}
                                                    onUpdate={[Function]}
                                                    padding=""
                                                    reset={false}
                                                    selected={false}
                                                    sizing="normal"
                                                    style={Object {}}
                                                    testing={true}
                                                    text="option3"
                                                    theme={null}
                                                    title="option3"
                                                    tooltip=""
                                                    top=""
                                                    useedit={false}
                                                    visible={true}
                                                    widget={null}
                                                    width=""
                                                    xcss={
                                                      Array [
                                                        "
	text-align: left;
	flex: 1;
",
                                                      ]
                                                    }
                                                  >
                                                    <ThemeProvider
                                                      theme={
                                                        Object {
                                                          "backgroundColor": "#ffffff",
                                                          "borderColor": "#c0c0c0",
                                                          "color": "#000000",
                                                          "headerBackgroundColor": "#004358",
                                                          "headerForegroundColor": "#ffffff",
                                                          "headerHoverColor": "#ffe11a",
                                                          "hoverColor": "#c0c0c0",
                                                          "inputBorderColor": "#c0c0c0",
                                                          "itemHoverColor": "#bedb39",
                                                          "selectedBackgroundColor": "#1f8a70",
                                                          "selectedForegroundColor": "#ffe11a",
                                                          "titleBarBackgroundColor": "#004358",
                                                          "titleBarForegroundColor": "#ffe11a",
                                                          "tooltipBackgroundColor": "#708090",
                                                          "tooltipForegroundColor": "#ffffff",
                                                          "transitionDelay": "0.5s",
                                                        }
                                                      }
                                                    >
                                                      <styled.span
                                                        className="ui-label ui-title sc-gZMcBi jLaVqp"
                                                        contentEditable={false}
                                                        disabled={true}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDoubleClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyPress={[Function]}
                                                        sizing="normal"
                                                        style={Object {}}
                                                        suppressContentEditableWarning={true}
                                                        visible={true}
                                                      >
                                                        <StyledComponent
                                                          className="ui-label ui-title sc-gZMcBi jLaVqp"
                                                          contentEditable={false}
                                                          disabled={true}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htoDjs",
                                                                "isStatic": false,
                                                                "lastClassName": "iouaLl",
                                                                "rules": Array [
                                                                  "
	background-color: inherit;

	",
                                                                  [Function],
                                                                  "
	",
                                                                  [Function],
                                                                  "
	",
                                                                  [Function],
                                                                  "
",
                                                                ],
                                                              },
                                                              "displayName": "styled.span",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htoDjs",
                                                              "target": "span",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={[Function]}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onDoubleClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyPress={[Function]}
                                                          sizing="normal"
                                                          style={Object {}}
                                                          suppressContentEditableWarning={true}
                                                          visible={true}
                                                        >
                                                          <span
                                                            className="ui-label ui-title sc-gZMcBi jLaVqp sc-htoDjs iouaLl"
                                                            contentEditable={false}
                                                            disabled={true}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDoubleClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyPress={[Function]}
                                                            style={Object {}}
                                                            suppressContentEditableWarning={true}
                                                          >
                                                            option3
                                                          </span>
                                                        </StyledComponent>
                                                      </styled.span>
                                                    </ThemeProvider>
                                                  </Wrapper>
                                                </Label>
                                              </StyledComponent>
                                            </Styled(Label)>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </ThemeProvider>
                                  </Wrapper>
                                </Title>
                              </StyledComponent>
                            </Styled(Title)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </ThemeProvider>
                  </Wrapper>
                </Option>
              </StyledComponent>
            </Styled(Option)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</OptionGroup>
`;

exports[`Test retrieval of OptionGroup props object 1`] = `
Object {
  "bottom": "",
  "children": null,
  "className": "",
  "contentEditable": false,
  "controlled": true,
  "default": "",
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": "",
  "focus": false,
  "height": "",
  "id": "",
  "left": "",
  "location": "none",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "notheme": false,
  "obj": "OptionGroup",
  "onSelect": [Function],
  "optionType": 0,
  "options": Array [],
  "padding": "",
  "selected": false,
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "theme": null,
  "title": "",
  "tooltip": "",
  "top": "",
  "visible": true,
  "width": "",
  "xcss": null,
}
`;
