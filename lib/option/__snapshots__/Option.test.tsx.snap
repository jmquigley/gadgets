// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Creation of the Option control (circle) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={3}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="circle-o"
      iconNameOn="check-circle-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={3}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (circleFilled) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={4}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="circle-o"
      iconNameOn="circle"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={4}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (circleReverse) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={5}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="circle-o"
      iconNameOn="check-circle"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={5}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (dot) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={8}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="circle-o"
      iconNameOn="dot-circle-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={8}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (inherit) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={0}
  padding=""
  reset={false}
  selected={false}
  sizing="inherit"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="inherit"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={0}
      padding=""
      selected={false}
      sizing="inherit"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="inherit"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (large) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={0}
  padding=""
  reset={false}
  selected={false}
  sizing="large"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="large"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={0}
      padding=""
      selected={false}
      sizing="large"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="large"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (medium) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={0}
  padding=""
  reset={false}
  selected={false}
  sizing="medium"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="medium"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={0}
      padding=""
      selected={false}
      sizing="medium"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="medium"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (normal) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={0}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={0}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (small) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={0}
  padding=""
  reset={false}
  selected={false}
  sizing="small"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="small"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={0}
      padding=""
      selected={false}
      sizing="small"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="small"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (square) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={0}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={0}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (squareFilled) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={1}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="square"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={1}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (squareReverse) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={2}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={2}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (star) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={9}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="star-o"
      iconNameOn="star"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={9}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (times) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={6}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="circle-o"
      iconNameOn="times-circle-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={6}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (timesReverse) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={7}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="circle-o"
      iconNameOn="times-circle"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={7}
      padding=""
      selected={false}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="normal"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (xlarge) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={0}
  padding=""
  reset={false}
  selected={false}
  sizing="xlarge"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="xlarge"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={0}
      padding=""
      selected={false}
      sizing="xlarge"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="xlarge"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (xsmall) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={0}
  padding=""
  reset={false}
  selected={false}
  sizing="xsmall"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="xsmall"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={0}
      padding=""
      selected={false}
      sizing="xsmall"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="xsmall"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (xxlarge) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={0}
  padding=""
  reset={false}
  selected={false}
  sizing="xxlarge"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="xxlarge"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={0}
      padding=""
      selected={false}
      sizing="xxlarge"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="xxlarge"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Creation of the Option control (xxsmall) 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[Function]}
  onError={[Function]}
  optionType={0}
  padding=""
  reset={false}
  selected={false}
  sizing="xxsmall"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text="test"
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-option test-class"
    onClick={[Function]}
    sizing="xxsmall"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    visible={true}
  >
    <Styled(ButtonToggle)
      bgColorOff="inherit"
      bgColorOn="inherit"
      bottom=""
      className="test-class"
      contentEditable={false}
      controlled={false}
      direction="right"
      disabled={false}
      err={null}
      errorMessage=""
      fgColorOff="inherit"
      fgColorOn="inherit"
      focus={false}
      height=""
      iconNameOff="square-o"
      iconNameOn="check-square-o"
      id=""
      initialToggle={false}
      left=""
      location="none"
      noedit={false}
      nohover={false}
      noripple={false}
      notheme={false}
      obj="Option"
      onClick={[Function]}
      optionType={0}
      padding=""
      selected={false}
      sizing="xxsmall"
      style={
        Object {
          "backgroundColor": "inherit",
          "color": "inherit",
        }
      }
      testing={true}
      text="test"
      theme={null}
      tooltip=""
      top=""
      visible={true}
      width=""
      xcss={null}
    />
    <Styled(Title)
      disabled={false}
      layout={6}
      noedit={true}
      sizing="xxsmall"
      title="test"
    />
  </styled.div>
</Wrapper>
`;

exports[`Test Option control click event 1`] = `
<Option
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[MockFunction]}
  optionType={0}
  padding=""
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text=""
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    initialToggle={false}
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Option"
    onClick={[MockFunction]}
    onError={[Function]}
    optionType={0}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    testing={true}
    text=""
    theme={null}
    tooltip=""
    top=""
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-option"
        onClick={[Function]}
        sizing="normal"
        style={
          Object {
            "backgroundColor": "inherit",
            "color": "inherit",
          }
        }
        visible={true}
      >
        <StyledComponent
          className="ui-option"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-gqjmRU",
                "isStatic": false,
                "lastClassName": "kynOPX",
                "rules": Array [
                  "
	align-items: center;
	cursor: default;
	display: inline-flex;

	> span {
		padding: 0 0.2rem;
	}

	> span:hover {
		background-color: ",
                  [Function],
                  ";
	}

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-gqjmRU",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          onClick={[Function]}
          sizing="normal"
          style={
            Object {
              "backgroundColor": "inherit",
              "color": "inherit",
            }
          }
          visible={true}
        >
          <div
            className="ui-option sc-gqjmRU kynOPX"
            onClick={[Function]}
            style={
              Object {
                "backgroundColor": "inherit",
                "color": "inherit",
              }
            }
          >
            <Styled(ButtonToggle)
              bgColorOff="inherit"
              bgColorOn="inherit"
              bottom=""
              className=""
              contentEditable={false}
              controlled={false}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              fgColorOff="inherit"
              fgColorOn="inherit"
              focus={false}
              height=""
              iconNameOff="square-o"
              iconNameOn="check-square-o"
              id=""
              initialToggle={false}
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Option"
              onClick={[Function]}
              optionType={0}
              padding=""
              selected={false}
              sizing="normal"
              style={
                Object {
                  "backgroundColor": "inherit",
                  "color": "inherit",
                }
              }
              testing={true}
              text=""
              theme={null}
              tooltip=""
              top=""
              visible={true}
              width=""
              xcss={null}
            >
              <StyledComponent
                bgColorOff="inherit"
                bgColorOn="inherit"
                bottom=""
                className=""
                contentEditable={false}
                controlled={false}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                fgColorOff="inherit"
                fgColorOn="inherit"
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-VigVT",
                      "isStatic": true,
                      "lastClassName": "bwwtAd",
                      "rules": Array [
                        "
	display: inline;
	flex: unset;
	width: unset;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(ButtonToggle)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-VigVT",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                height=""
                iconNameOff="square-o"
                iconNameOn="check-square-o"
                id=""
                initialToggle={false}
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Option"
                onClick={[Function]}
                optionType={0}
                padding=""
                selected={false}
                sizing="normal"
                style={
                  Object {
                    "backgroundColor": "inherit",
                    "color": "inherit",
                  }
                }
                testing={true}
                text=""
                theme={null}
                tooltip=""
                top=""
                visible={true}
                width=""
                xcss={null}
              >
                <ButtonToggle
                  bgColorOff="inherit"
                  bgColorOn="inherit"
                  bottom=""
                  className="sc-VigVT bwwtAd"
                  contentEditable={false}
                  controlled={false}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  fgColorOff="inherit"
                  fgColorOn="inherit"
                  focus={false}
                  height=""
                  iconName="bomb"
                  iconNameOff="square-o"
                  iconNameOn="check-square-o"
                  iconStyle=""
                  id=""
                  initialToggle={false}
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Option"
                  onClick={[Function]}
                  optionType={0}
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={
                    Object {
                      "backgroundColor": "inherit",
                      "color": "inherit",
                    }
                  }
                  testing={true}
                  text=""
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bgColorOff="inherit"
                    bgColorOn="inherit"
                    bottom=""
                    className="sc-VigVT bwwtAd"
                    contentEditable={false}
                    controlled={false}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    fgColorOff="inherit"
                    fgColorOn="inherit"
                    focus={false}
                    height=""
                    iconName="bomb"
                    iconNameOff="square-o"
                    iconNameOn="check-square-o"
                    iconStyle=""
                    id=""
                    initialToggle={false}
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Option"
                    onClick={[Function]}
                    onError={[Function]}
                    optionType={0}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={
                      Object {
                        "backgroundColor": "inherit",
                        "color": "inherit",
                      }
                    }
                    testing={true}
                    text=""
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <Button
                        bgColorOff="inherit"
                        bgColorOn="inherit"
                        bottom=""
                        className="ui-button-toggle sc-VigVT bwwtAd"
                        contentEditable={false}
                        controlled={false}
                        direction="right"
                        disabled={false}
                        err={null}
                        errorMessage=""
                        fgColorOff="inherit"
                        fgColorOn="inherit"
                        focus={false}
                        height=""
                        iconName="square-o"
                        iconNameOff="square-o"
                        iconNameOn="check-square-o"
                        iconStyle=""
                        id=""
                        initialToggle={false}
                        left=""
                        location="none"
                        noedit={false}
                        nohover={false}
                        noripple={true}
                        notheme={false}
                        obj="Option"
                        onClick={[Function]}
                        optionType={0}
                        padding=""
                        selected={false}
                        sizing="normal"
                        style={
                          Object {
                            "backgroundColor": "inherit",
                            "color": "inherit",
                          }
                        }
                        testing={true}
                        text=""
                        theme={null}
                        tooltip=""
                        top=""
                        visible={true}
                        width=""
                        xcss={null}
                      >
                        <Wrapper
                          bgColorOff="inherit"
                          bgColorOn="inherit"
                          bottom=""
                          className="ui-button-toggle sc-VigVT bwwtAd"
                          contentEditable={false}
                          controlled={false}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          fgColorOff="inherit"
                          fgColorOn="inherit"
                          focus={false}
                          height=""
                          iconName="square-o"
                          iconNameOff="square-o"
                          iconNameOn="check-square-o"
                          iconStyle=""
                          id=""
                          initialToggle={false}
                          left=""
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={true}
                          notheme={false}
                          obj="Option"
                          onClick={[Function]}
                          onError={[Function]}
                          optionType={0}
                          padding=""
                          reset={false}
                          selected={false}
                          sizing="normal"
                          style={
                            Object {
                              "backgroundColor": "inherit",
                              "color": "inherit",
                            }
                          }
                          testing={true}
                          text=""
                          theme={null}
                          tooltip=""
                          top=""
                          visible={true}
                          width=""
                          xcss={null}
                        >
                          <ThemeProvider
                            theme={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#c0c0c0",
                                "color": "#000000",
                                "headerBackgroundColor": "#004358",
                                "headerForegroundColor": "#ffffff",
                                "headerHoverColor": "#ffe11a",
                                "hoverColor": "#c0c0c0",
                                "inputBorderColor": "#c0c0c0",
                                "itemHoverColor": "#bedb39",
                                "selectedBackgroundColor": "#1f8a70",
                                "selectedForegroundColor": "#ffe11a",
                                "titleBarBackgroundColor": "#004358",
                                "titleBarForegroundColor": "#ffe11a",
                                "tooltipBackgroundColor": "#708090",
                                "tooltipForegroundColor": "#ffffff",
                                "transitionDelay": "0.5s",
                              }
                            }
                          >
                            <styled.div
                              className="ui-button nohover ui-button-toggle sc-VigVT bwwtAd"
                              disabled={false}
                              id="Button-0"
                              onClick={[Function]}
                              sizing="normal"
                              style={
                                Object {
                                  "backgroundColor": "inherit",
                                  "color": "inherit",
                                }
                              }
                              visible={true}
                            >
                              <StyledComponent
                                className="ui-button nohover ui-button-toggle sc-VigVT bwwtAd"
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gzVnrw",
                                      "isStatic": false,
                                      "lastClassName": "lmUwCM",
                                      "rules": Array [
                                        "
	",
                                        "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                        "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                        [Function],
                                        " ",
                                        [Function],
                                        ";
	}

	",
                                        [Function],
                                        "
	",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gzVnrw",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="Button-0"
                                onClick={[Function]}
                                sizing="normal"
                                style={
                                  Object {
                                    "backgroundColor": "inherit",
                                    "color": "inherit",
                                  }
                                }
                                visible={true}
                              >
                                <div
                                  className="ui-button nohover ui-button-toggle sc-VigVT bwwtAd sc-gzVnrw lmUwCM"
                                  disabled={false}
                                  id="Button-0"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "backgroundColor": "inherit",
                                      "color": "inherit",
                                    }
                                  }
                                >
                                  <Icon
                                    bottom=""
                                    className=""
                                    contentEditable={false}
                                    controlled={true}
                                    direction="right"
                                    disabled={false}
                                    err={null}
                                    errorMessage=""
                                    focus={false}
                                    height=""
                                    iconName="square-o"
                                    id=""
                                    imageFile=""
                                    left=""
                                    location="none"
                                    noedit={false}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="Icon"
                                    padding=""
                                    selected={false}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    theme={null}
                                    tooltip=""
                                    top=""
                                    visible={true}
                                    width=""
                                    xcss={null}
                                  >
                                    <Wrapper
                                      bottom=""
                                      className=""
                                      contentEditable={false}
                                      controlled={true}
                                      direction="right"
                                      disabled={false}
                                      err={null}
                                      errorMessage=""
                                      focus={false}
                                      height=""
                                      iconName="square-o"
                                      id=""
                                      imageFile=""
                                      left=""
                                      location="none"
                                      noedit={false}
                                      nohover={false}
                                      noripple={false}
                                      notheme={false}
                                      obj="Icon"
                                      onError={[Function]}
                                      padding=""
                                      reset={false}
                                      selected={false}
                                      sizing="normal"
                                      style={Object {}}
                                      testing={true}
                                      theme={null}
                                      tooltip=""
                                      top=""
                                      visible={true}
                                      width=""
                                      xcss={null}
                                    >
                                      <ThemeProvider
                                        theme={
                                          Object {
                                            "backgroundColor": "#ffffff",
                                            "borderColor": "#c0c0c0",
                                            "color": "#000000",
                                            "headerBackgroundColor": "#004358",
                                            "headerForegroundColor": "#ffffff",
                                            "headerHoverColor": "#ffe11a",
                                            "hoverColor": "#c0c0c0",
                                            "inputBorderColor": "#c0c0c0",
                                            "itemHoverColor": "#bedb39",
                                            "selectedBackgroundColor": "#1f8a70",
                                            "selectedForegroundColor": "#ffe11a",
                                            "titleBarBackgroundColor": "#004358",
                                            "titleBarForegroundColor": "#ffe11a",
                                            "tooltipBackgroundColor": "#708090",
                                            "tooltipForegroundColor": "#ffffff",
                                            "transitionDelay": "0.5s",
                                          }
                                        }
                                      >
                                        <styled.i
                                          bottom=""
                                          className="ui-icon fa fa-fw fa-square-o"
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={false}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          iconName="square-o"
                                          id=""
                                          imageFile=""
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Icon"
                                          padding=""
                                          selected={false}
                                          sizing="normal"
                                          style={Object {}}
                                          testing={true}
                                          theme={null}
                                          tooltip=""
                                          top=""
                                          visible={true}
                                          width=""
                                          xcss={null}
                                        >
                                          <StyledComponent
                                            bottom=""
                                            className="ui-icon fa fa-fw fa-square-o"
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwzfXH",
                                                  "isStatic": false,
                                                  "lastClassName": "hBOHvv",
                                                  "rules": Array [
                                                    "
	text-align: center;
	",
                                                    [Function],
                                                    "
	",
                                                    [Function],
                                                    "
	",
                                                    [Function],
                                                    "
	",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.i",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwzfXH",
                                                "target": "i",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height=""
                                            iconName="square-o"
                                            id=""
                                            imageFile=""
                                            left=""
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Icon"
                                            padding=""
                                            selected={false}
                                            sizing="normal"
                                            style={Object {}}
                                            testing={true}
                                            theme={null}
                                            tooltip=""
                                            top=""
                                            visible={true}
                                            width=""
                                            xcss={null}
                                          >
                                            <i
                                              className="ui-icon fa fa-fw fa-square-o sc-bwzfXH hBOHvv"
                                              contentEditable={false}
                                              direction="right"
                                              disabled={false}
                                              height=""
                                              id=""
                                              selected={false}
                                              style={Object {}}
                                              width=""
                                            />
                                          </StyledComponent>
                                        </styled.i>
                                      </ThemeProvider>
                                    </Wrapper>
                                  </Icon>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </ThemeProvider>
                        </Wrapper>
                      </Button>
                    </ThemeProvider>
                  </Wrapper>
                </ButtonToggle>
              </StyledComponent>
            </Styled(ButtonToggle)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Option>
`;

exports[`Test disabling of the Option control 1`] = `
<Option
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={true}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[MockFunction]}
  optionType={0}
  padding=""
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text=""
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={true}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    initialToggle={false}
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Option"
    onClick={[MockFunction]}
    onError={[Function]}
    optionType={0}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    testing={true}
    text=""
    theme={null}
    tooltip=""
    top=""
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-option"
        onClick={[Function]}
        sizing="normal"
        style={
          Object {
            "backgroundColor": "inherit",
            "color": "inherit",
          }
        }
        visible={true}
      >
        <StyledComponent
          className="ui-option"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-gqjmRU",
                "isStatic": false,
                "lastClassName": "kynOPX",
                "rules": Array [
                  "
	align-items: center;
	cursor: default;
	display: inline-flex;

	> span {
		padding: 0 0.2rem;
	}

	> span:hover {
		background-color: ",
                  [Function],
                  ";
	}

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-gqjmRU",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          onClick={[Function]}
          sizing="normal"
          style={
            Object {
              "backgroundColor": "inherit",
              "color": "inherit",
            }
          }
          visible={true}
        >
          <div
            className="ui-option sc-gqjmRU kynOPX"
            onClick={[Function]}
            style={
              Object {
                "backgroundColor": "inherit",
                "color": "inherit",
              }
            }
          >
            <Styled(ButtonToggle)
              bgColorOff="inherit"
              bgColorOn="inherit"
              bottom=""
              className=""
              contentEditable={false}
              controlled={false}
              direction="right"
              disabled={true}
              err={null}
              errorMessage=""
              fgColorOff="inherit"
              fgColorOn="inherit"
              focus={false}
              height=""
              iconNameOff="square-o"
              iconNameOn="check-square-o"
              id=""
              initialToggle={false}
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Option"
              onClick={[Function]}
              optionType={0}
              padding=""
              selected={false}
              sizing="normal"
              style={
                Object {
                  "backgroundColor": "inherit",
                  "color": "inherit",
                }
              }
              testing={true}
              text=""
              theme={null}
              tooltip=""
              top=""
              visible={true}
              width=""
              xcss={null}
            >
              <StyledComponent
                bgColorOff="inherit"
                bgColorOn="inherit"
                bottom=""
                className=""
                contentEditable={false}
                controlled={false}
                direction="right"
                disabled={true}
                err={null}
                errorMessage=""
                fgColorOff="inherit"
                fgColorOn="inherit"
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-VigVT",
                      "isStatic": true,
                      "lastClassName": "bwwtAd",
                      "rules": Array [
                        "
	display: inline;
	flex: unset;
	width: unset;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(ButtonToggle)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-VigVT",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                height=""
                iconNameOff="square-o"
                iconNameOn="check-square-o"
                id=""
                initialToggle={false}
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Option"
                onClick={[Function]}
                optionType={0}
                padding=""
                selected={false}
                sizing="normal"
                style={
                  Object {
                    "backgroundColor": "inherit",
                    "color": "inherit",
                  }
                }
                testing={true}
                text=""
                theme={null}
                tooltip=""
                top=""
                visible={true}
                width=""
                xcss={null}
              >
                <ButtonToggle
                  bgColorOff="inherit"
                  bgColorOn="inherit"
                  bottom=""
                  className="sc-VigVT bwwtAd"
                  contentEditable={false}
                  controlled={false}
                  direction="right"
                  disabled={true}
                  err={null}
                  errorMessage=""
                  fgColorOff="inherit"
                  fgColorOn="inherit"
                  focus={false}
                  height=""
                  iconName="bomb"
                  iconNameOff="square-o"
                  iconNameOn="check-square-o"
                  iconStyle=""
                  id=""
                  initialToggle={false}
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Option"
                  onClick={[Function]}
                  optionType={0}
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={
                    Object {
                      "backgroundColor": "inherit",
                      "color": "inherit",
                    }
                  }
                  testing={true}
                  text=""
                  theme={null}
                  tooltip=""
                  top=""
                  visible={true}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bgColorOff="inherit"
                    bgColorOn="inherit"
                    bottom=""
                    className="sc-VigVT bwwtAd"
                    contentEditable={false}
                    controlled={false}
                    direction="right"
                    disabled={true}
                    err={null}
                    errorMessage=""
                    fgColorOff="inherit"
                    fgColorOn="inherit"
                    focus={false}
                    height=""
                    iconName="bomb"
                    iconNameOff="square-o"
                    iconNameOn="check-square-o"
                    iconStyle=""
                    id=""
                    initialToggle={false}
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Option"
                    onClick={[Function]}
                    onError={[Function]}
                    optionType={0}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={
                      Object {
                        "backgroundColor": "inherit",
                        "color": "inherit",
                      }
                    }
                    testing={true}
                    text=""
                    theme={null}
                    tooltip=""
                    top=""
                    visible={true}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <Button
                        bgColorOff="inherit"
                        bgColorOn="inherit"
                        bottom=""
                        className="ui-button-toggle sc-VigVT bwwtAd"
                        contentEditable={false}
                        controlled={false}
                        direction="right"
                        disabled={true}
                        err={null}
                        errorMessage=""
                        fgColorOff="inherit"
                        fgColorOn="inherit"
                        focus={false}
                        height=""
                        iconName="square-o"
                        iconNameOff="square-o"
                        iconNameOn="check-square-o"
                        iconStyle=""
                        id=""
                        initialToggle={false}
                        left=""
                        location="none"
                        noedit={false}
                        nohover={false}
                        noripple={true}
                        notheme={false}
                        obj="Option"
                        onClick={[Function]}
                        optionType={0}
                        padding=""
                        selected={false}
                        sizing="normal"
                        style={
                          Object {
                            "backgroundColor": "inherit",
                            "color": "inherit",
                          }
                        }
                        testing={true}
                        text=""
                        theme={null}
                        tooltip=""
                        top=""
                        visible={true}
                        width=""
                        xcss={null}
                      >
                        <Wrapper
                          bgColorOff="inherit"
                          bgColorOn="inherit"
                          bottom=""
                          className="ui-button-toggle sc-VigVT bwwtAd"
                          contentEditable={false}
                          controlled={false}
                          direction="right"
                          disabled={true}
                          err={null}
                          errorMessage=""
                          fgColorOff="inherit"
                          fgColorOn="inherit"
                          focus={false}
                          height=""
                          iconName="square-o"
                          iconNameOff="square-o"
                          iconNameOn="check-square-o"
                          iconStyle=""
                          id=""
                          initialToggle={false}
                          left=""
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={true}
                          notheme={false}
                          obj="Option"
                          onClick={[Function]}
                          onError={[Function]}
                          optionType={0}
                          padding=""
                          reset={false}
                          selected={false}
                          sizing="normal"
                          style={
                            Object {
                              "backgroundColor": "inherit",
                              "color": "inherit",
                            }
                          }
                          testing={true}
                          text=""
                          theme={null}
                          tooltip=""
                          top=""
                          visible={true}
                          width=""
                          xcss={null}
                        >
                          <ThemeProvider
                            theme={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#c0c0c0",
                                "color": "#000000",
                                "headerBackgroundColor": "#004358",
                                "headerForegroundColor": "#ffffff",
                                "headerHoverColor": "#ffe11a",
                                "hoverColor": "#c0c0c0",
                                "inputBorderColor": "#c0c0c0",
                                "itemHoverColor": "#bedb39",
                                "selectedBackgroundColor": "#1f8a70",
                                "selectedForegroundColor": "#ffe11a",
                                "titleBarBackgroundColor": "#004358",
                                "titleBarForegroundColor": "#ffe11a",
                                "tooltipBackgroundColor": "#708090",
                                "tooltipForegroundColor": "#ffffff",
                                "transitionDelay": "0.5s",
                              }
                            }
                          >
                            <styled.div
                              className="ui-button nohover ui-button-toggle sc-VigVT bwwtAd"
                              disabled={true}
                              id="Button-0"
                              onClick={[Function]}
                              sizing="normal"
                              style={
                                Object {
                                  "backgroundColor": "inherit",
                                  "color": "inherit",
                                }
                              }
                              visible={true}
                            >
                              <StyledComponent
                                className="ui-button nohover ui-button-toggle sc-VigVT bwwtAd"
                                disabled={true}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gzVnrw",
                                      "isStatic": false,
                                      "lastClassName": "fqspZq",
                                      "rules": Array [
                                        "
	",
                                        "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                        "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                        [Function],
                                        " ",
                                        [Function],
                                        ";
	}

	",
                                        [Function],
                                        "
	",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gzVnrw",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="Button-0"
                                onClick={[Function]}
                                sizing="normal"
                                style={
                                  Object {
                                    "backgroundColor": "inherit",
                                    "color": "inherit",
                                  }
                                }
                                visible={true}
                              >
                                <div
                                  className="ui-button nohover ui-button-toggle sc-VigVT bwwtAd sc-gzVnrw fqspZq"
                                  disabled={true}
                                  id="Button-0"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "backgroundColor": "inherit",
                                      "color": "inherit",
                                    }
                                  }
                                >
                                  <Icon
                                    bottom=""
                                    className=""
                                    contentEditable={false}
                                    controlled={true}
                                    direction="right"
                                    disabled={false}
                                    err={null}
                                    errorMessage=""
                                    focus={false}
                                    height=""
                                    iconName="square-o"
                                    id=""
                                    imageFile=""
                                    left=""
                                    location="none"
                                    noedit={false}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="Icon"
                                    padding=""
                                    selected={false}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    theme={null}
                                    tooltip=""
                                    top=""
                                    visible={true}
                                    width=""
                                    xcss={null}
                                  >
                                    <Wrapper
                                      bottom=""
                                      className=""
                                      contentEditable={false}
                                      controlled={true}
                                      direction="right"
                                      disabled={false}
                                      err={null}
                                      errorMessage=""
                                      focus={false}
                                      height=""
                                      iconName="square-o"
                                      id=""
                                      imageFile=""
                                      left=""
                                      location="none"
                                      noedit={false}
                                      nohover={false}
                                      noripple={false}
                                      notheme={false}
                                      obj="Icon"
                                      onError={[Function]}
                                      padding=""
                                      reset={false}
                                      selected={false}
                                      sizing="normal"
                                      style={Object {}}
                                      testing={true}
                                      theme={null}
                                      tooltip=""
                                      top=""
                                      visible={true}
                                      width=""
                                      xcss={null}
                                    >
                                      <ThemeProvider
                                        theme={
                                          Object {
                                            "backgroundColor": "#ffffff",
                                            "borderColor": "#c0c0c0",
                                            "color": "#000000",
                                            "headerBackgroundColor": "#004358",
                                            "headerForegroundColor": "#ffffff",
                                            "headerHoverColor": "#ffe11a",
                                            "hoverColor": "#c0c0c0",
                                            "inputBorderColor": "#c0c0c0",
                                            "itemHoverColor": "#bedb39",
                                            "selectedBackgroundColor": "#1f8a70",
                                            "selectedForegroundColor": "#ffe11a",
                                            "titleBarBackgroundColor": "#004358",
                                            "titleBarForegroundColor": "#ffe11a",
                                            "tooltipBackgroundColor": "#708090",
                                            "tooltipForegroundColor": "#ffffff",
                                            "transitionDelay": "0.5s",
                                          }
                                        }
                                      >
                                        <styled.i
                                          bottom=""
                                          className="ui-icon fa fa-fw fa-square-o"
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={false}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          iconName="square-o"
                                          id=""
                                          imageFile=""
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Icon"
                                          padding=""
                                          selected={false}
                                          sizing="normal"
                                          style={Object {}}
                                          testing={true}
                                          theme={null}
                                          tooltip=""
                                          top=""
                                          visible={true}
                                          width=""
                                          xcss={null}
                                        >
                                          <StyledComponent
                                            bottom=""
                                            className="ui-icon fa fa-fw fa-square-o"
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwzfXH",
                                                  "isStatic": false,
                                                  "lastClassName": "hBOHvv",
                                                  "rules": Array [
                                                    "
	text-align: center;
	",
                                                    [Function],
                                                    "
	",
                                                    [Function],
                                                    "
	",
                                                    [Function],
                                                    "
	",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.i",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwzfXH",
                                                "target": "i",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height=""
                                            iconName="square-o"
                                            id=""
                                            imageFile=""
                                            left=""
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Icon"
                                            padding=""
                                            selected={false}
                                            sizing="normal"
                                            style={Object {}}
                                            testing={true}
                                            theme={null}
                                            tooltip=""
                                            top=""
                                            visible={true}
                                            width=""
                                            xcss={null}
                                          >
                                            <i
                                              className="ui-icon fa fa-fw fa-square-o sc-bwzfXH hBOHvv"
                                              contentEditable={false}
                                              direction="right"
                                              disabled={false}
                                              height=""
                                              id=""
                                              selected={false}
                                              style={Object {}}
                                              width=""
                                            />
                                          </StyledComponent>
                                        </styled.i>
                                      </ThemeProvider>
                                    </Wrapper>
                                  </Icon>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </ThemeProvider>
                        </Wrapper>
                      </Button>
                    </ThemeProvider>
                  </Wrapper>
                </ButtonToggle>
              </StyledComponent>
            </Styled(ButtonToggle)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Option>
`;

exports[`Test making the Option control invisible 1`] = `
<Option
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialToggle={false}
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  obj="Option"
  onClick={[MockFunction]}
  optionType={0}
  padding=""
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "inherit",
      "color": "inherit",
    }
  }
  testing={true}
  text=""
  theme={null}
  tooltip=""
  top=""
  visible={false}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    initialToggle={false}
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    obj="Option"
    onClick={[MockFunction]}
    onError={[Function]}
    optionType={0}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={
      Object {
        "backgroundColor": "inherit",
        "color": "inherit",
      }
    }
    testing={true}
    text=""
    theme={null}
    tooltip=""
    top=""
    visible={false}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-option"
        onClick={[Function]}
        sizing="normal"
        style={
          Object {
            "backgroundColor": "inherit",
            "color": "inherit",
          }
        }
        visible={false}
      >
        <StyledComponent
          className="ui-option"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-gqjmRU",
                "isStatic": false,
                "lastClassName": "habQOw",
                "rules": Array [
                  "
	align-items: center;
	cursor: default;
	display: inline-flex;

	> span {
		padding: 0 0.2rem;
	}

	> span:hover {
		background-color: ",
                  [Function],
                  ";
	}

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-gqjmRU",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          onClick={[Function]}
          sizing="normal"
          style={
            Object {
              "backgroundColor": "inherit",
              "color": "inherit",
            }
          }
          visible={false}
        >
          <div
            className="ui-option sc-gqjmRU habQOw"
            onClick={[Function]}
            style={
              Object {
                "backgroundColor": "inherit",
                "color": "inherit",
              }
            }
          >
            <Styled(ButtonToggle)
              bgColorOff="inherit"
              bgColorOn="inherit"
              bottom=""
              className=""
              contentEditable={false}
              controlled={false}
              direction="right"
              disabled={false}
              err={null}
              errorMessage=""
              fgColorOff="inherit"
              fgColorOn="inherit"
              focus={false}
              height=""
              iconNameOff="square-o"
              iconNameOn="check-square-o"
              id=""
              initialToggle={false}
              left=""
              location="none"
              noedit={false}
              nohover={false}
              noripple={false}
              notheme={false}
              obj="Option"
              onClick={[Function]}
              optionType={0}
              padding=""
              selected={false}
              sizing="normal"
              style={
                Object {
                  "backgroundColor": "inherit",
                  "color": "inherit",
                }
              }
              testing={true}
              text=""
              theme={null}
              tooltip=""
              top=""
              visible={false}
              width=""
              xcss={null}
            >
              <StyledComponent
                bgColorOff="inherit"
                bgColorOn="inherit"
                bottom=""
                className=""
                contentEditable={false}
                controlled={false}
                direction="right"
                disabled={false}
                err={null}
                errorMessage=""
                fgColorOff="inherit"
                fgColorOn="inherit"
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-VigVT",
                      "isStatic": true,
                      "lastClassName": "bwwtAd",
                      "rules": Array [
                        "
	display: inline;
	flex: unset;
	width: unset;
",
                      ],
                    },
                    "defaultStyles": Object {},
                    "displayName": "Styled(ButtonToggle)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-VigVT",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                height=""
                iconNameOff="square-o"
                iconNameOn="check-square-o"
                id=""
                initialToggle={false}
                left=""
                location="none"
                noedit={false}
                nohover={false}
                noripple={false}
                notheme={false}
                obj="Option"
                onClick={[Function]}
                optionType={0}
                padding=""
                selected={false}
                sizing="normal"
                style={
                  Object {
                    "backgroundColor": "inherit",
                    "color": "inherit",
                  }
                }
                testing={true}
                text=""
                theme={null}
                tooltip=""
                top=""
                visible={false}
                width=""
                xcss={null}
              >
                <ButtonToggle
                  bgColorOff="inherit"
                  bgColorOn="inherit"
                  bottom=""
                  className="sc-VigVT bwwtAd"
                  contentEditable={false}
                  controlled={false}
                  direction="right"
                  disabled={false}
                  err={null}
                  errorMessage=""
                  fgColorOff="inherit"
                  fgColorOn="inherit"
                  focus={false}
                  height=""
                  iconName="bomb"
                  iconNameOff="square-o"
                  iconNameOn="check-square-o"
                  iconStyle=""
                  id=""
                  initialToggle={false}
                  left=""
                  location="none"
                  noedit={false}
                  nohover={false}
                  noripple={false}
                  notheme={false}
                  obj="Option"
                  onClick={[Function]}
                  optionType={0}
                  padding=""
                  selected={false}
                  sizing="normal"
                  style={
                    Object {
                      "backgroundColor": "inherit",
                      "color": "inherit",
                    }
                  }
                  testing={true}
                  text=""
                  theme={null}
                  tooltip=""
                  top=""
                  visible={false}
                  width=""
                  xcss={null}
                >
                  <Wrapper
                    bgColorOff="inherit"
                    bgColorOn="inherit"
                    bottom=""
                    className="sc-VigVT bwwtAd"
                    contentEditable={false}
                    controlled={false}
                    direction="right"
                    disabled={false}
                    err={null}
                    errorMessage=""
                    fgColorOff="inherit"
                    fgColorOn="inherit"
                    focus={false}
                    height=""
                    iconName="bomb"
                    iconNameOff="square-o"
                    iconNameOn="check-square-o"
                    iconStyle=""
                    id=""
                    initialToggle={false}
                    left=""
                    location="none"
                    noedit={false}
                    nohover={false}
                    noripple={false}
                    notheme={false}
                    obj="Option"
                    onClick={[Function]}
                    onError={[Function]}
                    optionType={0}
                    padding=""
                    reset={false}
                    selected={false}
                    sizing="normal"
                    style={
                      Object {
                        "backgroundColor": "inherit",
                        "color": "inherit",
                      }
                    }
                    testing={true}
                    text=""
                    theme={null}
                    tooltip=""
                    top=""
                    visible={false}
                    width=""
                    xcss={null}
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#c0c0c0",
                          "color": "#000000",
                          "headerBackgroundColor": "#004358",
                          "headerForegroundColor": "#ffffff",
                          "headerHoverColor": "#ffe11a",
                          "hoverColor": "#c0c0c0",
                          "inputBorderColor": "#c0c0c0",
                          "itemHoverColor": "#bedb39",
                          "selectedBackgroundColor": "#1f8a70",
                          "selectedForegroundColor": "#ffe11a",
                          "titleBarBackgroundColor": "#004358",
                          "titleBarForegroundColor": "#ffe11a",
                          "tooltipBackgroundColor": "#708090",
                          "tooltipForegroundColor": "#ffffff",
                          "transitionDelay": "0.5s",
                        }
                      }
                    >
                      <Button
                        bgColorOff="inherit"
                        bgColorOn="inherit"
                        bottom=""
                        className="ui-button-toggle sc-VigVT bwwtAd"
                        contentEditable={false}
                        controlled={false}
                        direction="right"
                        disabled={false}
                        err={null}
                        errorMessage=""
                        fgColorOff="inherit"
                        fgColorOn="inherit"
                        focus={false}
                        height=""
                        iconName="square-o"
                        iconNameOff="square-o"
                        iconNameOn="check-square-o"
                        iconStyle=""
                        id=""
                        initialToggle={false}
                        left=""
                        location="none"
                        noedit={false}
                        nohover={false}
                        noripple={true}
                        notheme={false}
                        obj="Option"
                        onClick={[Function]}
                        optionType={0}
                        padding=""
                        selected={false}
                        sizing="normal"
                        style={
                          Object {
                            "backgroundColor": "inherit",
                            "color": "inherit",
                          }
                        }
                        testing={true}
                        text=""
                        theme={null}
                        tooltip=""
                        top=""
                        visible={false}
                        width=""
                        xcss={null}
                      >
                        <Wrapper
                          bgColorOff="inherit"
                          bgColorOn="inherit"
                          bottom=""
                          className="ui-button-toggle sc-VigVT bwwtAd"
                          contentEditable={false}
                          controlled={false}
                          direction="right"
                          disabled={false}
                          err={null}
                          errorMessage=""
                          fgColorOff="inherit"
                          fgColorOn="inherit"
                          focus={false}
                          height=""
                          iconName="square-o"
                          iconNameOff="square-o"
                          iconNameOn="check-square-o"
                          iconStyle=""
                          id=""
                          initialToggle={false}
                          left=""
                          location="none"
                          noedit={false}
                          nohover={false}
                          noripple={true}
                          notheme={false}
                          obj="Option"
                          onClick={[Function]}
                          onError={[Function]}
                          optionType={0}
                          padding=""
                          reset={false}
                          selected={false}
                          sizing="normal"
                          style={
                            Object {
                              "backgroundColor": "inherit",
                              "color": "inherit",
                            }
                          }
                          testing={true}
                          text=""
                          theme={null}
                          tooltip=""
                          top=""
                          visible={false}
                          width=""
                          xcss={null}
                        >
                          <ThemeProvider
                            theme={
                              Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#c0c0c0",
                                "color": "#000000",
                                "headerBackgroundColor": "#004358",
                                "headerForegroundColor": "#ffffff",
                                "headerHoverColor": "#ffe11a",
                                "hoverColor": "#c0c0c0",
                                "inputBorderColor": "#c0c0c0",
                                "itemHoverColor": "#bedb39",
                                "selectedBackgroundColor": "#1f8a70",
                                "selectedForegroundColor": "#ffe11a",
                                "titleBarBackgroundColor": "#004358",
                                "titleBarForegroundColor": "#ffe11a",
                                "tooltipBackgroundColor": "#708090",
                                "tooltipForegroundColor": "#ffffff",
                                "transitionDelay": "0.5s",
                              }
                            }
                          >
                            <styled.div
                              className="ui-button nohover ui-button-toggle sc-VigVT bwwtAd"
                              disabled={false}
                              id="Button-0"
                              onClick={[Function]}
                              sizing="normal"
                              style={
                                Object {
                                  "backgroundColor": "inherit",
                                  "color": "inherit",
                                }
                              }
                              visible={false}
                            >
                              <StyledComponent
                                className="ui-button nohover ui-button-toggle sc-VigVT bwwtAd"
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gzVnrw",
                                      "isStatic": false,
                                      "lastClassName": "clBriJ",
                                      "rules": Array [
                                        "
	",
                                        "
	align-items: center;
	box-sizing: border-box;
	cursor: default;
	display: flex;
	height: 100%;
	justify-content: center;
	line-height: inherit;
	outline: none;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;
",
                                        "

	flex: 1;

	&:not(.nohover):hover {
		background-color: ",
                                        [Function],
                                        " ",
                                        [Function],
                                        ";
	}

	",
                                        [Function],
                                        "
	",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gzVnrw",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="Button-0"
                                onClick={[Function]}
                                sizing="normal"
                                style={
                                  Object {
                                    "backgroundColor": "inherit",
                                    "color": "inherit",
                                  }
                                }
                                visible={false}
                              >
                                <div
                                  className="ui-button nohover ui-button-toggle sc-VigVT bwwtAd sc-gzVnrw clBriJ"
                                  disabled={false}
                                  id="Button-0"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "backgroundColor": "inherit",
                                      "color": "inherit",
                                    }
                                  }
                                >
                                  <Icon
                                    bottom=""
                                    className=""
                                    contentEditable={false}
                                    controlled={true}
                                    direction="right"
                                    disabled={false}
                                    err={null}
                                    errorMessage=""
                                    focus={false}
                                    height=""
                                    iconName="square-o"
                                    id=""
                                    imageFile=""
                                    left=""
                                    location="none"
                                    noedit={false}
                                    nohover={false}
                                    noripple={false}
                                    notheme={false}
                                    obj="Icon"
                                    padding=""
                                    selected={false}
                                    sizing="normal"
                                    style={Object {}}
                                    testing={true}
                                    theme={null}
                                    tooltip=""
                                    top=""
                                    visible={true}
                                    width=""
                                    xcss={null}
                                  >
                                    <Wrapper
                                      bottom=""
                                      className=""
                                      contentEditable={false}
                                      controlled={true}
                                      direction="right"
                                      disabled={false}
                                      err={null}
                                      errorMessage=""
                                      focus={false}
                                      height=""
                                      iconName="square-o"
                                      id=""
                                      imageFile=""
                                      left=""
                                      location="none"
                                      noedit={false}
                                      nohover={false}
                                      noripple={false}
                                      notheme={false}
                                      obj="Icon"
                                      onError={[Function]}
                                      padding=""
                                      reset={false}
                                      selected={false}
                                      sizing="normal"
                                      style={Object {}}
                                      testing={true}
                                      theme={null}
                                      tooltip=""
                                      top=""
                                      visible={true}
                                      width=""
                                      xcss={null}
                                    >
                                      <ThemeProvider
                                        theme={
                                          Object {
                                            "backgroundColor": "#ffffff",
                                            "borderColor": "#c0c0c0",
                                            "color": "#000000",
                                            "headerBackgroundColor": "#004358",
                                            "headerForegroundColor": "#ffffff",
                                            "headerHoverColor": "#ffe11a",
                                            "hoverColor": "#c0c0c0",
                                            "inputBorderColor": "#c0c0c0",
                                            "itemHoverColor": "#bedb39",
                                            "selectedBackgroundColor": "#1f8a70",
                                            "selectedForegroundColor": "#ffe11a",
                                            "titleBarBackgroundColor": "#004358",
                                            "titleBarForegroundColor": "#ffe11a",
                                            "tooltipBackgroundColor": "#708090",
                                            "tooltipForegroundColor": "#ffffff",
                                            "transitionDelay": "0.5s",
                                          }
                                        }
                                      >
                                        <styled.i
                                          bottom=""
                                          className="ui-icon fa fa-fw fa-square-o"
                                          contentEditable={false}
                                          controlled={true}
                                          direction="right"
                                          disabled={false}
                                          err={null}
                                          errorMessage=""
                                          focus={false}
                                          height=""
                                          iconName="square-o"
                                          id=""
                                          imageFile=""
                                          left=""
                                          location="none"
                                          noedit={false}
                                          nohover={false}
                                          noripple={false}
                                          notheme={false}
                                          obj="Icon"
                                          padding=""
                                          selected={false}
                                          sizing="normal"
                                          style={Object {}}
                                          testing={true}
                                          theme={null}
                                          tooltip=""
                                          top=""
                                          visible={true}
                                          width=""
                                          xcss={null}
                                        >
                                          <StyledComponent
                                            bottom=""
                                            className="ui-icon fa fa-fw fa-square-o"
                                            contentEditable={false}
                                            controlled={true}
                                            direction="right"
                                            disabled={false}
                                            err={null}
                                            errorMessage=""
                                            focus={false}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bwzfXH",
                                                  "isStatic": false,
                                                  "lastClassName": "hBOHvv",
                                                  "rules": Array [
                                                    "
	text-align: center;
	",
                                                    [Function],
                                                    "
	",
                                                    [Function],
                                                    "
	",
                                                    [Function],
                                                    "
	",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.i",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bwzfXH",
                                                "target": "i",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            height=""
                                            iconName="square-o"
                                            id=""
                                            imageFile=""
                                            left=""
                                            location="none"
                                            noedit={false}
                                            nohover={false}
                                            noripple={false}
                                            notheme={false}
                                            obj="Icon"
                                            padding=""
                                            selected={false}
                                            sizing="normal"
                                            style={Object {}}
                                            testing={true}
                                            theme={null}
                                            tooltip=""
                                            top=""
                                            visible={true}
                                            width=""
                                            xcss={null}
                                          >
                                            <i
                                              className="ui-icon fa fa-fw fa-square-o sc-bwzfXH hBOHvv"
                                              contentEditable={false}
                                              direction="right"
                                              disabled={false}
                                              height=""
                                              id=""
                                              selected={false}
                                              style={Object {}}
                                              width=""
                                            />
                                          </StyledComponent>
                                        </styled.i>
                                      </ThemeProvider>
                                    </Wrapper>
                                  </Icon>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </ThemeProvider>
                        </Wrapper>
                      </Button>
                    </ThemeProvider>
                  </Wrapper>
                </ButtonToggle>
              </StyledComponent>
            </Styled(ButtonToggle)>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Option>
`;

exports[`Test retrieval of Option props object 1`] = `
Object {
  "bottom": "",
  "children": null,
  "className": "",
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": "",
  "focus": false,
  "height": "",
  "id": "",
  "initialToggle": false,
  "left": "",
  "location": "none",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "notheme": false,
  "obj": "Option",
  "onClick": [Function],
  "optionType": 0,
  "padding": "",
  "selected": false,
  "sizing": "normal",
  "style": Object {
    "backgroundColor": "inherit",
    "color": "inherit",
  },
  "testing": true,
  "text": "",
  "theme": null,
  "tooltip": "",
  "top": "",
  "visible": true,
  "width": "",
  "xcss": null,
}
`;
