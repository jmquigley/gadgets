// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test creation of a simple Slider control 1`] = `
<Slider
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  left={null}
  location="none"
  max={50}
  min={1}
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="Slider"
  onSelect={[Function]}
  padding={null}
  scale={2}
  selected={false}
  sizing="normal"
  snap={true}
  startPosition={0}
  style={Object {}}
  testing={true}
  theme={null}
  ticks={5}
  tooltip={null}
  top={null}
  visible={true}
  width={null}
  xcss={null}
>
  <Wrapper
    bottom={null}
    className={null}
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage={null}
    focus={false}
    height={null}
    id={null}
    left={null}
    location="none"
    max={50}
    min={1}
    minHeight={null}
    minWidth={null}
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    notooltip={false}
    obj="Slider"
    onError={[Function]}
    onSelect={[Function]}
    padding={null}
    reset={false}
    scale={2}
    selected={false}
    sizing="normal"
    snap={true}
    startPosition={0}
    style={Object {}}
    testing={true}
    theme={null}
    ticks={5}
    tooltip={null}
    top={null}
    visible={true}
    width={null}
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "fontFamily": "OpenSans, Georgia, serif",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-slider"
        disabled={false}
        height={20}
        style={Object {}}
        visible={true}
        width={118}
      >
        <StyledComponent
          className="ui-slider"
          disabled={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "KQfGP",
                "rules": Array [
                  "
	display: inline-block;
	height: ",
                  [Function],
                  "px;
	position: relative;
	width: ",
                  [Function],
                  "px;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          height={20}
          style={Object {}}
          visible={true}
          width={118}
        >
          <div
            className="ui-slider sc-htpNat KQfGP"
            disabled={false}
            height={20}
            style={Object {}}
            width={118}
          >
            <styled.div
              className="ui-slider-bar"
              height={4}
              width={98}
            >
              <StyledComponent
                className="ui-slider-bar"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": false,
                      "lastClassName": "leykRn",
                      "rules": Array [
                        "
	border: solid 1px ",
                        [Function],
                        ";
	height: ",
                        [Function],
                        "px;
	left: 50%;
	position: absolute;
	top: 50%;
	transform: translate(-50%, -50%);
	width: ",
                        [Function],
                        "px;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={[Function]}
                height={4}
                width={98}
              >
                <div
                  className="ui-slider-bar sc-bwzfXH leykRn"
                  height={4}
                  width={98}
                >
                  <styled.div
                    className="ui-slider-tick"
                    id="0"
                    key="0"
                    left={-1}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dFbRIn",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="0"
                      left={-1}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX cvZUBx"
                        id="0"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-tick"
                    id="1"
                    key="1"
                    left={23.5}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dFbRIn",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="1"
                      left={23.5}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX cwDhrr"
                        id="1"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-tick"
                    id="2"
                    key="2"
                    left={48}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dFbRIn",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="2"
                      left={48}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX eqsOzF"
                        id="2"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-tick"
                    id="3"
                    key="3"
                    left={72.5}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dFbRIn",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="3"
                      left={72.5}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX hkmeQv"
                        id="3"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-tick"
                    id="4"
                    key="4"
                    left={97}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dFbRIn",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="4"
                      left={97}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX dOrTLF"
                        id="4"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-tick"
                    id="5"
                    key="5"
                    left={99}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dFbRIn",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="5"
                      left={99}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX dFbRIn"
                        id="5"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-element"
                    left={-9}
                    onMouseDown={[Function]}
                    sizing="normal"
                  >
                    <StyledComponent
                      className="ui-slider-element"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bxivhb",
                            "isStatic": false,
                            "lastClassName": "iHkWne",
                            "rules": Array [
                              "
	background-color: ",
                              [Function],
                              ";
	border: solid 1px ",
                              [Function],
                              ";
	left: ",
                              [Function],
                              "px;
	position: absolute;
	top: 50%;
	transform: translateY(-50%);

	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bxivhb",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      left={-9}
                      onMouseDown={[Function]}
                      sizing="normal"
                    >
                      <div
                        className="ui-slider-element sc-bxivhb iHkWne"
                        onMouseDown={[Function]}
                      />
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Slider>
`;

exports[`Test disabling a Slider control 1`] = `
<Slider
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={true}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  left={null}
  location="none"
  max={100}
  min={0}
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="Slider"
  onSelect={[Function]}
  padding={null}
  scale={2}
  selected={false}
  sizing="normal"
  snap={true}
  startPosition={0}
  style={Object {}}
  testing={true}
  theme={null}
  ticks={5}
  tooltip={null}
  top={null}
  visible={true}
  width={null}
  xcss={null}
>
  <Wrapper
    bottom={null}
    className={null}
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={true}
    err={null}
    errorMessage={null}
    focus={false}
    height={null}
    id={null}
    left={null}
    location="none"
    max={100}
    min={0}
    minHeight={null}
    minWidth={null}
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    notooltip={false}
    obj="Slider"
    onError={[Function]}
    onSelect={[Function]}
    padding={null}
    reset={false}
    scale={2}
    selected={false}
    sizing="normal"
    snap={true}
    startPosition={0}
    style={Object {}}
    testing={true}
    theme={null}
    ticks={5}
    tooltip={null}
    top={null}
    visible={true}
    width={null}
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "fontFamily": "OpenSans, Georgia, serif",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-slider"
        disabled={true}
        height={20}
        style={Object {}}
        visible={true}
        width={220}
      >
        <StyledComponent
          className="ui-slider"
          disabled={true}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "gbjngv",
                "rules": Array [
                  "
	display: inline-block;
	height: ",
                  [Function],
                  "px;
	position: relative;
	width: ",
                  [Function],
                  "px;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          height={20}
          style={Object {}}
          visible={true}
          width={220}
        >
          <div
            className="ui-slider sc-htpNat gbjngv"
            disabled={true}
            height={20}
            style={Object {}}
            width={220}
          >
            <styled.div
              className="ui-slider-bar"
              height={4}
              width={200}
            >
              <StyledComponent
                className="ui-slider-bar"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": false,
                      "lastClassName": "jZDsMg",
                      "rules": Array [
                        "
	border: solid 1px ",
                        [Function],
                        ";
	height: ",
                        [Function],
                        "px;
	left: 50%;
	position: absolute;
	top: 50%;
	transform: translate(-50%, -50%);
	width: ",
                        [Function],
                        "px;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={[Function]}
                height={4}
                width={200}
              >
                <div
                  className="ui-slider-bar sc-bwzfXH jZDsMg"
                  height={4}
                  width={200}
                >
                  <styled.div
                    className="ui-slider-tick"
                    id="0"
                    key="0"
                    left={-1}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dLirKH",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="0"
                      left={-1}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX cvZUBx"
                        id="0"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-tick"
                    id="1"
                    key="1"
                    left={49}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dLirKH",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="1"
                      left={49}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX viUUz"
                        id="1"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-tick"
                    id="2"
                    key="2"
                    left={99}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dLirKH",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="2"
                      left={99}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX dFbRIn"
                        id="2"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-tick"
                    id="3"
                    key="3"
                    left={149}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dLirKH",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="3"
                      left={149}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX bXhMDZ"
                        id="3"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-tick"
                    id="4"
                    key="4"
                    left={199}
                  >
                    <StyledComponent
                      className="ui-slider-tick"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "dLirKH",
                            "rules": Array [
                              "
    background-color: ",
                              [Function],
                              ";
    height: 0.1875rem;
    left: ",
                              [Function],
                              "px;
    position: absolute;
    bottom: -0.4rem;
    width: 0.125rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="4"
                      left={199}
                    >
                      <div
                        className="ui-slider-tick sc-ifAKCX dLirKH"
                        id="4"
                      />
                    </StyledComponent>
                  </styled.div>
                  <styled.div
                    className="ui-slider-element"
                    left={-9}
                    onMouseDown={[Function]}
                    sizing="normal"
                  >
                    <StyledComponent
                      className="ui-slider-element"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bxivhb",
                            "isStatic": false,
                            "lastClassName": "iHkWne",
                            "rules": Array [
                              "
	background-color: ",
                              [Function],
                              ";
	border: solid 1px ",
                              [Function],
                              ";
	left: ",
                              [Function],
                              "px;
	position: absolute;
	top: 50%;
	transform: translateY(-50%);

	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bxivhb",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      left={-9}
                      onMouseDown={[Function]}
                      sizing="normal"
                    >
                      <div
                        className="ui-slider-element sc-bxivhb iHkWne"
                        onMouseDown={[Function]}
                      />
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Slider>
`;

exports[`Test retrieval of Slider props object 1`] = `
Object {
  "bottom": null,
  "children": null,
  "className": null,
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": null,
  "focus": false,
  "height": null,
  "id": null,
  "left": null,
  "location": "none",
  "max": 100,
  "min": 0,
  "minHeight": null,
  "minWidth": null,
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "notheme": false,
  "notooltip": false,
  "obj": "Slider",
  "onSelect": [Function],
  "padding": null,
  "scale": 1,
  "selected": false,
  "sizing": "normal",
  "snap": false,
  "startPosition": 0,
  "style": Object {},
  "testing": true,
  "theme": null,
  "ticks": 0,
  "tooltip": null,
  "top": null,
  "visible": true,
  "width": null,
  "xcss": null,
}
`;

exports[`Test with bad min/max values 1`] = `
<Slider
  bottom={null}
  className={null}
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  left={null}
  location="none"
  max={0}
  min={-1}
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="Slider"
  onSelect={[Function]}
  padding={null}
  scale={1}
  selected={false}
  sizing="normal"
  snap={false}
  startPosition={0}
  style={Object {}}
  testing={true}
  theme={null}
  ticks={0}
  tooltip={null}
  top={null}
  visible={true}
  width={null}
  xcss={null}
>
  <Wrapper
    bottom={null}
    className={null}
    contentEditable={false}
    controlled={true}
    direction="right"
    disabled={false}
    err={null}
    errorMessage={null}
    focus={false}
    height={null}
    id={null}
    left={null}
    location="none"
    max={0}
    min={-1}
    minHeight={null}
    minWidth={null}
    noedit={false}
    nohover={false}
    noripple={false}
    notheme={false}
    notooltip={false}
    obj="Slider"
    onError={[Function]}
    onSelect={[Function]}
    padding={null}
    reset={false}
    scale={1}
    selected={false}
    sizing="normal"
    snap={false}
    startPosition={0}
    style={Object {}}
    testing={true}
    theme={null}
    ticks={0}
    tooltip={null}
    top={null}
    visible={true}
    width={null}
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "fontFamily": "OpenSans, Georgia, serif",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "titleBarBackgroundColor": "#004358",
          "titleBarForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-slider"
        disabled={false}
        height={20}
        style={Object {}}
        visible={true}
        width={21}
      >
        <StyledComponent
          className="ui-slider"
          disabled={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "kDtMwL",
                "rules": Array [
                  "
	display: inline-block;
	height: ",
                  [Function],
                  "px;
	position: relative;
	width: ",
                  [Function],
                  "px;

	",
                  [Function],
                  "
	",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          height={20}
          style={Object {}}
          visible={true}
          width={21}
        >
          <div
            className="ui-slider sc-htpNat kDtMwL"
            disabled={false}
            height={20}
            style={Object {}}
            width={21}
          >
            <styled.div
              className="ui-slider-bar"
              height={4}
              width={1}
            >
              <StyledComponent
                className="ui-slider-bar"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": false,
                      "lastClassName": "cGIFmz",
                      "rules": Array [
                        "
	border: solid 1px ",
                        [Function],
                        ";
	height: ",
                        [Function],
                        "px;
	left: 50%;
	position: absolute;
	top: 50%;
	transform: translate(-50%, -50%);
	width: ",
                        [Function],
                        "px;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={[Function]}
                height={4}
                width={1}
              >
                <div
                  className="ui-slider-bar sc-bwzfXH cGIFmz"
                  height={4}
                  width={1}
                >
                  <styled.div
                    className="ui-slider-element"
                    left={-9}
                    onMouseDown={[Function]}
                    sizing="normal"
                  >
                    <StyledComponent
                      className="ui-slider-element"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bxivhb",
                            "isStatic": false,
                            "lastClassName": "iHkWne",
                            "rules": Array [
                              "
	background-color: ",
                              [Function],
                              ";
	border: solid 1px ",
                              [Function],
                              ";
	left: ",
                              [Function],
                              "px;
	position: absolute;
	top: 50%;
	transform: translateY(-50%);

	",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bxivhb",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      left={-9}
                      onMouseDown={[Function]}
                      sizing="normal"
                    >
                      <div
                        className="ui-slider-element sc-bxivhb iHkWne"
                        onMouseDown={[Function]}
                      />
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Slider>
`;
