// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test a double click edit of the Label control 1`] = `
<Label
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  errorMessage=""
  focus={true}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Label"
  onBlur={[Function]}
  onChange={[MockFunction]}
  onClick={[Function]}
  onDoubleClick={[MockFunction]}
  onKeyDown={[MockFunction]}
  onKeyPress={[MockFunction]}
  onUpdate={[MockFunction]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  text="A"
  theme={null}
  tooltip=""
  top=""
  useedit={false}
  visible={true}
  width=""
  xcss={null}
>
  <ThemeProvider
    theme={
      Object {
        "backgroundColor": "#ffffff",
        "borderColor": "#c0c0c0",
        "color": "#000000",
        "headerBackgroundColor": "#004358",
        "headerForegroundColor": "#ffffff",
        "headerHoverColor": "#ffe11a",
        "hoverColor": "#c0c0c0",
        "inputBorderColor": "#c0c0c0",
        "selectedBackgroundColor": "#1f8a70",
        "selectedForegroundColor": "#ffe11a",
        "tooltipBackgroundColor": "#708090",
        "tooltipForegroundColor": "#ffffff",
        "transitionDelay": "0.5s",
      }
    }
  >
    <styled.span
      className="ui-label"
      contentEditable={false}
      disabled={false}
      innerRef={[Function]}
      onBlur={[Function]}
      onClick={[Function]}
      onDoubleClick={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      sizing="normal"
      style={Object {}}
      suppressContentEditableWarning={true}
      visible={true}
    >
      <span
        className="ui-label sc-bdVaJa hVJBlF"
        contentEditable={false}
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDoubleClick={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        style={Object {}}
        suppressContentEditableWarning={true}
      >
        A
      </span>
    </styled.span>
  </ThemeProvider>
</Label>
`;

exports[`Test creation of a Label control 1`] = `
<ThemeProvider
  theme={
    Object {
      "backgroundColor": "#ffffff",
      "borderColor": "#c0c0c0",
      "color": "#000000",
      "headerBackgroundColor": "#004358",
      "headerForegroundColor": "#ffffff",
      "headerHoverColor": "#ffe11a",
      "hoverColor": "#c0c0c0",
      "inputBorderColor": "#c0c0c0",
      "selectedBackgroundColor": "#1f8a70",
      "selectedForegroundColor": "#ffe11a",
      "tooltipBackgroundColor": "#708090",
      "tooltipForegroundColor": "#ffffff",
      "transitionDelay": "0.5s",
    }
  }
>
  <styled.span
    className="ui-label test-class"
    contentEditable={false}
    disabled={false}
    innerRef={[Function]}
    onBlur={[Function]}
    onClick={[Function]}
    onDoubleClick={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    sizing="normal"
    style={Object {}}
    suppressContentEditableWarning={true}
    visible={true}
  >
    Test label text
  </styled.span>
</ThemeProvider>
`;

exports[`Test double click change to Label and blur to save 1`] = `
<Label
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  errorMessage=""
  focus={true}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Label"
  onBlur={[MockFunction]}
  onChange={[MockFunction]}
  onClick={[Function]}
  onDoubleClick={[MockFunction]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onUpdate={[MockFunction]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  text="A"
  theme={null}
  tooltip=""
  top=""
  useedit={false}
  visible={true}
  width=""
  xcss={null}
>
  <ThemeProvider
    theme={
      Object {
        "backgroundColor": "#ffffff",
        "borderColor": "#c0c0c0",
        "color": "#000000",
        "headerBackgroundColor": "#004358",
        "headerForegroundColor": "#ffffff",
        "headerHoverColor": "#ffe11a",
        "hoverColor": "#c0c0c0",
        "inputBorderColor": "#c0c0c0",
        "selectedBackgroundColor": "#1f8a70",
        "selectedForegroundColor": "#ffe11a",
        "tooltipBackgroundColor": "#708090",
        "tooltipForegroundColor": "#ffffff",
        "transitionDelay": "0.5s",
      }
    }
  >
    <styled.span
      className="ui-label"
      contentEditable={false}
      disabled={false}
      innerRef={[Function]}
      onBlur={[Function]}
      onClick={[Function]}
      onDoubleClick={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      sizing="normal"
      style={Object {}}
      suppressContentEditableWarning={true}
      visible={true}
    >
      <span
        className="ui-label sc-bdVaJa hVJBlF"
        contentEditable={false}
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDoubleClick={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        style={Object {}}
        suppressContentEditableWarning={true}
      >
        A
      </span>
    </styled.span>
  </ThemeProvider>
</Label>
`;

exports[`Test making the Label control invisible 1`] = `
<Label
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={false}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Label"
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onDoubleClick={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onUpdate={[Function]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  text="Test label text"
  theme={null}
  tooltip=""
  top=""
  useedit={false}
  visible={false}
  width=""
  xcss={null}
>
  <ThemeProvider
    theme={
      Object {
        "backgroundColor": "#ffffff",
        "borderColor": "#c0c0c0",
        "color": "#000000",
        "headerBackgroundColor": "#004358",
        "headerForegroundColor": "#ffffff",
        "headerHoverColor": "#ffe11a",
        "hoverColor": "#c0c0c0",
        "inputBorderColor": "#c0c0c0",
        "selectedBackgroundColor": "#1f8a70",
        "selectedForegroundColor": "#ffe11a",
        "tooltipBackgroundColor": "#708090",
        "tooltipForegroundColor": "#ffffff",
        "transitionDelay": "0.5s",
      }
    }
  >
    <styled.span
      className="ui-label"
      contentEditable={false}
      disabled={false}
      innerRef={[Function]}
      onBlur={[Function]}
      onClick={[Function]}
      onDoubleClick={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      sizing="normal"
      style={Object {}}
      suppressContentEditableWarning={true}
      visible={false}
    >
      <span
        className="ui-label sc-bdVaJa gMjxKT"
        contentEditable={false}
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDoubleClick={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        style={Object {}}
        suppressContentEditableWarning={true}
      >
        Test label text
      </span>
    </styled.span>
  </ThemeProvider>
</Label>
`;

exports[`Test retrieval of default Label props object 1`] = `
Object {
  "bottom": "",
  "children": null,
  "className": "",
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "errorMessage": "",
  "focus": false,
  "height": "",
  "id": "",
  "left": "",
  "location": "none",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "obj": "Label",
  "onBlur": [Function],
  "onChange": [Function],
  "onClick": [Function],
  "onDoubleClick": [Function],
  "onKeyDown": [Function],
  "onKeyPress": [Function],
  "onUpdate": [Function],
  "padding": "",
  "selected": false,
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "text": "â€‹",
  "theme": null,
  "tooltip": "",
  "top": "",
  "useedit": false,
  "visible": true,
  "width": "",
  "xcss": null,
}
`;

exports[`Test the disabling of the Label control 1`] = `
<Label
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  direction="right"
  disabled={true}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Label"
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onDoubleClick={[Function]}
  onKeyDown={[Function]}
  onKeyPress={[Function]}
  onUpdate={[Function]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  text="Test label text"
  theme={null}
  tooltip=""
  top=""
  useedit={false}
  visible={true}
  width=""
  xcss={null}
>
  <ThemeProvider
    theme={
      Object {
        "backgroundColor": "#ffffff",
        "borderColor": "#c0c0c0",
        "color": "#000000",
        "headerBackgroundColor": "#004358",
        "headerForegroundColor": "#ffffff",
        "headerHoverColor": "#ffe11a",
        "hoverColor": "#c0c0c0",
        "inputBorderColor": "#c0c0c0",
        "selectedBackgroundColor": "#1f8a70",
        "selectedForegroundColor": "#ffe11a",
        "tooltipBackgroundColor": "#708090",
        "tooltipForegroundColor": "#ffffff",
        "transitionDelay": "0.5s",
      }
    }
  >
    <styled.span
      className="ui-label"
      contentEditable={false}
      disabled={true}
      innerRef={[Function]}
      onBlur={[Function]}
      onClick={[Function]}
      onDoubleClick={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      sizing="normal"
      style={Object {}}
      suppressContentEditableWarning={true}
      visible={true}
    >
      <span
        className="ui-label sc-bdVaJa eJygKk"
        contentEditable={false}
        disabled={true}
        onBlur={[Function]}
        onClick={[Function]}
        onDoubleClick={[Function]}
        onKeyDown={[Function]}
        onKeyPress={[Function]}
        style={Object {}}
        suppressContentEditableWarning={true}
      >
        Test label text
      </span>
    </styled.span>
  </ThemeProvider>
</Label>
`;
