// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Creation of the Dropdown control 1`] = `
<Wrapper
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  defaultVal="idstr2"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialItem=""
  items={
    Array [
      Object {
        "label": "lstr1",
        "value": "idstr1",
      },
      Object {
        "label": "lstr2",
        "value": "idstr2",
      },
      Object {
        "label": "lstr3",
        "value": "idstr3",
      },
    ]
  }
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Dropdown"
  onError={[Function]}
  onSelect={[Function]}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-dropdown-container"
    sizing="normal"
  >
    <styled.select
      className="ui-dropdown"
      disabled={false}
      id="Dropdown-0"
      onChange={[Function]}
      style={
        Object {
          "backgroundImage": "url(\\"data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='16px' height='16px' viewBox='0 0 24 24'><path fill='#444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>\\")",
          "paddingLeft": "3.2px",
          "paddingRight": "16px",
        }
      }
      value="idstr2"
    >
      <option
        key="0"
        value="idstr1"
      >
        lstr1
      </option>
      <option
        key="1"
        value="idstr2"
      >
        lstr2
      </option>
      <option
        key="2"
        value="idstr3"
      >
        lstr3
      </option>
    </styled.select>
  </styled.div>
</Wrapper>
`;

exports[`Disable the Dropdown control 1`] = `
<Dropdown
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  defaultVal="idstr2"
  direction="right"
  disabled={true}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialItem=""
  items={
    Array [
      Object {
        "label": "lstr1",
        "value": "idstr1",
      },
      Object {
        "label": "lstr2",
        "value": "idstr2",
      },
      Object {
        "label": "lstr3",
        "value": "idstr3",
      },
    ]
  }
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Dropdown"
  onSelect={[MockFunction]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    defaultVal="idstr2"
    direction="right"
    disabled={true}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    initialItem=""
    items={
      Array [
        Object {
          "label": "lstr1",
          "value": "idstr1",
        },
        Object {
          "label": "lstr2",
          "value": "idstr2",
        },
        Object {
          "label": "lstr3",
          "value": "idstr3",
        },
      ]
    }
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    obj="Dropdown"
    onError={[Function]}
    onSelect={[MockFunction]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    tooltip=""
    top=""
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-dropdown-container"
        sizing="normal"
      >
        <div
          className="ui-dropdown-container sc-ifAKCX bOdAmj"
        >
          <styled.select
            className="ui-dropdown"
            disabled={true}
            id="Dropdown-0"
            onChange={[Function]}
            style={
              Object {
                "backgroundImage": "url(\\"data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='16px' height='16px' viewBox='0 0 24 24'><path fill='#444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>\\")",
                "paddingLeft": "3.2px",
                "paddingRight": "16px",
              }
            }
            value="idstr2"
          >
            <select
              className="ui-dropdown sc-EHOje dUnmAx"
              disabled={true}
              id="Dropdown-0"
              onChange={[Function]}
              style={
                Object {
                  "backgroundImage": "url(\\"data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='16px' height='16px' viewBox='0 0 24 24'><path fill='#444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>\\")",
                  "paddingLeft": "3.2px",
                  "paddingRight": "16px",
                }
              }
              value="idstr2"
            >
              <option
                key="0"
                value="idstr1"
              >
                lstr1
              </option>
              <option
                key="1"
                value="idstr2"
              >
                lstr2
              </option>
              <option
                key="2"
                value="idstr3"
              >
                lstr3
              </option>
            </select>
          </styled.select>
        </div>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Dropdown>
`;

exports[`Make the Dropdown control invisible 1`] = `
<Wrapper
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  defaultVal="idstr2"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialItem=""
  items={
    Array [
      Object {
        "label": "lstr1",
        "value": "idstr1",
      },
      Object {
        "label": "lstr2",
        "value": "idstr2",
      },
      Object {
        "label": "lstr3",
        "value": "idstr3",
      },
    ]
  }
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Dropdown"
  onError={[Function]}
  onSelect={[Function]}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={false}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-dropdown-container"
    sizing="normal"
  >
    <styled.select
      className="ui-dropdown"
      disabled={false}
      id="Dropdown-0"
      onChange={[Function]}
      style={
        Object {
          "backgroundImage": "url(\\"data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='16px' height='16px' viewBox='0 0 24 24'><path fill='#444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>\\")",
          "paddingLeft": "3.2px",
          "paddingRight": "16px",
        }
      }
      value="idstr2"
    >
      <option
        key="0"
        value="idstr1"
      >
        lstr1
      </option>
      <option
        key="1"
        value="idstr2"
      >
        lstr2
      </option>
      <option
        key="2"
        value="idstr3"
      >
        lstr3
      </option>
    </styled.select>
  </styled.div>
</Wrapper>
`;

exports[`Test retrieval of Dropdown props object 1`] = `
Object {
  "bottom": "",
  "children": null,
  "className": "",
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": "",
  "focus": false,
  "height": "",
  "id": "",
  "initialItem": "",
  "items": Array [],
  "left": "",
  "location": "none",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "obj": "Dropdown",
  "onSelect": [Function],
  "padding": "",
  "selected": false,
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "theme": null,
  "tooltip": "",
  "top": "",
  "visible": true,
  "width": "",
  "xcss": null,
}
`;

exports[`Test the Dropdown click event 1`] = `
<Dropdown
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  defaultVal="idstr1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  initialItem=""
  items={
    Array [
      Object {
        "label": "lstr1",
        "value": "idstr1",
      },
      Object {
        "label": "lstr2",
        "value": "idstr2",
      },
      Object {
        "label": "lstr3",
        "value": "idstr3",
      },
    ]
  }
  left=""
  location="none"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Dropdown"
  onSelect={[MockFunction]}
  padding=""
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <Wrapper
    bottom=""
    className=""
    contentEditable={false}
    controlled={true}
    defaultVal="idstr1"
    direction="right"
    disabled={false}
    err={null}
    errorMessage=""
    focus={false}
    height=""
    id=""
    initialItem=""
    items={
      Array [
        Object {
          "label": "lstr1",
          "value": "idstr1",
        },
        Object {
          "label": "lstr2",
          "value": "idstr2",
        },
        Object {
          "label": "lstr3",
          "value": "idstr3",
        },
      ]
    }
    left=""
    location="none"
    noedit={false}
    nohover={false}
    noripple={false}
    obj="Dropdown"
    onError={[Function]}
    onSelect={[MockFunction]}
    padding=""
    reset={false}
    selected={false}
    sizing="normal"
    style={Object {}}
    testing={true}
    theme={null}
    tooltip=""
    top=""
    visible={true}
    width=""
    xcss={null}
  >
    <ThemeProvider
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#c0c0c0",
          "color": "#000000",
          "headerBackgroundColor": "#004358",
          "headerForegroundColor": "#ffffff",
          "headerHoverColor": "#ffe11a",
          "hoverColor": "#c0c0c0",
          "inputBorderColor": "#c0c0c0",
          "itemHoverColor": "#bedb39",
          "selectedBackgroundColor": "#1f8a70",
          "selectedForegroundColor": "#ffe11a",
          "tooltipBackgroundColor": "#708090",
          "tooltipForegroundColor": "#ffffff",
          "transitionDelay": "0.5s",
        }
      }
    >
      <styled.div
        className="ui-dropdown-container"
        sizing="normal"
      >
        <div
          className="ui-dropdown-container sc-ifAKCX bOdAmj"
        >
          <styled.select
            className="ui-dropdown"
            disabled={false}
            id="Dropdown-0"
            onChange={[Function]}
            style={
              Object {
                "backgroundImage": "url(\\"data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='16px' height='16px' viewBox='0 0 24 24'><path fill='#444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>\\")",
                "paddingLeft": "3.2px",
                "paddingRight": "16px",
              }
            }
            value="idstr1"
          >
            <select
              className="ui-dropdown sc-EHOje dUnmAx"
              disabled={false}
              id="Dropdown-0"
              onChange={[Function]}
              style={
                Object {
                  "backgroundImage": "url(\\"data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='16px' height='16px' viewBox='0 0 24 24'><path fill='#444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>\\")",
                  "paddingLeft": "3.2px",
                  "paddingRight": "16px",
                }
              }
              value="idstr1"
            >
              <option
                key="0"
                value="idstr1"
              >
                lstr1
              </option>
              <option
                key="1"
                value="idstr2"
              >
                lstr2
              </option>
              <option
                key="2"
                value="idstr3"
              >
                lstr3
              </option>
            </select>
          </styled.select>
        </div>
      </styled.div>
    </ThemeProvider>
  </Wrapper>
</Dropdown>
`;
