// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Creation of the Dropdown control 1`] = `
<Wrapper
  backgroundColor={null}
  borderColor={null}
  bottom={null}
  className={null}
  color={null}
  contentEditable={false}
  controlled={true}
  defaultVal="idstr2"
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  initialItem=""
  items={
    Array [
      Object {
        "label": "lstr1",
        "value": "idstr1",
      },
      Object {
        "label": "lstr2",
        "value": "idstr2",
      },
      Object {
        "label": "lstr3",
        "value": "idstr3",
      },
    ]
  }
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="Dropdown"
  onError={[Function]}
  onSelect={[Function]}
  padding={null}
  reset={false}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip={null}
  top={null}
  visible={true}
  width={null}
  xcss={null}
>
  <Dropdown__DropdownContainerView
    className="ui-dropdown-container"
    sizing="normal"
  >
    <Dropdown__DropdownView
      className="ui-dropdown"
      disabled={false}
      id="Dropdown-0"
      onChange={[Function]}
      style={
        Object {
          "backgroundImage": "url(\\"data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='16px' height='undefined' viewBox='0 0 24 24'><path fill='#444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>\\")",
          "paddingLeft": "3.2px",
          "paddingRight": "16px",
        }
      }
      value="idstr2"
    >
      <option
        value="idstr1"
      >
        lstr1
      </option>
      <option
        value="idstr2"
      >
        lstr2
      </option>
      <option
        value="idstr3"
      >
        lstr3
      </option>
    </Dropdown__DropdownView>
  </Dropdown__DropdownContainerView>
</Wrapper>
`;

exports[`Disable the Dropdown control 1`] = `
<Dropdown
  backgroundColor={null}
  borderColor={null}
  bottom={null}
  className={null}
  color={null}
  contentEditable={false}
  controlled={true}
  defaultVal="idstr2"
  direction="right"
  disabled={true}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  initialItem=""
  items={
    Array [
      Object {
        "label": "lstr1",
        "value": "idstr1",
      },
      Object {
        "label": "lstr2",
        "value": "idstr2",
      },
      Object {
        "label": "lstr3",
        "value": "idstr3",
      },
    ]
  }
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="Dropdown"
  onSelect={[MockFunction]}
  padding={null}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip={null}
  top={null}
  visible={true}
  width={null}
  xcss={null}
/>
`;

exports[`Make the Dropdown control invisible 1`] = `
<Dropdown
  backgroundColor={null}
  borderColor={null}
  bottom={null}
  className={null}
  color={null}
  contentEditable={false}
  controlled={true}
  defaultVal="idstr2"
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  initialItem=""
  items={
    Array [
      Object {
        "label": "lstr1",
        "value": "idstr1",
      },
      Object {
        "label": "lstr2",
        "value": "idstr2",
      },
      Object {
        "label": "lstr3",
        "value": "idstr3",
      },
    ]
  }
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="Dropdown"
  onSelect={[MockFunction]}
  padding={null}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip={null}
  top={null}
  visible={false}
  width={null}
  xcss={null}
/>
`;

exports[`Test retrieval of Dropdown props object 1`] = `
Object {
  "backgroundColor": null,
  "borderColor": null,
  "bottom": null,
  "children": null,
  "className": null,
  "color": null,
  "contentEditable": false,
  "controlled": true,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": null,
  "focus": false,
  "height": null,
  "id": null,
  "initialItem": "",
  "items": Array [],
  "left": null,
  "location": "none",
  "minHeight": null,
  "minWidth": null,
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "notheme": false,
  "notooltip": false,
  "obj": "Dropdown",
  "onSelect": [Function],
  "padding": null,
  "selected": false,
  "sizing": "normal",
  "style": Object {},
  "testing": true,
  "theme": null,
  "tooltip": null,
  "top": null,
  "visible": true,
  "width": null,
  "xcss": null,
}
`;

exports[`Test retrieval of Dropdown props object 2`] = `
Object {
  "children": null,
  "classes": b {
    "_classes": Map {
      "ui-dropdown" => true,
    },
    "_clstr": "",
    "_delimiter": " ",
    "_dirty": true,
    "_obj": null,
    "delete": [Function],
    "reset": [Function],
  },
  "currentValue": "",
  "sizing": "normal",
  "style": Object {},
}
`;

exports[`Test the Dropdown click event 1`] = `
<Dropdown
  backgroundColor={null}
  borderColor={null}
  bottom={null}
  className={null}
  color={null}
  contentEditable={false}
  controlled={true}
  defaultVal="idstr1"
  direction="right"
  disabled={false}
  err={null}
  errorMessage={null}
  focus={false}
  height={null}
  id={null}
  initialItem=""
  items={
    Array [
      Object {
        "label": "lstr1",
        "value": "idstr1",
      },
      Object {
        "label": "lstr2",
        "value": "idstr2",
      },
      Object {
        "label": "lstr3",
        "value": "idstr3",
      },
    ]
  }
  left={null}
  location="none"
  minHeight={null}
  minWidth={null}
  noedit={false}
  nohover={false}
  noripple={false}
  notheme={false}
  notooltip={false}
  obj="Dropdown"
  onSelect={[MockFunction]}
  padding={null}
  selected={false}
  sizing="normal"
  style={Object {}}
  testing={true}
  theme={null}
  tooltip={null}
  top={null}
  visible={true}
  width={null}
  xcss={null}
/>
`;
