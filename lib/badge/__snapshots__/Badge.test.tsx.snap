// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test creation of a Badge control 1`] = `
<Wrapper
  bottom=""
  className="test-class"
  contentEditable={false}
  controlled={true}
  counter={1}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="topRight"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Badge"
  onClick={[Function]}
  onError={[Function]}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "blue",
      "color": "red",
    }
  }
  suppress={true}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-badge-container"
  >
    Test Component
    <styled.div
      className="ui-badge test-class"
      disabled={false}
      location="topRight"
      onClick={[Function]}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "blue",
          "border": "solid 3px",
          "color": "red",
        }
      }
      visible={true}
    >
      1
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test making the Badge control invisible 1`] = `
<Wrapper
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  counter={0}
  direction="right"
  disabled={false}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="topRight"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Badge"
  onClick={[Function]}
  onError={[Function]}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "white",
      "border": "solid 3px",
      "color": "red",
    }
  }
  suppress={false}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={false}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-badge-container"
  >
    <styled.div
      className="ui-badge"
      disabled={false}
      location="topRight"
      onClick={[Function]}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "white",
          "border": "solid 3px",
          "color": "red",
        }
      }
      visible={false}
    >
      0
    </styled.div>
  </styled.div>
</Wrapper>
`;

exports[`Test retrieval of Badge props object 1`] = `
Object {
  "bottom": "",
  "children": null,
  "className": "",
  "contentEditable": false,
  "controlled": true,
  "counter": 0,
  "direction": "right",
  "disabled": false,
  "err": null,
  "errorMessage": "",
  "focus": false,
  "height": "",
  "id": "",
  "left": "",
  "location": "topRight",
  "noedit": false,
  "nohover": false,
  "noripple": false,
  "obj": "Badge",
  "onClick": [Function],
  "padding": "",
  "selected": false,
  "sizing": "normal",
  "style": Object {
    "backgroundColor": "white",
    "border": "solid 3px",
    "color": "red",
  },
  "suppress": false,
  "testing": true,
  "theme": null,
  "tooltip": "",
  "top": "",
  "visible": true,
  "width": "",
  "xcss": null,
}
`;

exports[`Test the disabling of a Badge control 1`] = `
<Wrapper
  bottom=""
  className=""
  contentEditable={false}
  controlled={true}
  counter={0}
  direction="right"
  disabled={true}
  err={null}
  errorMessage=""
  focus={false}
  height=""
  id=""
  left=""
  location="topRight"
  noedit={false}
  nohover={false}
  noripple={false}
  obj="Badge"
  onClick={[Function]}
  onError={[Function]}
  padding=""
  reset={false}
  selected={false}
  sizing="normal"
  style={
    Object {
      "backgroundColor": "white",
      "border": "solid 3px",
      "color": "red",
    }
  }
  suppress={false}
  testing={true}
  theme={null}
  tooltip=""
  top=""
  visible={true}
  width=""
  xcss={null}
>
  <styled.div
    className="ui-badge-container"
  >
    <styled.div
      className="ui-badge"
      disabled={true}
      location="topRight"
      onClick={[Function]}
      sizing="normal"
      style={
        Object {
          "backgroundColor": "white",
          "border": "solid 3px",
          "color": "red",
        }
      }
      visible={true}
    >
      0
    </styled.div>
  </styled.div>
</Wrapper>
`;
